[
    {
        "id": "1f780f8f.dbcd5",
        "type": "tab",
        "label": "Init_flow",
        "disabled": false,
        "info": "### "
    },
    {
        "id": "2ea8044e35389b3f",
        "type": "tab",
        "label": "Connections",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e10bdbef.f84828",
        "type": "tab",
        "label": "Sensor - Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "013c27e6e1e7446d",
        "type": "tab",
        "label": "Pekaway Display 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "84e1e28dc937c84a",
        "type": "tab",
        "label": "PekawayDisplay UserData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e2902b7e.e22d58",
        "type": "tab",
        "label": "Relay Controller",
        "disabled": false,
        "info": "# "
    },
    {
        "id": "f75bc952.6d3f78",
        "type": "tab",
        "label": "Wifi Relay",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0e4ef1e0739bd351",
        "type": "tab",
        "label": "Dimmer Controller",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d916bf99.e1981",
        "type": "tab",
        "label": "Daly BMS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b6cd7d08.34935",
        "type": "tab",
        "label": " HeaterControls + MaxxFan",
        "disabled": false,
        "info": ""
    },
    {
        "id": "60d59772.e5b728",
        "type": "tab",
        "label": "Heater Autoterm",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d1927ff20ab983a",
        "type": "tab",
        "label": "Heater China Diesel",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b8917b97d5ee0c66",
        "type": "tab",
        "label": "Heater Webasto",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b14c00f226d9b539",
        "type": "tab",
        "label": "Heater LFBros (433MHz)",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8de8c284cb7a3883",
        "type": "tab",
        "label": "JBD/GENERIC BMS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e604dd9.4dd232",
        "type": "tab",
        "label": "TempSensor DS18B20",
        "disabled": false,
        "info": ""
    },
    {
        "id": "08035fcf5428650d",
        "type": "tab",
        "label": "Pekaway Shunt  +  WaterLevel Python",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e78e73d3.53155",
        "type": "tab",
        "label": "HTTP API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "71d2baa986138c38",
        "type": "tab",
        "label": "MQTT API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f3c72e93.fad02",
        "type": "tab",
        "label": "VE.Direct",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8a3d660f.83b628",
        "type": "tab",
        "label": "WifiAP",
        "disabled": false,
        "info": ""
    },
    {
        "id": "527dade3be53f8eb",
        "type": "tab",
        "label": "Monit",
        "disabled": false,
        "info": ""
    },
    {
        "id": "40d4ba5c28e4a6be",
        "type": "tab",
        "label": "BLE connections",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c60a5166bd6dac41",
        "type": "tab",
        "label": "Wifi TOUCHPANEL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "67973ee8.553c3",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c6146f7c61b2f3c",
        "type": "tab",
        "label": "Debug",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c3e6360c8bbf5f2e",
        "type": "tab",
        "label": "Update",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d1a4ceb114f5619d",
        "type": "tab",
        "label": "new version",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d9229161.b8548",
        "type": "ui_group",
        "name": "Switches",
        "tab": "2fa37e0c8559eb92",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b31a36.d8d7c5c",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#3ececd",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#3ececd",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#3ececd",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#7bdddd",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#3ececd",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Pekaway Control",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d2c3df97.cf732",
        "type": "ui_group",
        "name": "Info Webasto",
        "tab": "5007f157b6c708d0",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8db3199.f0dbe",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "deee53a800de461d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c103828.22b0b8",
        "type": "ui_group",
        "name": "Temperatur Names",
        "tab": "53ef2f8d6450b467",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "581519e1.3431d8",
        "type": "ui_group",
        "name": "Relay Name",
        "tab": "48a506721dca8171",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "31dacdc4.d39832",
        "type": "ui_group",
        "name": "VanPI Shunt",
        "tab": "deee53a800de461d",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1032e8ff.e5a657",
        "type": "ui_group",
        "name": "Water Level Names",
        "tab": "53ef2f8d6450b467",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e60b8bd1.9669b8",
        "type": "ui_group",
        "name": "BMS INFO",
        "tab": "deee53a800de461d",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b6314699.049798",
        "type": "ui_group",
        "name": "Wifi",
        "tab": "6d1ed7818715dcbd",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7ac84a4b.f75494",
        "type": "ui_group",
        "name": "WIFI",
        "tab": "2fa37e0c8559eb92",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3c4f964.612a28",
        "type": "ui_group",
        "name": "Wifi Relay Name",
        "tab": "48a506721dca8171",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4b3907bf.1686b8",
        "type": "ui_group",
        "name": "Victron Inverter",
        "tab": "150fce8d5d1bec4f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7bd243ed.9f706c",
        "type": "ui_group",
        "name": "Victron SmartSolar",
        "tab": "150fce8d5d1bec4f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ea26502.8c263c",
        "type": "ui_group",
        "name": "Victron Shunt",
        "tab": "150fce8d5d1bec4f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "592e6d4c2e6f23cb",
        "type": "ui_group",
        "name": "Battery",
        "tab": "72361f1d56c6ed7e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "84acc58546c6e0c3",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "72361f1d56c6ed7e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "08520917599edab9",
        "type": "ui_group",
        "d": true,
        "name": "USB device",
        "tab": "068ee5ef3c6d888c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dbb060739248855a",
        "type": "ui_group",
        "name": "Internet",
        "tab": "068ee5ef3c6d888c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0ae34e221b8d2997",
        "type": "ui_group",
        "name": "Load backup",
        "tab": "068ee5ef3c6d888c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "00c90244e8033802",
        "type": "ui_group",
        "name": "VANPI Shunt",
        "tab": "1b7846a35b09245e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e1aef104cda6dd6b",
        "type": "ui_group",
        "name": "Raspberry",
        "tab": "72361f1d56c6ed7e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f8dff812e7e8cb37",
        "type": "ui_group",
        "name": "User Data",
        "tab": "068ee5ef3c6d888c",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c2ace427a9c5210",
        "type": "ui_spacer",
        "z": "1f780f8f.dbcd5",
        "name": "spacer",
        "group": "00c90244e8033802",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "84ad469212f41640",
        "type": "ui_spacer",
        "z": "1f780f8f.dbcd5",
        "name": "spacer",
        "group": "1032e8ff.e5a657",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "b39a769e1a5ab2d0",
        "type": "ui_group",
        "name": "Dimmer",
        "tab": "2fa37e0c8559eb92",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74ee510a9f24426c",
        "type": "ui_group",
        "name": "Dimmer Relay Name",
        "tab": "48a506721dca8171",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4e9949f3b6e19991",
        "type": "mcp23017chip",
        "addr": "0x20",
        "interval": "100"
    },
    {
        "id": "7e769fe6b926f5c6",
        "type": "ui_group",
        "name": "Wifi-Relays",
        "tab": "79d5e2e6e018589a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4ee45356a6231e7",
        "type": "ui_group",
        "name": "Settings",
        "tab": "f1f02c2b78d81470",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "22cf294bc3fa89ec",
        "type": "ui_group",
        "name": "Settings",
        "tab": "48a506721dca8171",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f06428cbbee24a1a",
        "type": "ui_group",
        "name": "RPI",
        "tab": "0680ad9d81ab7455",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3110bd0cd79c2a1",
        "type": "ui_group",
        "name": "Bluetooth",
        "tab": "0680ad9d81ab7455",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7b10e4dc1f23ce3",
        "type": "ui_group",
        "name": "Victron Shunt",
        "tab": "deee53a800de461d",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "927ebb87c84ca699",
        "type": "ui_group",
        "name": "Raspberry Information",
        "tab": "eeb6c9f9f57ee44d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "683559ccdfbe007a",
        "type": "ui_spacer",
        "z": "c3e6360c8bbf5f2e",
        "name": "spacer",
        "group": "dbb060739248855a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e39190910d56df3",
        "type": "ui_spacer",
        "z": "c3e6360c8bbf5f2e",
        "name": "spacer",
        "group": "4373a7f49bda8706",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "188bc5875dcdebe6",
        "type": "ui_group",
        "d": true,
        "name": "Settings",
        "tab": "0afb43d49b1640e6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f10cd60a4aea0aac",
        "type": "ui_group",
        "d": true,
        "name": "Training",
        "tab": "0afb43d49b1640e6",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "25fbcd2f8eb3baa9",
        "type": "ui_group",
        "d": true,
        "name": "Test commands",
        "tab": "0afb43d49b1640e6",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "62406e15c79766b2",
        "type": "ui_group",
        "d": true,
        "name": "LFBros",
        "tab": "5007f157b6c708d0",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad6693f831ad6b68",
        "type": "ui_group",
        "name": "hidden config",
        "tab": "0680ad9d81ab7455",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b54104dfc2549c8a",
        "type": "ui_group",
        "name": "Switches",
        "tab": "ce4b4d8e84b26d99",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "53857bc3b2682217",
        "type": "ui_group",
        "name": "Wifi Switches",
        "tab": "ce4b4d8e84b26d99",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "dcc4cb1313e07d29",
        "type": "ui_group",
        "name": "Dimmer",
        "tab": "ce4b4d8e84b26d99",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d93ee74d4f9e99b5",
        "type": "ui_group",
        "name": "Auto turn off",
        "tab": "ce4b4d8e84b26d99",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aee3a58db487da01",
        "type": "ui_group",
        "name": "MCP Input 1",
        "tab": "63bbd5a80a5fa86d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "060a080471bf7629",
        "type": "ui_group",
        "name": "MCP Input 2",
        "tab": "63bbd5a80a5fa86d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0173d9219f0fd2eb",
        "type": "ui_group",
        "name": "MCP Input 3",
        "tab": "63bbd5a80a5fa86d",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5271d0baafdcf2a4",
        "type": "ui_group",
        "name": "MCP Input 4",
        "tab": "63bbd5a80a5fa86d",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a71e0b8c35f55c99",
        "type": "ui_group",
        "name": "MCP Input 5",
        "tab": "63bbd5a80a5fa86d",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8096636914635a24",
        "type": "ui_group",
        "name": "MCP Input 6",
        "tab": "63bbd5a80a5fa86d",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6be979199ffe0de1",
        "type": "ui_group",
        "name": "Dimmy Temperature Names",
        "tab": "53ef2f8d6450b467",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cdfe5cc799303fe2",
        "type": "ui_group",
        "name": "Dimmy Temperature",
        "tab": "deee53a800de461d",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b52454628793b62",
        "type": "PCA9685",
        "deviceNumber": "1",
        "address": "85",
        "frequency": "200"
    },
    {
        "id": "7a4cccdc02082fbb",
        "type": "ui_group",
        "name": "MaxxAir MaxxFan",
        "tab": "fe23d70511f62324",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4373a7f49bda8706",
        "type": "ui_group",
        "name": "Info Autoterm",
        "tab": "5007f157b6c708d0",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "13f0e9b5.d6ad16",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "50",
        "bin": "bin",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "fa8eeb57.177cb8",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bc06df1c.ad422",
        "type": "ui_group",
        "name": "System Config",
        "tab": "0680ad9d81ab7455",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "635c30f7656116e2",
        "type": "serial-port",
        "serialport": "/dev/ttyPKW1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "41701c9d2e39737e",
        "type": "serial-port",
        "serialport": "/dev/ttyPKW2",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ccce6b9ce5924ec6",
        "type": "serial-port",
        "serialport": "/dev/ttyPKW3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "e3c8faf77aeea751",
        "type": "serial-port",
        "serialport": "/dev/ttyPKW4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "dba432f2.5f9a",
        "type": "serial-port",
        "serialport": "/dev/ttyAMA1",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "eb1c4820.31d898",
        "type": "ui_group",
        "name": "Info China Heater",
        "tab": "5007f157b6c708d0",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "53df28c11a99d1b9",
        "type": "ui_group",
        "name": "Debug Options",
        "tab": "e8572dc2d811067f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "deee53a800de461d",
        "type": "ui_tab",
        "name": "Info",
        "icon": "mi-info",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2fa37e0c8559eb92",
        "type": "ui_tab",
        "name": "Switches",
        "icon": "mi-toggle_on",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "83efe75b9db71cfa",
        "type": "ui_group",
        "name": "Water",
        "tab": "deee53a800de461d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5007f157b6c708d0",
        "type": "ui_tab",
        "name": "Heater",
        "icon": "mi-whatshot",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2a7d142135bfa4c0",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "5007f157b6c708d0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2bd22a1d380636dc",
        "type": "ui_group",
        "name": "Controls",
        "tab": "5007f157b6c708d0",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d6141426495610b",
        "type": "ui_group",
        "name": "Timer",
        "tab": "5007f157b6c708d0",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "150fce8d5d1bec4f",
        "type": "ui_tab",
        "name": "Victron",
        "icon": "mi-usb",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "72361f1d56c6ed7e",
        "type": "ui_tab",
        "name": "Monitor",
        "icon": "mi-history",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "068ee5ef3c6d888c",
        "type": "ui_tab",
        "name": "Update",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "79d5e2e6e018589a",
        "type": "ui_tab",
        "name": "Firmware WRelays",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "0680ad9d81ab7455",
        "type": "ui_tab",
        "name": "System Config",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "fe23d70511f62324",
        "type": "ui_tab",
        "name": "MaxxFan",
        "icon": "mi-toys",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1f02c2b78d81470",
        "type": "ui_tab",
        "name": "Config",
        "icon": "mi-settings",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6d1ed7818715dcbd",
        "type": "ui_tab",
        "name": "Wifi Config",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "53ef2f8d6450b467",
        "type": "ui_tab",
        "name": "Sensors",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "48a506721dca8171",
        "type": "ui_tab",
        "name": "Switches Settings",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "1b7846a35b09245e",
        "type": "ui_tab",
        "name": "Shunt",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "e8572dc2d811067f",
        "type": "ui_tab",
        "name": "Debug",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "eeb6c9f9f57ee44d",
        "type": "ui_tab",
        "name": "Raspberry Information",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "0afb43d49b1640e6",
        "type": "ui_tab",
        "name": "LFBros Settings",
        "icon": "dashboard",
        "order": 17,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "ce4b4d8e84b26d99",
        "type": "ui_tab",
        "name": "Switch Timer",
        "icon": "dashboard",
        "order": 18,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "63bbd5a80a5fa86d",
        "type": "ui_tab",
        "name": "mcpinput",
        "icon": "dashboard",
        "order": 19,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "0a25611d0d28288e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "0.0.0.0",
        "port": "8883",
        "tls": "4230868a2749a2ba",
        "clientid": "",
        "autoConnect": false,
        "usetls": true,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4230868a2749a2ba",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "0ddb07c65cbb68bc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "http://localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "16c5a1ba154d7a03",
        "type": "ui_group",
        "name": "NS Panel",
        "tab": "068ee5ef3c6d888c",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d67e5a303452213e",
        "type": "ui_group",
        "name": "System Time",
        "tab": "deee53a800de461d",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb0abe7e.248eb",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "init values",
        "func": "//Relays\nglobal.set(\"one\", false);\nglobal.set(\"two\", false);\nglobal.set(\"three\", false);\nglobal.set(\"four\", false);\nglobal.set(\"five\", false);\nglobal.set(\"six\", false);\nglobal.set(\"seven\", false);\nglobal.set(\"eight\", false);\nglobal.set(\"nine\", false);\nglobal.set(\"ten\", false);\nglobal.set(\"Wone\", false);\nglobal.set(\"Wtwo\", false);\nglobal.set(\"Wthree\", false);\nglobal.set(\"Wfour\", false);\nglobal.set(\"Wfive\", false);\nglobal.set(\"Wsix\", false);\nglobal.set(\"Wseven\", false);\nglobal.set(\"Weight\", false);\n\n//name variables\nglobal.set(\"None\", \"wait\");\nglobal.set(\"Ntwo\", \"wait\");\nglobal.set(\"Nthree\", \"wait\");\nglobal.set(\"Nfour\", \"wait\");\nglobal.set(\"Nfive\", \"wait\");\nglobal.set(\"Nsix\", \"wait\");\nglobal.set(\"Nseven\", \"wait\");\nglobal.set(\"Neight\", \"wait\");\nglobal.set(\"Nnine\", \"wait\");\nglobal.set(\"Nten\", \"wait\");\nglobal.set(\"Ntemp1\",\"wait\");\nglobal.set(\"Ntemp2\",\"wait\");\nglobal.set(\"Ntemp3\",\"wait\");\nglobal.set(\"Ntemp4\",\"wait\");\nglobal.set(\"NLevel1\",\"wait\");\nglobal.set(\"NLevel2\",\"wait\");\nglobal.set(\"NLevel3\",\"wait\");\nglobal.set(\"NLevel4\",\"wait\");\nglobal.set(\"NWone\", \"wait\");\nglobal.set(\"NWtwo\", \"wait\");\nglobal.set(\"NWthree\", \"wait\");\nglobal.set(\"NWfour\", \"wait\");\nglobal.set(\"NWfive\", false);\nglobal.set(\"NWsix\", false);\nglobal.set(\"NWseven\", false);\nglobal.set(\"NWeight\", false);\n\n//temp\nglobal.set(\"temp1\",\"\");\nglobal.set(\"temp2\",\"\");\nglobal.set(\"temp3\",\"\");\nglobal.set(\"temp4\",\"\");\nglobal.set(\"dimmytemp1\",\"\");\nglobal.set(\"dimmytemp2\",\"\");\n\n//Heater\nglobal.set(\"heatstatus\",\"wait\");\nglobal.set(\"heattemp\",\"wait\");\nglobal.set(\"heatvolt\",0);\nglobal.set(\"heatfan\",\"wait\");\nglobal.set(\"heatglow\",\"wait\");\nglobal.set(\"heatpump\",0);\nglobal.set(\"heatwpump\",0);\nglobal.set(\"heaterror\",\"no\");\nglobal.set(\"heattempsensor\",0);\nglobal.set(\"hysteresis\",5);\nglobal.set(\"HeaterToggle\",false);\nglobal.set(\"Autotermheatingpower\",0);\n//heatconnect\nglobal.set(\"heatconnectrelay\",\"-1\");\nglobal.set(\"heattimeronoff\",false);\n\n//WaterLevel\nglobal.set(\"Level1\",0);\nglobal.set(\"Level2\",0);\nglobal.set(\"Level3\",0);\nglobal.set(\"Level4\",0);\nglobal.set(\"levelfull\",\"wait\");\nglobal.set(\"levelempty\",\"wait\");\n\n////battery\nglobal.set(\"BATTsoc\",\"wait\");\nglobal.set(\"BATTvolt\",\"wait\");\nglobal.set(\"BATTamps\",\"wait\");\n\n//pekawayshunt\nglobal.set(\"pkwshuntWatthours\",\"wait\");\nglobal.set(\"pkwshunttyp\",\"wait\");\nglobal.set(\"pkwshuntamps\",\"wait\");\nglobal.set(\"pkwshuntMAXWatthours\",\"wait\");\nglobal.set(\"pkwshuntvolt\",\"wait\");\nglobal.set(\"pkwshuntSOC\",\"wait\");\nglobal.set(\"pkwshuntactive\",\"wait\");\nglobal.set(\"shuntcalibrate\",1);\n\n//BMS - Daly-Liontron-jbd-xiaoxing-jbd\nglobal.set(\"BMSamps\",\"wait\");\nglobal.set(\"BMSsoc\",\"wait\");\nglobal.set(\"BMSvolt\",\"wait\");\nglobal.set(\"BMScap\",\"wait\");\nglobal.set(\"BMSmaxcap\",\"wait\");\nglobal.set(\"BMScell1\",\"wait\");\nglobal.set(\"BMScell2\",\"wait\");\nglobal.set(\"BMScell3\",\"wait\");\nglobal.set(\"BMScell4\",\"wait\");\nglobal.set(\"BMScell4\",\"wait\");\nglobal.set(\"BMSminvolt\",\"wait\");\nglobal.set(\"BMSmaxvolt\",\"wait\");\n\n//victronSHUNT\n\n//system\nglobal.set(\"shunt\",\"200\");\nglobal.set(\"USB\",true);\nglobal.set(\"ssid\",\"\");\nglobal.set(\"wpa\",\"\");\nglobal.set(\"IPWIFI4Port\",0);\nglobal.set(\"wifirelay\",false)\nglobal.set(\"stdrelay\",false)\nglobal.set(\"settemp\",20)\nglobal.set(\"multiuart\",0)\n//1 DALY  - 2 VICTRON\nglobal.set(\"usb1uart\",0)\nglobal.set(\"usb2uart\",0)\n//1 DALY  - 2 VICTRON - 3 webasto - 4 chinaheater\nglobal.set(\"PKWshunt\",false);\nglobal.set(\"usb1status\",\"0\")\nglobal.set(\"usb2status\",\"0\")\nglobal.set(\"usbPortcheck_victron\",false)\nglobal.set(\"usbPortcheck_DALYmonit\",false)\nglobal.set(\"usbPortcheck_DALYblue\",false)\nglobal.set(\"currentVersion\",\"0.0.0\");\nglobal.set(\"wifiIP\",\"0.0.0.0\");\nglobal.set(\"eth0IP\",\"0.0.0.0\");\n\n/////VE.direct\n//Inverter\nglobal.set(\"VE_AC_V\",0);\nglobal.set(\"VE_AC_i\",0);\nglobal.set(\"VE_Vin\",0);\n//SmartSolar\nglobal.set(\"VE_PanelVolt\",0);\nglobal.set(\"VE_PanelPower\",0);\nglobal.set(\"VE_BatteryVolt\",0);\nglobal.set(\"VE_solarCurrent\",0);\n//Shunt\nglobal.set(\"VE_Mainbattery\",0);\nglobal.set(\"VE_StarterBattery\",0);\nglobal.set(\"VE_Current\",0);\nglobal.set(\"VE_Power\",0);\nglobal.set(\"VE_consumedAH\",0);\nglobal.set(\"VE_SOC\",0);\nglobal.set(\"VE_maxVolt\",0);\nglobal.set(\"VE_minVolt\",0);\nglobal.set(\"VE_timetogo\",0);\n\n//BLE\nglobal.set(\"BLEdevice\",\"0\");\nglobal.set(\"MACliontron\",\"\");\nglobal.set(\"ble_bms_empty_counter\", 0)\nglobal.set(\"ble_retry\", 0)\n\n//BMS max-min values\nglobal.set(\"BMSmaxvolthighest\", \"wait\")\nglobal.set(\"BMSminvoltlowest\", \"wait\")\nglobal.set(\"BMSmaxcaphighest\", \"wait\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c7cbcff5.db10e",
        "type": "inject",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "bb0abe7e.248eb",
                "c3e179f9.47e318",
                "14b4a7d6.23a9e8",
                "72204697.5e7d18",
                "71e76301.9a03bc",
                "cb58f8fd7638bcad",
                "73133552bf558250",
                "e88d437867a17dad"
            ]
        ]
    },
    {
        "id": "a47e398b.260cf8",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "set global variables ",
        "info": "",
        "x": 210,
        "y": 160,
        "wires": []
    },
    {
        "id": "211d8ec8.f10ef2",
        "type": "exec",
        "z": "1f780f8f.dbcd5",
        "command": "sudo as'1-1'|sudo tee /sys/bus/usb/drivers/usb/unbind",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c3e179f9.47e318",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "211d8ec8.f10ef2"
            ]
        ]
    },
    {
        "id": "19d15ad5.eedeb5",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/shunt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 880,
        "wires": [
            [
                "c1e31cfa.c8417"
            ]
        ]
    },
    {
        "id": "c1e31cfa.c8417",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n  str = str.substring(0, 3);\n\n global.set(\"shunt\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "9800eddd.497e3",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "get config",
        "info": "",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "14b4a7d6.23a9e8",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "423cba0.d02e248",
                "e1afddf0.78e6",
                "df9f0e4b.b9826"
            ]
        ]
    },
    {
        "id": "7cf8e3cf.bc282c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"heatconnectrelay\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "423cba0.d02e248",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/heatconnect",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1640,
        "y": 380,
        "wires": [
            [
                "7cf8e3cf.bc282c"
            ]
        ]
    },
    {
        "id": "3a9b9ea5.0a4972",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 640,
        "wires": [
            [
                "d4687fdb.22778"
            ]
        ]
    },
    {
        "id": "c025819e.880ba",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 680,
        "wires": [
            [
                "8c200c55.44ac"
            ]
        ]
    },
    {
        "id": "634eed34.7dcfd4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 720,
        "wires": [
            [
                "7ea32a4e.584854"
            ]
        ]
    },
    {
        "id": "1569b76c.efab19",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 760,
        "wires": [
            [
                "f3703803.f35e48"
            ]
        ]
    },
    {
        "id": "a240ee.09a0ff1",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 800,
        "wires": [
            [
                "689aa7cb.2b4bf8"
            ]
        ]
    },
    {
        "id": "d62b8787.eaca38",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 840,
        "wires": [
            [
                "3995db45.c47ce4"
            ]
        ]
    },
    {
        "id": "727b414a.735f6",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name8",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 920,
        "wires": [
            [
                "4275d2e2.10131c"
            ]
        ]
    },
    {
        "id": "4b3355df.7c4eec",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 880,
        "wires": [
            [
                "b4954b5.80b80b8"
            ]
        ]
    },
    {
        "id": "72204697.5e7d18",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 534,
        "y": 592,
        "wires": [
            [
                "3a9b9ea5.0a4972",
                "c025819e.880ba",
                "634eed34.7dcfd4",
                "1569b76c.efab19",
                "a240ee.09a0ff1",
                "d62b8787.eaca38",
                "4b3355df.7c4eec",
                "727b414a.735f6",
                "fb96a8d.fbd7358",
                "da33619d.3d9d2",
                "20ccae05.153222",
                "11227dd8.aa7b82",
                "9c8a60af.99a87",
                "d1e57b73.4b3768",
                "6fa7559b.332e6c",
                "e4ca4d64a82b0cea",
                "137dc61d3bb3ac88",
                "fdf2f349a4240f48",
                "15c2f2cd8f954356",
                "5d3d4dc1100a682d",
                "0fc45db90a975e40",
                "1f68b0852ec01670",
                "ea056e6598b5f8c6",
                "36c5ccc88d0205ae"
            ]
        ]
    },
    {
        "id": "d4687fdb.22778",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"None\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "8c200c55.44ac",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntwo\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "7ea32a4e.584854",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nthree\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f3703803.f35e48",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nfour\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "689aa7cb.2b4bf8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nfive\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3995db45.c47ce4",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nsix\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b4954b5.80b80b8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nseven\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4275d2e2.10131c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Neight\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "fb96a8d.fbd7358",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 600,
        "wires": [
            [
                "8b309d8e.6cd56",
                "9a88743c.68fa38",
                "7ff8e4b2.107fdc",
                "bdb8bf58.43036",
                "8e00c712.f86328",
                "19d15ad5.eedeb5",
                "5819a0db.4a5",
                "8e51d29c.77794",
                "8c189fcd.f8fcf",
                "1cb3ca1c.f0b016",
                "e87b8a50.8ed2a8",
                "9aff28b6.f43488",
                "2c477caf.7c93c4",
                "6f5fed3f.137ccc",
                "4bd6c460.a3a10c",
                "859d8785.a2172",
                "5f216baf.6787b4",
                "f61cdd44.42f2f8",
                "220644bf.30e02c",
                "b86ea0b125621f58",
                "035656429896a1c4",
                "3662f4b64c29ef86",
                "f00e1cecb961a7d2",
                "9a9a0ebb49c374e4",
                "3fda7a71ddd689cc",
                "b0313ebc854f1a83",
                "7eeb589679842223",
                "7837779df3405f84"
            ]
        ]
    },
    {
        "id": "8b309d8e.6cd56",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/tempsensor1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 640,
        "wires": [
            [
                "14ce71ae.07c87e"
            ]
        ]
    },
    {
        "id": "9a88743c.68fa38",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/tempsensor2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 680,
        "wires": [
            [
                "e189b915.9ca968"
            ]
        ]
    },
    {
        "id": "bdb8bf58.43036",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/tempsensor4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 760,
        "wires": [
            [
                "fe0f6dc5.83424"
            ]
        ]
    },
    {
        "id": "7ff8e4b2.107fdc",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/tempsensor3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 720,
        "wires": [
            [
                "f94c98b3.80d0d8"
            ]
        ]
    },
    {
        "id": "14ce71ae.07c87e",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp1\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "e189b915.9ca968",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp2\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1810,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "f94c98b3.80d0d8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp3\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1810,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fe0f6dc5.83424",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp4\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1810,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "8e00c712.f86328",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1980,
        "y": 600,
        "wires": [
            [
                "83c6afe8.0eb37",
                "45effa91.0d3944",
                "26ac7f51.a0509",
                "cb20bc1a.47f41"
            ]
        ]
    },
    {
        "id": "83c6afe8.0eb37",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/level1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2200,
        "y": 600,
        "wires": [
            [
                "d6a2fc2.bfca5"
            ]
        ]
    },
    {
        "id": "45effa91.0d3944",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/level2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2200,
        "y": 640,
        "wires": [
            [
                "248fb81f.6f6b18"
            ]
        ]
    },
    {
        "id": "cb20bc1a.47f41",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/level4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2200,
        "y": 720,
        "wires": [
            [
                "23231e80.b64132"
            ]
        ]
    },
    {
        "id": "26ac7f51.a0509",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/level3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2200,
        "y": 680,
        "wires": [
            [
                "38401a24.12f1e6"
            ]
        ]
    },
    {
        "id": "d6a2fc2.bfca5",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NLevel1\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "248fb81f.6f6b18",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NLevel2\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2410,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "38401a24.12f1e6",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NLevel3\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "23231e80.b64132",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NLevel4\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 2410,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "20ccae05.153222",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "5956311.74dbcd"
            ]
        ]
    },
    {
        "id": "da33619d.3d9d2",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 1080,
        "wires": [
            [
                "f8448ec2.bf3f5"
            ]
        ]
    },
    {
        "id": "11227dd8.aa7b82",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "a53afab2.319868"
            ]
        ]
    },
    {
        "id": "9c8a60af.99a87",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 1160,
        "wires": [
            [
                "7cc94b6.5dd00b4"
            ]
        ]
    },
    {
        "id": "5956311.74dbcd",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWone\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "f8448ec2.bf3f5",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWtwo\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "a53afab2.319868",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWthree\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc94b6.5dd00b4",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWfour\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "6fa7559b.332e6c",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name10",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 1000,
        "wires": [
            [
                "a7b55aab.700688"
            ]
        ]
    },
    {
        "id": "d1e57b73.4b3768",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relay_name9",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 960,
        "wires": [
            [
                "23db853c.100dfa"
            ]
        ]
    },
    {
        "id": "23db853c.100dfa",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nnine\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "a7b55aab.700688",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Nten\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "e1afddf0.78e6",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/stdrelay",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1630,
        "y": 340,
        "wires": [
            [
                "fa38e293.32267"
            ]
        ]
    },
    {
        "id": "71e76301.9a03bc",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/heattempsensor",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 810,
        "y": 400,
        "wires": [
            [
                "23687cb9.0c9ae4"
            ]
        ]
    },
    {
        "id": "23687cb9.0c9ae4",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"heattempsensor\", str);\n  \n \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "fa38e293.32267",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "hide/show relays & set globals",
        "func": "if(msg.payload == \"true\"){\n    global.set(\"stdrelay\", true);\n    msg.payload = { \"group\": { \"show\": [\"Switches_Switches\", \"Switches_Settings_Relay_Name\"] } };\n}\nif(msg.payload == \"false\"){\n    global.set(\"stdrelay\", false);\n    msg.payload = { \"group\": { \"hide\": [\"Switches_Switches\", \"Switches_Settings_Relay_Name\"] } };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 340,
        "wires": [
            [
                "21d02601345bcaa5"
            ]
        ]
    },
    {
        "id": "38596061.39c32",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "build UI",
        "info": "",
        "x": 1590,
        "y": 180,
        "wires": []
    },
    {
        "id": "df9f0e4b.b9826",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 300,
        "wires": [
            [
                "2d440d485e71d1bb"
            ]
        ]
    },
    {
        "id": "5819a0db.4a5",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelfull",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 920,
        "wires": [
            [
                "d623500e.d1ff"
            ]
        ]
    },
    {
        "id": "d623500e.d1ff",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n\n global.set(\"levelfull\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "16700731.7ef189",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"levelempty\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "8e51d29c.77794",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelempty",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1120,
        "wires": [
            [
                "16700731.7ef189"
            ]
        ]
    },
    {
        "id": "6505a36d.7dd13c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"hysteresis\", str);\n  \n return msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1320,
        "wires": [
            [
                "e7f163efc71ccc07"
            ]
        ]
    },
    {
        "id": "8c189fcd.f8fcf",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/hysteresis",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1320,
        "wires": [
            [
                "6505a36d.7dd13c"
            ]
        ]
    },
    {
        "id": "1cb3ca1c.f0b016",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/pekwayShuntactive",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1360,
        "wires": [
            [
                "d2680bbf.1e5cb8",
                "eb009e6dc5ee5d3d"
            ]
        ]
    },
    {
        "id": "d2680bbf.1e5cb8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "\nif(msg.payload == \"true\") \n global.set(\"pkwshuntactive\", true);\n  else\n  global.set(\"pkwshuntactive\", false);\n  \n return msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "63c460c.44d7ba",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "\n\n global.set(\"pkwshunttyp\", msg.payload);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "e87b8a50.8ed2a8",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/pkwshunttyp",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1420,
        "wires": [
            [
                "63c460c.44d7ba",
                "3c454549156f593a"
            ]
        ]
    },
    {
        "id": "9aff28b6.f43488",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelfull1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 960,
        "wires": [
            [
                "6bd0e728.cf2148"
            ]
        ]
    },
    {
        "id": "6bd0e728.cf2148",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n\n global.set(\"levelfull1\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "2c477caf.7c93c4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelfull2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1000,
        "wires": [
            [
                "544f680c.b6f77"
            ]
        ]
    },
    {
        "id": "544f680c.b6f77",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n\n global.set(\"levelfull2\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "6f5fed3f.137ccc",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelfull3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1040,
        "wires": [
            [
                "1843e417.bd2e5c"
            ]
        ]
    },
    {
        "id": "1843e417.bd2e5c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n\n global.set(\"levelfull3\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "4bd6c460.a3a10c",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelfull4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1080,
        "wires": [
            [
                "3ddec7d5.8514b8"
            ]
        ]
    },
    {
        "id": "3ddec7d5.8514b8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n\n global.set(\"levelfull4\", str);\n  \n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "377c7c5.1f00e04",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"levelempty1\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "859d8785.a2172",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelempty1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1160,
        "wires": [
            [
                "377c7c5.1f00e04"
            ]
        ]
    },
    {
        "id": "97f13303.a31568",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"levelempty2\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "5f216baf.6787b4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelempty2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1200,
        "wires": [
            [
                "97f13303.a31568"
            ]
        ]
    },
    {
        "id": "47e250fc.aff328",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"levelempty3\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f61cdd44.42f2f8",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelempty3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1240,
        "wires": [
            [
                "47e250fc.aff328"
            ]
        ]
    },
    {
        "id": "93b88d8c.0bded8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = Number(msg.payload);\n\n global.set(\"levelempty4\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "220644bf.30e02c",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/levelempty4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1560,
        "y": 1280,
        "wires": [
            [
                "93b88d8c.0bded8"
            ]
        ]
    },
    {
        "id": "01052110d8b72b04",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "Pekaway Control v1.1.1 changelog",
        "info": "# Update 1.1.1 (05 May 2023)\n- fixed mcp inputs not being displayed correctly\n- fixed water level 1 error which kept it from taking other values than 0\n- fixed error which prevented \"main battdata\" to be initialised on boot\n- changed sampling frequency of PCA9685 to 200 (dimmer section)\n- changed http request nodes in Pekaway Shunt flow to use 127.0.0.1 instead of localhost\n- added function to start a second Node-RED instance, using a backup flows file\n- added a timezone picker in Frontend (Config > System)\n- added function that displays the system time in the info tab & altered format of system time in frontend (Config)\n\n# Update 1.1.0 (31 Mar 2023) >> changes mentioned here also include BETA updates for this version!\n- added a precompiled .tft file (VanPI_NSPANEL.tft) for the Sonoff NS Panel to ~/pekaway together with the berry driver (autoexec.be), which is needed for the flashing process\n    > quickstart NSPanel:\n        > install Tasmota via https://tasmota.github.io/install/ (choose \"Tasmota32 Sonoff-NSPanel(englisch)\" to be flashed)\n        > connect the panel to the wifi accesspoint of your RPI\n        > use configs as described here: https://docs.nspanel.pky.eu/prepare_nspanel/\n        > set MQTT-Broker to \"pekaway.local\" and topic to \"WifiTouch\" (case sensitive)\n        > go back to the console in tasmota and type:\n            > \"Backlog UrlFetch http://pekaway.local/autoexec.be; Restart 1\" -> downloads the driver from the local filestorage via nginx\n            > \"FlashNextion http://pekaway.local/nspaneltft\" -> flashes the precompiled .tft file\n    > a new flow \"Wifi TOUCHPANEL\" has been added to Node-RED, which also includes examples for the two hardware buttons on the panel\n    > added a function to upload your own .tft file to the raspberry (Config > System > System Update > NS Panel)\n    > added functions to install the berry driver and flash the .tft file (Config > System System Update > NS Panel)\n- added code to the nginx server block to make the berry driver and the .tft file accessible via http\n- added check for i2c devices in dimmer flow to prevent showing error messages if Dimmy is not hardwired\n    > messages to PCA9865-Node are limited to 10msg/s (1msg every 0.1s)\n- added slider to set max_pwm in % as overvoltage protection (config > switches > dimmer section)\n- added dimmytemp sensor data to http endpoint /temp (only when set to active in config)\n- reworked the function that generates the default wifi ssid to be a bit more randomized\n- reworked the function to reset the wifi to use the same process that generates the default wifi ssid\n- reworked the update function \n    > it will now download a script from the Pekaway servers and execute to keep it seperated from Node-RED\n    > the script can be found at git.pekaway.de\n- fixed error that sometimes displayed ble-bms info in textfield for \"currently set battery\" (config)\n- fixed error with libevdev2:armhf package\n______________________________________________________________________________________________________________\n# Update 1.1.0 BETA2 (09 Feb 2023)\n- added functions to control MaxxAir MaxxFan via IR-Transmitter in combination with ESP device\n    > Arduino code still needs to be finalized and published\n- disabled all LFBros functions systemwide and purged WiringPi to make UART-Port available\n- disabled \"gpio readall\" function from debug tab\n- disabled Dimmer 8 (Dimmy board has only 7 channels available)\n- added \"dimmytemp1/2\" to be set as option for inside temp sensor (2 DS18B20 sensors can be connected to the Dimmy board and will sent their data via MQTT)\n- added a PCA9865 node to the dimmer section >> Dimmy can now be connected hardwired without the need for an extra Microcontroller (Wemos)\n    > if you want to, you can disable the mqtt outputs for the dimmers and set the slider to send data continously instead of \"only on release\"\n- added function to insert SSID for existing Wifi manually\n- fixed errors in ~/ble_py/goksens4s.py (was only showing initial values before)\n- fixed function to initialise GokSenso4S on startup\n- disabled update via USB function in frontend (was leading to errors in some cases)\n- added function to turn off BLE Bat/BMS if not reachable\n    > will turn off after 6 failed attempts, then try again after 1 hour (can be turned on again by setting the MAC-adress in the config settings)\n    > info: if BLE cannot establish a connection, it will kick out Wifi-clients and block new wifi connections as long as the BLE-requests is running\n- prepared flows to use a custom cloud mqtt server (see the flow \"MQTT API\" at the bottom) \n- added Autoterm 4D to the list of supported heaters (not all status info is delivered via the protocol though)\n- added a one-time runtimer to the heater controls >> Start the heater, set the timer, heater will stop when time is over\n- changed some settings in the \"Chinese Diesel Heater\" flow, it now works properly with both types of USB-connectors\n- reworked display communication to reduce bandwith\n- new beta file for touchdisplay (1.0.3B) is also available\n\n#    new packages/installations\n    - node-red-contrib-PCA9865\n    - node-red-contrib-countdown-2\n______________________________________________________________________________________________________________\n# Update 1.1.0 BETA (02 Dec 2022)\n- Updated Node-RED core to latest version v3.0.2\n > NOTICE: Node-RED hast to be updated manually (\"bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)\") when using the update function!\n- updated npm packages for Node-RED to latest versions\n- updated rpi packages to latest versions (\"sudo apt upgrade\")\n- added link in update checker to read full changelog\n- set global variable BatteryDataDelivery to empty (\"\") on first boot\n- added some logic to improve the function that rebuilds the UI\n- slightly altered notification message when MainBattData is set to \"off\"\n- fixed error when searching for bluetooth battery (liontron/JBD) automatically (the found battery will now also be set automatically)\n- added functions to switch relays when using MCP input to have an option to add hardwired buttons/switches to the board\n- changed title \"WasserLevel Names\" to \"Water Level Names\"\n- reworked system time in toolbar to show client time instead of system time (JS function that executes on the client browser)\n- changed request interval for bluetooth scale from 20 seconds to 180 minutes so that the scale's battery will not be drained that heavily\n- added function to convert the data from gok-senso4s from hexadecimal to decimal\n- created HTTP endpoint to set the system time (preparation for IoT-bridge update)\n- created HTTP endpoint to turn everything off (relays, w-relays, dimmers)\n > added UI button to turn everything off in Switches Settings\n > added function to save current state before turning everything off in preparation for function to turn everything back on in last known state\n > added MQTT topic to turn everything off\n- added switch to enable/disable Zigbee2MQTT\n- added button to reach Zigbee2MQTT dashboard directly from NR-Frontend (Wifi Config)\n- Zigbee2MQTT dashboard is available on port 8099 (Zigbee2mQTT service will fail to start if no coordinator is connected! It will try to restart every 10s, check the systemd.service for details)\n- the auto turn off function in Switch Scheduler/Timer tab now shows the values of the gobal variables as names, instead of \"Relay 1, Relay 2...\"\"\n- dimmer names now default to \"Dimmer 1, Dimmer 2, etc.\" if names are left empty in frontend\n- deactivated USB-update function\n- added endpoints to get software version in http/mqtt\n- changed monitor chart ranges for temperatures from 6h to 10h\n- updated Homebridge to version 1.6.0, updated plugins to latest versions\n- fixed error that stopped the update function from working\n- fixed error on wifi-relays and homebridge (when firmware is set to shelly, then hb was not notified when w-relay is switched in NR frontend)\n- fixed error that last temperature value was kept after sensor was removed, value is now set to \"\" after removing the sensor\n- changed global variable \"version\" to \"currentVersion\"\n- added two more temperature sensors to be used with the Dimmy board. They can be activated and named in Config -> Sensors tab\n > check flow \"Temperature/DS18B20\" in Node-RED Backend for details\n- error generating new hostkeys on firstboot may appear in v1.0.4 -> fixed by adding a button (\"Generate new SSH hostkey\") to Config -> Debug -> RPI general information\n- disabled swapping system-wide and deleted swapfile /var/swap\n- added function to save install date of current version to file and retrieve when checking for updates\n\n#    new packages/installations\n    - node-red-node-ui-list\n    - node-red-contrib-zigbee2mqtt\n    - zigbee2mqtt (https://www.zigbee2mqtt.io/guide/installation/01_linux.html)\n______________________________________________________________________________________________________________\n# Update 1.0.4 (07 Sep 2022)\n- added callback query when resetting water level calibration\n- fixed function \"searching for backup files\" when folder is empty\n- reworked upload/download UserData functions\n- fixed function for relays \"autoturnoff\" to work properly after rebooting (delay restarts at time of boot)\n- fixed relay tabs showing up properly when deploying while Switches tab is in focus\n- fixed function sending MQTT stats every 5min (Wifi-Config -> \"Send stats via MQTT\")\n______________________________________________________________________________________________________________\n# Update 1.0.3\n- fixed monitoring waterlevels to not show more than 100%\n- changed touchdisplay switch (page) from number to string\n- reworked building of UI to be more stable\n- changed temp2 global variable to be stored as string (fixed to be shown in mobile app, was integer before)\n- added global variables to show BMSmax/min data in mobile app from JBD BL/UART BMS\n- JBD BMS is now available for usage on all 4 USB ports\n- fixed JBD BMS settings (UART)\n- fixed JBD BMS calculations for USB and BL connections\n- changed Daly BMS flow to show capacity in ampere hours\n- added function to generate a new ssh host key on first boot\n- added function to clear bash history when generating new image\n- added function to clear system volume information when generating new image\n- added function to show/hide system time in the toolbar\n- changed uptime function for better visibility in monitor tab\n- deactivated function that updates relay/wifi-relay labels every 3min\n- reworked functions that update switches labels in frontend (update happens when changing to switches tab)\n- switches labels now return to default value when names are deleted (instead of showing nothing)\n- added function to automatically turn off respective switches after a custom set time\n- added schedulers for relays, wifi-relays and dimmers (automatically turn on/off at given times) -> remember to set system time properly or synchronize it automatically (internet access needed)\n    - for dimmer events use true/false for fully on/off, or set a value from 0 to 100\n- prepared \"autooff\" variable in HTTP endpoints (not yet in use, will be used when code for IoT-bridge is updated)\n- prepared new HTTP endpoint \"relayiot\" to be used in futere IoT-bridge code update\n- added usability off payloads \"true\"/\"false\" to be used when switching states of relays/w-relays/dimmers via MQTT\n- fixed PIN numbers in \"/home/pi/pekaway/433Utils/RPi_utils/codesend.cpp\" (line 27) to PIN 4 and \"/home/pi/pekaway/433Utils/RPi_utils/RFSniffer.cpp\" (line 26) to PIN 3 for 433MHz sender/receiver to work with VANPI Relayboard\n______________________________________________________________________________________________________________\n# Update 1.0.2\n- changed relative paths to absolute paths in ~/pekaway/ads_py/web1.py to resolve issues with database\n- created files \"ohm1empty\" & \"ohm1full\" (up to #4) to fix error when calibrating water tank sensors\n- added function to write ohm data before using the adjustment slider\n- changed function to hide/show bms info to fix error when updating UI\n______________________________________________________________________________________________________________\n# Update 1.0.1\n- downgraded OS back to Debian 10 Buster due to problems with ADS packages\n- changed user back to pi to simplify filepaths\n- changed DHCP range to 192.168.4.2-192.168.4.50\n- added van.pi to dnsmasq.conf\n- installed bottle webserver (python) as user pi\n- fixed paths in wifi-scripts (to be used via NR frontend)\n- changed ads_py script to use relative paths\n- renamed button \"Relays\" to \"Switches\" in config menu\n- fixed udev rules (usb connection status)\n- minor bugfixes\n______________________________________________________________________________________________________________\n# Major Update 1.0.0\n- updated OS to Debian 11 Bullseye\n- updated Node-Red to version 2.2.2\n- removed function to auto rebuilt  UI when changing to info tab\n- added function to rebuilt UI when changing to config tab\n- added query for bluetooth battery to built UI accordingly\n- fixed battery (bluetooth) function to correctly show/hide bms info\n- added function to automatically update relay names when entering tabs (debug, heater, settings, switches)\n- changed absolute paths to relative paths in .sh files\n- changed monitor timestamp interval to 60s for waterlevels and 30s for rpi usage\n- added bms info to HTTP API and MQTT API\n- added reboot function to HTTP API\n- added topic 'conniot' to HTTP API for IoT Bridge\n- added topic 'wrelayiot' to HTTP API for IoT Bridge (same as 'wrelay' but without firmware info)\n- optimized dimmer label functions\n- optimized wrelay I/O for touchdisplay\n- added option to reset bluetooth devices\n- removed DS18B20 node and added DS18B20.py instead\n______________________________________________________________________________________________________________\n# Update 0.9.1\n- bug fixes from v0.9.0\n- change Temperature node\n- DALY MONIT Issuse solved\n- name PKW Shunt to VANPI SHUNT\n\n# Update 0.9.0 \n- Display Version 0.6b - improved communication\n- Heater hysteresis is working\n- added reset waterlevel calibration\n- fixed cell voltage for daly\n- changed Victron name in the UART menus to \"Ve.Direct\"\n- added wemos d1 flasher\n- added names api\n- added flows to rebuild ui when opening tabs\n- seperated config into tabs for better overview\n- rearranged all nodes in all flows for better backend overview\n- source folder for pekaway data changed to /home/pi/pekaway\n- seperated init_flow >> init_flow and connections (USB/UART connections)\n- added new global variables \"MainBattAmps\", \"MainBattVolts\" & \"MainBattSoc\", battery values from all source destinations will be copied into these variables\n- added new option to set battery stats in the config (frontend) for \"MainBattDelivery\" - HAS TO BE SET!!\n- Display flow is now seperated into two flows for better overview\n- Dimmer Controller for Mosfetboard (to be released soon -> 7 mosfets for dimmable lights etc.)\n- integrated flasher mode to easily flash Wemos D1 directly from the Pi\n- integrated JDB/GENERIC BMS to be used with the system\n- new \"ConnectedRelay\" variable for turning heater on/off via relay (including hysteresis check)\n- added LFBros Heater (433Mhz remote control), 433Mhz receiver and sender for raspberry needed! installed WiringPi for realisation\n- included HTTP API to toggle relays get information about the system, rename names, set heater etc.\n- included MQTT API to toggle relays get information about the system, rename names, set heater etc.\n- changed the timing interval for monitor tab from 20s to 25s and less datapoints in charts (from 1000 to 600)\n- added a new flow BLE Connections to connect BLE devices, currently supported: LIONTRON/JBD bluetooth Battery, GOK Senso4s Bluetooth scale\n- added options in config to set dimmer names, added a debug option for Mosfetboard to show connection and MQTT stats\n- added toggable function to send all stats via MQTT every 5min\n- added template controls to open desired tabs when pressing buttons (menu navigation) leading to better overview\n- added a debug tab with several functions to get information about the system and the Raspberry Pi itself\n- update function is now capable of installing new packages via apt-get/apt and npm (lists are publicly available at git.pekaway.de, please make sure to read through them before using any download automations)\n- wifi relays do now support tasmota and shelly\n- the protocol used for the touchdisplay has been changed to run more smoothly and stable, already set names have to be set again as they will show weird stuff when upgrading from the old version\n- touchdisplay v0.6b only compatible with RPI-Image v0.9.0 BETA and above!!\n- buttons and waterlevels that are not being used can be disabled on the touchdisplay\n- Votronic tank sensors can be calibrated directly (up to 2.4V max!)\n- Water tank calibrations can be resetted\n- serial USB connections are fixed via a new set of udev rules\n\n# Update 0.8.0\n- added package esptool\n\tnew package \"esptool\" can be installed with `sudo apt-get install esptool`\n- added ESP32&ESP8266 Tasmota Mosfet bins to disk\n- added Flashermode to Node-Red -> enables flashing of ESP32/ESP8266 directly on the pi with the tasmota bins to control the mosfetboard (upcoming)\n- added a \"restart web1.py after crash\" function\n- added flow Dimmer Controller (controls dimmers in dashboard and Homebridge)\n- added dimmer logic in config flow (hide/show dimmers and debug mode)\n- added watchdog for mosfetboard (ESP32/8266)\n- added Homebridge support for dimmers\n- updated Homebridge to v1.4.0\n- added npm install node-red-contrib-mcp23017chip\n- added bmv 712 victron pid\n- added pekaway display 2 -> add slider to display\n- added jbd/generic BMS (basic)\n- added LionTron Battery Bluetooth\n- remove new version from PID Controll Autoterm\n- add connection flow for all serial/bluetooth connections\n- add rules for portbinding serialconnections\n- remove usb serial swap \n- \n\n# Update 0.7.4\n- improved PID Controll Autoterm\n- added \"check for update\" button in update flow to check if an update is available\n- hotfix for the Wifi scan problem from v0.7.3\n\n\n# Update 0.7.3\n- added PID Controller npm install node-red-contrib-pid-controller\n\tNew npm module needed! Use `cd .node-red && npm install node-red-contrib-pid-controller`\n- PID Heatcontroller Autoterm\n- added backup and restore userData\n\tnew packages \"zip\" & \"unzip\" are required! Use `sudo apt-get install zip unzip` to install them\n- added Nest-style heattemperature-Widget\n\n\n# Update 0.7.2\n - add pekawaydisplay UserData Flow\n - improve DisplaySettings -> show ips\n - new display version 0.4\n\n\n\n# Update 0.7.1\n - update tab fix\n - autoterm temperaturemode added\n\n\n# Update 0.7.0\n- webasto flow improvements \n- autoterm improvements\n- SET PARITY WEBASTO not fixed\n- display switch error fix\n\n\n# Update 0.6.9\n- added homebridge reset function\n- fixed voltage calibration function\n\n# Update 0.6.8\n- calbriate voltfactor function\n- integrated update notification\n- remove redbot and telegram flow (flow to be found on gitlab )\n- added MQTT Broker to switch relays via Tasmota/Apple Home\n- added homebridge support to use Apple Home via MQTT (homebridge running on port 8581 with login admin:pekawayfetzt)\n- added function to resize filesystem in config (if SD-card not using full size for some reason)\n- added rpi monitoring to the monitor tab\n- added button to show ip-adress of both, wlan0 and eth0\n\n\nimage 0.6.7\n- added possibilities to update the flows with USB-device and/or with internet connection (via curl git.pekaway.de/...)\n- added option to create backups manually\n- added option to delete existing backups to save space\n- added a function to load existing backups\n- added delay before restarting hostapd and dnsmasq when switching between Access Point modes\n- change Heater flow - each heater has now one flow\n- relayorder issue solved\n- usb swap detection \n\n\nimage 0.6.6\n\n- add watchdog to shunt script\n- increase voltage reading\n- add custom batterySize (watthours)\n- load shunt config after start\n- add Monitor Tab for Battery and Temperatur\n- reload old relay status after reboot\n- remove network time snyc -> time from display or realtime clock \n      ->sudo systemctl stop systemd-timesyncd\n      ->sudo systemctl disable systemd-timesyncd\n- add telegram bot flow\n\n\nimage 0.6.5\n\n- adjusted timezone to CEST/Berlin\n- solved issue with custom wifi connection not working because of double quotation marks\n- removed duplicate textfield of version info in config tab\n- changed slider to set state of charge to dropdown menu\n- changed methods to calibrate water sensors to have better feedback visibility (pop-up) on smaller displays\n\n\nimage 0.6.4\n\n- ADS1115 gain change -> Votronic Sensor\n- Level2 issue solved\n- VersionInfo -> config\n\n\nimage 0.6.3\n\n### Major Changes ###\n- updated Node-Red to v2.0.6\n- updated dashboard to v3.0.4\n- added template node to generate stylesheet for the dashboard\n- added control for autoterm heater\n\n### Minor Changes ###\n- changed width of battery widget to 6\n- cleaned flow 'VE.Direct' in backend\n- access point name will now include parts (3 chars) of the RPI's hardware serial, so AP-names will be  unique\n--> AP-name is set on first boot only\n- unchecked 'send to all browser sessions' on all notification nodes\n- added a version number with changelog to the 'init' flow\n- changed baudrate on china heater to 9600\n- added favicon for dashboard\n- changed a line of text in index.html (appears when the dashboard is loading)\n- added connection status of USB ports to dashboard config",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb009e6dc5ee5d3d",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "loadconfig_shunt",
        "links": [
            "b09f2cdaf0ee0dad"
        ],
        "x": 1769,
        "y": 1392,
        "wires": []
    },
    {
        "id": "3c454549156f593a",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "loadconfig_shunttype",
        "links": [
            "e28fa7093a1bacde"
        ],
        "x": 1769,
        "y": 1452,
        "wires": []
    },
    {
        "id": "bbb4f216c9f2bdc0",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/relaystatusload",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "cc347c1fbe034eec"
            ]
        ]
    },
    {
        "id": "cb58f8fd7638bcad",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "bbb4f216c9f2bdc0",
                "e5c2f0cbb66d6012"
            ]
        ]
    },
    {
        "id": "9852ba41c78b50e7",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set globals",
        "func": "\nglobal.set(\"one\", msg.payload.one);\nglobal.set(\"two\", msg.payload.two);\nglobal.set(\"three\", msg.payload.three);\nglobal.set(\"four\", msg.payload.four);\nglobal.set(\"five\", msg.payload.five);\nglobal.set(\"six\", msg.payload.six);\nglobal.set(\"seven\", msg.payload.seven);\nglobal.set(\"eight\", msg.payload.eight);\nglobal.set(\"nine\", msg.payload.nine);\nglobal.set(\"ten\", msg.payload.ten);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cc347c1fbe034eec",
        "type": "json",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "9852ba41c78b50e7"
            ]
        ]
    },
    {
        "id": "b86ea0b125621f58",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/shuntcalibrate",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1610,
        "y": 1480,
        "wires": [
            [
                "ac3802fca739de4e"
            ]
        ]
    },
    {
        "id": "ac3802fca739de4e",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "global.set(\"shuntcalibrate\",parseFloat(msg.payload)); ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1814,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "4116525141cf4e0c",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/update",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 740,
        "y": 60,
        "wires": [
            [
                "3d2e48e57ecaef28"
            ]
        ]
    },
    {
        "id": "73133552bf558250",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "4116525141cf4e0c",
                "1ba3c6dea8b0a688"
            ]
        ]
    },
    {
        "id": "3d2e48e57ecaef28",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "func": "msg.payload = msg.payload.trim()\nif(msg.payload == \"1\")\n{\n    msg.payload = \"Welcome to \" + global.get(\"currentVersion\") +\"!\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 912,
        "y": 59,
        "wires": [
            [
                "5dc2da41dbe73329",
                "39b5a752a2e9a352",
                "9e4bf54088d5fb75"
            ]
        ]
    },
    {
        "id": "f20ab50e68e5fcca",
        "type": "file",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/update",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5dc2da41dbe73329",
        "type": "ui_toast",
        "z": "1f780f8f.dbcd5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "39b5a752a2e9a352",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "func": "msg.payload = \"0\";\nvar date = new Date()\nglobal.set(\"installdate\", date)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 100,
        "wires": [
            [
                "f20ab50e68e5fcca",
                "eedd3d20cd755a80"
            ]
        ]
    },
    {
        "id": "fab97a324452bd5c",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "show update info",
        "info": "",
        "x": 540,
        "y": 20,
        "wires": []
    },
    {
        "id": "e4ca4d64a82b0cea",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/version",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 1380,
        "wires": [
            [
                "ed4a9e392e2f8b61"
            ]
        ]
    },
    {
        "id": "ed4a9e392e2f8b61",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "var str = msg.payload.trim();\nglobal.set(\"currentVersion\", str);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1380,
        "wires": [
            [
                "5741e6776c25282c"
            ]
        ]
    },
    {
        "id": "137dc61d3bb3ac88",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 801,
        "y": 1211,
        "wires": [
            [
                "570cffdb99b158ae"
            ]
        ]
    },
    {
        "id": "fdf2f349a4240f48",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 801,
        "y": 1251,
        "wires": [
            [
                "0b84b35d019401ea"
            ]
        ]
    },
    {
        "id": "15c2f2cd8f954356",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 801,
        "y": 1291,
        "wires": [
            [
                "fb92fca3b8c3ce59"
            ]
        ]
    },
    {
        "id": "5d3d4dc1100a682d",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelay_name8",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 1340,
        "wires": [
            [
                "5794b81b612420cb"
            ]
        ]
    },
    {
        "id": "570cffdb99b158ae",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWfive\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1101,
        "y": 1211,
        "wires": [
            []
        ]
    },
    {
        "id": "0b84b35d019401ea",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWsix\", str);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1101,
        "y": 1251,
        "wires": [
            []
        ]
    },
    {
        "id": "fb92fca3b8c3ce59",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWseven\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1101,
        "y": 1291,
        "wires": [
            []
        ]
    },
    {
        "id": "5794b81b612420cb",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"NWeight\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "29969bdc2439facd",
        "type": "inject",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1740,
        "wires": [
            [
                "1c055936a2e014f3",
                "8281f5e3445976ed",
                "d8bae22f106f42ee",
                "3e22301fc280edae",
                "0b0bf2f8411ab2d9",
                "a3e2be16c098d54b",
                "9bf6cd1f5e6db3b4",
                "f7df9191a870e9ac"
            ]
        ]
    },
    {
        "id": "1c055936a2e014f3",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer0",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1620,
        "wires": [
            [
                "ac0f7957fe6cc9e4"
            ]
        ]
    },
    {
        "id": "8281f5e3445976ed",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1660,
        "wires": [
            [
                "9ef973f2cfd5a2ac"
            ]
        ]
    },
    {
        "id": "d8bae22f106f42ee",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1700,
        "wires": [
            [
                "0d13cbbba95009dc"
            ]
        ]
    },
    {
        "id": "3e22301fc280edae",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "2bc92131e105b3d8"
            ]
        ]
    },
    {
        "id": "0b0bf2f8411ab2d9",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1780,
        "wires": [
            [
                "f134938ea464ea31"
            ]
        ]
    },
    {
        "id": "a3e2be16c098d54b",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1820,
        "wires": [
            [
                "4a466d477623ab89"
            ]
        ]
    },
    {
        "id": "9bf6cd1f5e6db3b4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "0cb19945b6676572"
            ]
        ]
    },
    {
        "id": "f7df9191a870e9ac",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1900,
        "wires": [
            [
                "f9a49e26f32fa4d9"
            ]
        ]
    },
    {
        "id": "ac0f7957fe6cc9e4",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer0\", msg.payload.trim());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1620,
        "wires": [
            [
                "3bef611ac27c4ed4"
            ]
        ]
    },
    {
        "id": "9ef973f2cfd5a2ac",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer1\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1660,
        "wires": [
            [
                "5e23f61d43b8c56a"
            ]
        ]
    },
    {
        "id": "0d13cbbba95009dc",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer2\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "cb72631b3282606a"
            ]
        ]
    },
    {
        "id": "2bc92131e105b3d8",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer3\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1740,
        "wires": [
            [
                "fe0bbd93a9ece46a"
            ]
        ]
    },
    {
        "id": "f134938ea464ea31",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer4\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1780,
        "wires": [
            [
                "19755d460a1db476"
            ]
        ]
    },
    {
        "id": "4a466d477623ab89",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer5\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1820,
        "wires": [
            [
                "c5d24e06df20609e"
            ]
        ]
    },
    {
        "id": "0cb19945b6676572",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer6\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1860,
        "wires": [
            [
                "84f7287a1ce17812"
            ]
        ]
    },
    {
        "id": "f9a49e26f32fa4d9",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set state",
        "func": "global.set(\"dimmer7\", Number(msg.payload.trim()));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1900,
        "wires": [
            [
                "c97946cee763f094"
            ]
        ]
    },
    {
        "id": "0c595208ab3e7738",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "set global variables for dimmer values and names on boot",
        "info": "",
        "x": 570,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3bef611ac27c4ed4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer0",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1620,
        "wires": [
            [
                "439f988a62781d9b"
            ]
        ]
    },
    {
        "id": "5e23f61d43b8c56a",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1660,
        "wires": [
            [
                "27e88c5f1b4f7b8f"
            ]
        ]
    },
    {
        "id": "cb72631b3282606a",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1700,
        "wires": [
            [
                "6ee1990c7bc23253"
            ]
        ]
    },
    {
        "id": "fe0bbd93a9ece46a",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1740,
        "wires": [
            [
                "0e8d5edd11fb430a"
            ]
        ]
    },
    {
        "id": "19755d460a1db476",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1780,
        "wires": [
            [
                "beed325372b08af7"
            ]
        ]
    },
    {
        "id": "c5d24e06df20609e",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1820,
        "wires": [
            [
                "c5c0659bee5a566e"
            ]
        ]
    },
    {
        "id": "84f7287a1ce17812",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1860,
        "wires": [
            [
                "12ebe1bb933fe94a"
            ]
        ]
    },
    {
        "id": "c97946cee763f094",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/Ndimmer7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 1900,
        "wires": [
            [
                "31741cc9faf9c7cc"
            ]
        ]
    },
    {
        "id": "439f988a62781d9b",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 1\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer0\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1620,
        "wires": [
            [
                "8162b2e36e019a1e"
            ]
        ]
    },
    {
        "id": "27e88c5f1b4f7b8f",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 2\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer1\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1660,
        "wires": [
            [
                "976581f8be965e6a"
            ]
        ]
    },
    {
        "id": "6ee1990c7bc23253",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 3\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer2\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1700,
        "wires": [
            [
                "166539673334fc31"
            ]
        ]
    },
    {
        "id": "0e8d5edd11fb430a",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 4\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1740,
        "wires": [
            [
                "ada5534e827912c9"
            ]
        ]
    },
    {
        "id": "beed325372b08af7",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 5\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer4\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1780,
        "wires": [
            [
                "11f2bc5db5792cae"
            ]
        ]
    },
    {
        "id": "c5c0659bee5a566e",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 6\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer5\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1820,
        "wires": [
            [
                "18220fbc9894788e"
            ]
        ]
    },
    {
        "id": "12ebe1bb933fe94a",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 7\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer6\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1860,
        "wires": [
            [
                "223ffefbbe8f3d72"
            ]
        ]
    },
    {
        "id": "31741cc9faf9c7cc",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set label",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmer 8\"\n}\nmsg.updatelabel = true\nglobal.set(\"Ndimmer7\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1900,
        "wires": [
            [
                "3325ea1d31b73cc9"
            ]
        ]
    },
    {
        "id": "ee271eb64628fc0a",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer0 value/name",
        "links": [
            "ee045ba769a41128"
        ],
        "x": 1345,
        "y": 1620,
        "wires": []
    },
    {
        "id": "c6b55fd009e69ef0",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer1 value/name",
        "links": [
            "7916894a389bbd36"
        ],
        "x": 1347,
        "y": 1660,
        "wires": []
    },
    {
        "id": "325d9614f6237827",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer2 value/name",
        "links": [
            "7fcbf6231d98df8e"
        ],
        "x": 1345,
        "y": 1700,
        "wires": []
    },
    {
        "id": "31f94e298e95c2b4",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer3 value/name",
        "links": [
            "264c1e36b77d07f6"
        ],
        "x": 1345,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9d8da021cba66085",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer4 value/name",
        "links": [
            "d2e1bd3b20beb5d3"
        ],
        "x": 1345,
        "y": 1780,
        "wires": []
    },
    {
        "id": "3b589471ad93efe2",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer5 value/name",
        "links": [
            "1ec7e2b03700d11d"
        ],
        "x": 1345,
        "y": 1820,
        "wires": []
    },
    {
        "id": "6ce111f8c4860e01",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer6 value/name",
        "links": [
            "344ccfe7251b8276"
        ],
        "x": 1345,
        "y": 1860,
        "wires": []
    },
    {
        "id": "fa4a585a780c2772",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer7 value/name",
        "links": [
            "d8546b510132caa3"
        ],
        "x": 1345,
        "y": 1900,
        "wires": []
    },
    {
        "id": "0fc45db90a975e40",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 1420,
        "wires": [
            [
                "3cad05fe6ab03550"
            ]
        ]
    },
    {
        "id": "3cad05fe6ab03550",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"btbat\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "478ea3480d266c95",
        "type": "link in",
        "z": "1f780f8f.dbcd5",
        "name": "nameupdate",
        "links": [
            "c3680b88.1a7378",
            "88ee532e.6c2ce"
        ],
        "x": 389,
        "y": 592,
        "wires": [
            [
                "72204697.5e7d18"
            ]
        ]
    },
    {
        "id": "e5c2f0cbb66d6012",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/wrelaystatusload",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 810,
        "y": 480,
        "wires": [
            [
                "b29548a803830230"
            ]
        ]
    },
    {
        "id": "80bcb9cb22d8419c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set globals",
        "func": "global.set(\"Wone\", msg.payload.Wone);\nglobal.set(\"Wtwo\", msg.payload.Wtwo);\nglobal.set(\"Wthree\", msg.payload.Wthree);\nglobal.set(\"Wfour\", msg.payload.Wfour);\nglobal.set(\"Wfive\", msg.payload.Wfive);\nglobal.set(\"Wsix\", msg.payload.Wsix);\nglobal.set(\"Wseven\", msg.payload.Wseven);\nglobal.set(\"Weight\", msg.payload.Weight);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "b29548a803830230",
        "type": "json",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "80bcb9cb22d8419c"
            ]
        ]
    },
    {
        "id": "5741e6776c25282c",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "version",
        "mode": "link",
        "links": [
            "75c69cd8e59757aa"
        ],
        "x": 1215,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9a12b5a4245f0b37",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "var str = msg.payload;\nglobal.set(\"BatteryDataDelivery\", str);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1460,
        "wires": [
            [
                "15d0f3207d03c2e2"
            ]
        ]
    },
    {
        "id": "1f68b0852ec01670",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/BatteryDataDelivery",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "9a12b5a4245f0b37"
            ]
        ]
    },
    {
        "id": "0a02f7cfae77fb05",
        "type": "inject",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2020,
        "wires": [
            [
                "e5eb59f27e6502f6",
                "7bbf89d1e1bb86be",
                "64d7cc531e66ad56",
                "4783839267bc05c2",
                "eab92dedca085a2c"
            ]
        ]
    },
    {
        "id": "e5eb59f27e6502f6",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "filename": "pekaway/LFBrosON",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 2020,
        "wires": [
            [
                "4b77e0f00a7c546e"
            ]
        ]
    },
    {
        "id": "7bbf89d1e1bb86be",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "filename": "pekaway/LFBrosOFF",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 2060,
        "wires": [
            [
                "b10c0ec6b8844c73"
            ]
        ]
    },
    {
        "id": "64d7cc531e66ad56",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "filename": "pekaway/LFBrosPLUS",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 2100,
        "wires": [
            [
                "af203fc68c772999"
            ]
        ]
    },
    {
        "id": "4783839267bc05c2",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "filename": "pekaway/LFBrosMINUS",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 2140,
        "wires": [
            [
                "16445c868358cc73"
            ]
        ]
    },
    {
        "id": "4b77e0f00a7c546e",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "func": "global.set(\"LFBrosON\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 659,
        "y": 2021,
        "wires": [
            []
        ]
    },
    {
        "id": "b10c0ec6b8844c73",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "func": "global.set(\"LFBrosOFF\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 659,
        "y": 2061,
        "wires": [
            []
        ]
    },
    {
        "id": "af203fc68c772999",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "func": "global.set(\"LFBrosPLUS\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 659,
        "y": 2101,
        "wires": [
            []
        ]
    },
    {
        "id": "16445c868358cc73",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "func": "global.set(\"LFBrosMINUS\", msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 659,
        "y": 2141,
        "wires": [
            []
        ]
    },
    {
        "id": "723466d08215ca17",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "set global variables for LFBros on boot",
        "info": "",
        "x": 494,
        "y": 1978,
        "wires": []
    },
    {
        "id": "eab92dedca085a2c",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "filename": "pekaway/LFBros",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 441,
        "y": 2182,
        "wires": [
            [
                "f02debf3912b2522"
            ]
        ]
    },
    {
        "id": "f02debf3912b2522",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "function",
        "func": "global.set(\"LFBros\", msg.payload)\nif(msg.payload==\"true\") {\n    msg.payload = {\"group\":{\"show\":[\"Heater_LFBros\"]}};\n    return msg\n}\nelse if(msg.payload==\"false\") {\n    msg.payload = {\"group\":{\"hide\":[\"Heater_LFBros\"]}};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2182,
        "wires": [
            [
                "b50410d3e957e6cd"
            ]
        ]
    },
    {
        "id": "b50410d3e957e6cd",
        "type": "ui_ui_control",
        "z": "1f780f8f.dbcd5",
        "d": true,
        "name": "",
        "events": "all",
        "x": 807,
        "y": 2182,
        "wires": [
            []
        ]
    },
    {
        "id": "e7f163efc71ccc07",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "hyst",
        "mode": "link",
        "links": [
            "24f4c8cbd1618d02"
        ],
        "x": 1905,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8162b2e36e019a1e",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "25",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 1620,
        "wires": [
            [
                "ee271eb64628fc0a"
            ]
        ]
    },
    {
        "id": "976581f8be965e6a",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 1660,
        "wires": [
            [
                "c6b55fd009e69ef0"
            ]
        ]
    },
    {
        "id": "166539673334fc31",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "75",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 1700,
        "wires": [
            [
                "325d9614f6237827"
            ]
        ]
    },
    {
        "id": "ada5534e827912c9",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 1740,
        "wires": [
            [
                "31f94e298e95c2b4"
            ]
        ]
    },
    {
        "id": "11f2bc5db5792cae",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "125",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 1780,
        "wires": [
            [
                "9d8da021cba66085"
            ]
        ]
    },
    {
        "id": "18220fbc9894788e",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 1820,
        "wires": [
            [
                "3b589471ad93efe2"
            ]
        ]
    },
    {
        "id": "223ffefbbe8f3d72",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "175",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 1860,
        "wires": [
            [
                "6ce111f8c4860e01"
            ]
        ]
    },
    {
        "id": "3325ea1d31b73cc9",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 1900,
        "wires": [
            [
                "fa4a585a780c2772"
            ]
        ]
    },
    {
        "id": "875ded8b4dcda778",
        "type": "inject",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "300",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1820,
        "wires": [
            [
                "1c055936a2e014f3",
                "8281f5e3445976ed",
                "3e22301fc280edae",
                "d8bae22f106f42ee",
                "0b0bf2f8411ab2d9",
                "a3e2be16c098d54b",
                "9bf6cd1f5e6db3b4",
                "f7df9191a870e9ac",
                "ac79c3719507c3c0"
            ]
        ]
    },
    {
        "id": "5fd0885ad13b0245",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "(2nd inject to sync homebridge on boot)",
        "info": "",
        "x": 950,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4c283893c7f0d26d",
        "type": "link in",
        "z": "1f780f8f.dbcd5",
        "name": "change tab 1 dimmer names",
        "links": [
            "f5a2124f9c3ff250"
        ],
        "x": 265,
        "y": 1700,
        "wires": [
            [
                "1c055936a2e014f3",
                "8281f5e3445976ed",
                "d8bae22f106f42ee",
                "3e22301fc280edae",
                "0b0bf2f8411ab2d9",
                "a3e2be16c098d54b",
                "9bf6cd1f5e6db3b4",
                "f7df9191a870e9ac"
            ]
        ]
    },
    {
        "id": "ea056e6598b5f8c6",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "systemtime_init_init",
        "mode": "link",
        "links": [
            "2d030be61cb338ee",
            "7bb31b614ef172bc"
        ],
        "x": 705,
        "y": 560,
        "wires": []
    },
    {
        "id": "068ec4f6bd7a5f66",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "MUART, USB, BTbatt, Shunt",
        "func": "/*\nUSB UART:\n0 = nothing\n1 = Daly BMS Bluetooth\n2 = VE.Direct\n3 = Webasto\n4 = China Diesel Heater\n5 = Autoterm 2D\n6 = Daly Monit\n7 = JBD Generic\n8 = Autoterm 4D\n9 = MaxxAir MaxxFan\n*/\nvar multiuart = global.get(\"multiuart1\");\nvar multiuart2 = global.get(\"multiuart2\");\nvar BLE = global.get(\"BLEdevice\");\nvar usb1 = parseInt(global.get(\"usb1uart\"));\nvar usb2 = parseInt(global.get(\"usb2uart\"));\nvar usb3 = parseInt(global.get(\"usb3uart\"));\nvar usb4 = parseInt(global.get(\"usb4uart\"));\nvar btbat = global.get(\"btbat\");\nvar btbat1 = 1;\n\nvar bms_info = {\"group\":{\"hide\":[\"Info_BMS_INFO\"]}};\nvar victron = {\"tabs\":{\"hide\":[\"Victron\"]}};\nlet maxxfan = {\"tabs\":{\"hide\":[\"MaxxFan\"]}};\nvar webasto = {\"group\":{\"hide\":[\"Heater_Info_Webasto\"]}};\nvar chinaheater = {\"group\":{\"hide\":[\"Heater_Info_China_Heater\"]}};\nvar autoterm = {\"group\":{\"hide\":[\"Heater_Info_Autoterm\"]}};\nvar vanpishunt = {\"group\":{\"hide\":[\"Info_VanPI_Shunt\"]}};\nvar victronshunt = {\"group\":{\"hide\":[\"Info_Victron_Shunt\"]}};\nvar dimmytemp = {\"group\":{\"hide\":[\"Info_Dimmy_Temperature\", \"Sensors_Dimmy_Temperature_Names\"]}};\n\nif (btbat == 0 || btbat == \"\" || btbat == undefined || btbat == \"turn off\" || btbat == \"turned off\" || btbat == \"Scan Bluetooth first\") {\n    btbat1 = 0;   \n}\n\n//USB-Ports + Bluetooth Batt/BMS\nif (usb1 == 0 && usb2 == 0 && usb3 == 0 && usb4 == 0) {\n    if(btbat == 0 || btbat == \"\" || btbat == undefined || btbat == \"turn off\" || btbat == \"turned off\" || btbat == \"Scan Bluetooth first\") {\n        bms_info = {\"group\":{\"hide\":[\"Info_BMS_INFO\"]}};\n    }\n    else {\n        bms_info = { \"group\": { \"show\": [\"Info_BMS_INFO\"], \"hide\": []}};\n    }\n}\n\nif(usb1==1 || usb1==6 || usb1 == 7 || usb2==1 || usb2==6 || usb2 == 7 || usb3==1 || usb3==6 || usb3 == 7 || usb4==1 || usb4==6 || usb4 == 7 || multiuart==1 || multiuart==6 || multiuart == 7 || BLE == 1 || multiuart2 == 1 || multiuart2 == 6 || multiuart2 == 7 || btbat1 == 1) {\n    bms_info = { \"group\": { \"show\": [\"Info_BMS_INFO\"], \"hide\": []}};\n}\nif(usb1==2 || usb2==2 || usb3==2 || usb4==2) {\n    victron = { \"tabs\": { \"show\": [\"Victron\"], \"hide\": []}};\n}\nif(usb1==3 || usb2==3 || usb3==3 || usb4==3) {\n    webasto = { \"group\": { \"show\": [\"Heater_Info_Webasto\"], \"hide\": []}};\n}\nif(usb1==4 || usb2==4 || usb3==4 || usb4==4) {\n    chinaheater = { \"group\": { \"show\": [\"Heater_Info_China_Heater\"], \"hide\": []}};\n}\nif (usb1 == 5 || usb2 == 5 || usb3 == 5 || usb4 == 5 || usb1 == 8 || usb2 == 8 || usb3 == 8 || usb4 == 8) {\n    autoterm = { \"group\": { \"show\": [\"Heater_Info_Autoterm\"], \"hide\": []}};\n}\n\n//MUART\nif(multiuart==2 || multiuart2==2) {\n    victron = { \"tabs\": { \"show\": [\"Victron\"], \"hide\": []}};\n}\n\n//Shunt\nif(global.get(\"pkwshuntactive\")==true) {\n    vanpishunt = { \"group\": { \"show\": [\"Info_VanPI_Shunt\"], \"hide\": []}};\n}\nif(global.get(\"BatteryDataDelivery\")==\"VICTRON\") {\n    victronshunt = { \"group\": { \"show\": [\"Info_Victron_Shunt\"], \"hide\": []}};\n}\n\n//Dimmy temp sensors\nif (global.get(\"dimmytemp\") == true) {\n    dimmytemp = { \"group\": { \"show\": [\"Info_Dimmy_Temperature\", \"Sensors_Dimmy_Temperature_Names\"], \"hide\": []}};\n}\n\n//MaxFan Tab\nif (usb1 == 9 || usb2 == 9 || usb3 == 9 || usb4 == 9) {\n    maxxfan = {\"tabs\":{\"show\":[\"MaxxFan\"], \"hide\":[]}};\n}\n\n//send variables to build ui\nmsg.payload = bms_info\nnode.send(msg)\nmsg.payload = victron\nnode.send(msg)\nmsg.payload = webasto\nnode.send(msg)\nmsg.payload = chinaheater\nnode.send(msg)\nmsg.payload = autoterm\nnode.send(msg)\nmsg.payload = vanpishunt\nnode.send(msg)\nmsg.payload = victronshunt\nnode.send(msg)\nmsg.payload = dimmytemp\nnode.send(msg)\nmsg.payload = maxxfan\nnode.send(msg)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 220,
        "wires": [
            [
                "21d02601345bcaa5"
            ]
        ]
    },
    {
        "id": "2d440d485e71d1bb",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "hide",
        "func": "msg.payload={\"group\":{\"hide\":[\"Info_BMS_INFO\",\"Heater_Info_China_Heater\",\"Heater_Info_Webasto\",\"Heater_Info_Autoterm\",\"Info_VanPI_Shunt\",\"Info_Victron_Shunt\",\"Heater_LFBros\"]}};\nnode.send([null, msg])\nmsg.payload={\"tabs\":{\"show\":[\"Heater\"]}};\nnode.send([null, msg])\nmsg.payload={\"tabs\":{\"hide\":[\"Victron\"]}};\nnode.send([null, msg])\nmsg.payload={\"tabs\":{\"hide\":[\"MaxxFan\"]}};\nnode.send([null, msg])\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 300,
        "wires": [
            [
                "1da88df1378741fc"
            ],
            [
                "21d02601345bcaa5"
            ]
        ]
    },
    {
        "id": "1da88df1378741fc",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "25ms",
        "pauseType": "delay",
        "timeout": "25",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1610,
        "y": 260,
        "wires": [
            [
                "068ec4f6bd7a5f66"
            ]
        ]
    },
    {
        "id": "21d02601345bcaa5",
        "type": "ui_ui_control",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "x": 2200,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3fb485dd0c5376",
        "type": "link in",
        "z": "1f780f8f.dbcd5",
        "name": "build uart ui",
        "links": [
            "40a4699153812269",
            "476c314c5bcfdce5",
            "6b6e79e3f626c4d5",
            "82cba0c9acde2538",
            "a1ec3f80405825b1",
            "ae435be872a3cfff",
            "e07ca4c4ccc47d5a",
            "e46645f35f31054d",
            "ad41b6bbb9a8c4a8"
        ],
        "x": 1435,
        "y": 220,
        "wires": [
            [
                "068ec4f6bd7a5f66"
            ]
        ]
    },
    {
        "id": "e88d437867a17dad",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "initi autooff switches vars",
        "mode": "link",
        "links": [
            "78f68e6f8e856e41"
        ],
        "x": 715,
        "y": 360,
        "wires": []
    },
    {
        "id": "ac79c3719507c3c0",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "hb_sync true",
        "func": "global.set(\"hb_sync\", true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1940,
        "wires": [
            [
                "f8c032b12ad00c5b"
            ]
        ]
    },
    {
        "id": "f8c032b12ad00c5b",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 1940,
        "wires": [
            [
                "dfd1982f20469c0d"
            ]
        ]
    },
    {
        "id": "dfd1982f20469c0d",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "hb_sync false",
        "func": "global.set(\"hb_sync\", false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "035656429896a1c4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput1_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1540,
        "wires": [
            [
                "a5b77d08c3d7d569"
            ]
        ]
    },
    {
        "id": "3662f4b64c29ef86",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput2_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1580,
        "wires": [
            [
                "bc1aefd81eed7e85"
            ]
        ]
    },
    {
        "id": "f00e1cecb961a7d2",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput3_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1620,
        "wires": [
            [
                "a62b83997ca592de"
            ]
        ]
    },
    {
        "id": "9a9a0ebb49c374e4",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput4_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1660,
        "wires": [
            [
                "9cc3e40661c80b7f"
            ]
        ]
    },
    {
        "id": "3fda7a71ddd689cc",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput5_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1700,
        "wires": [
            [
                "2db14857746e2a4c"
            ]
        ]
    },
    {
        "id": "b0313ebc854f1a83",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/mcpinput6_type",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 1740,
        "wires": [
            [
                "5cffb6cad058bf0d"
            ]
        ]
    },
    {
        "id": "a5b77d08c3d7d569",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput1_type\",msg.payload);\n msg.mcpno = 1\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1540,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "bc1aefd81eed7e85",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput2_type\",msg.payload);\n  msg.mcpno = 2\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1580,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "a62b83997ca592de",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput3_type\",msg.payload);\n  msg.mcpno = 3\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1620,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "9cc3e40661c80b7f",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput4_type\",msg.payload);\n msg.mcpno = 4\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1660,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "2db14857746e2a4c",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput5_type\",msg.payload);\n msg.mcpno = 5\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1700,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "5cffb6cad058bf0d",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": " global.set(\"mcpinput6_type\",msg.payload);\n msg.mcpno = 6\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1740,
        "wires": [
            [
                "d369278b4d05c2b5"
            ]
        ]
    },
    {
        "id": "d369278b4d05c2b5",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "mcpinput type",
        "mode": "link",
        "links": [
            "88627c67148a916a"
        ],
        "x": 1965,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9e4bf54088d5fb75",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "check zigbee",
        "mode": "link",
        "links": [
            "64bf592b6afeb651"
        ],
        "x": 1035,
        "y": 20,
        "wires": []
    },
    {
        "id": "7eeb589679842223",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmytemp1name",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 800,
        "wires": [
            [
                "09a60d13659e6052"
            ]
        ]
    },
    {
        "id": "7837779df3405f84",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmytemp2name",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1560,
        "y": 840,
        "wires": [
            [
                "6652f9106812c970"
            ]
        ]
    },
    {
        "id": "09a60d13659e6052",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "global.set(\"Ndimmytemp1\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6652f9106812c970",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "global.set(\"Ndimmytemp2\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "eedd3d20cd755a80",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "func": "var date = new Date()\nglobal.set(\"installdate\", date)\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 140,
        "wires": [
            [
                "10c82a3fe0351a0a"
            ]
        ]
    },
    {
        "id": "10c82a3fe0351a0a",
        "type": "file",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/installdate",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "453fcc44d10b694f",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/installdate",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "d9614f9e50d768b2"
            ]
        ]
    },
    {
        "id": "d9614f9e50d768b2",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "func": "if ( msg.payload != \"\") {\n    global.set(\"installdate\", msg.payload)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 912,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1ba3c6dea8b0a688",
        "type": "delay",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "453fcc44d10b694f"
            ]
        ]
    },
    {
        "id": "36c5ccc88d0205ae",
        "type": "file in",
        "z": "1f780f8f.dbcd5",
        "name": "",
        "filename": "pekaway/dimmer_maxpercent",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 870,
        "y": 1500,
        "wires": [
            [
                "440f7a9f89b2f7c0"
            ]
        ]
    },
    {
        "id": "440f7a9f89b2f7c0",
        "type": "function",
        "z": "1f780f8f.dbcd5",
        "name": "set global",
        "func": "global.set(\"dimmer_maxpercent\", msg.payload);\nmsg.payload = parseInt(msg.payload)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1500,
        "wires": [
            [
                "509babed283534d1"
            ]
        ]
    },
    {
        "id": "509babed283534d1",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "dimmer_maxpercent",
        "mode": "link",
        "links": [
            "12ca99015ff02121"
        ],
        "x": 1215,
        "y": 1500,
        "wires": []
    },
    {
        "id": "15d0f3207d03c2e2",
        "type": "link out",
        "z": "1f780f8f.dbcd5",
        "name": "init Main BattData",
        "mode": "link",
        "links": [
            "a578e9ea280452d0"
        ],
        "x": 1215,
        "y": 1460,
        "wires": []
    },
    {
        "id": "e81293f8afe6d202",
        "type": "comment",
        "z": "1f780f8f.dbcd5",
        "name": "(<- dimmers & wifirelays init happens in config flow)",
        "info": "",
        "x": 2250,
        "y": 340,
        "wires": []
    },
    {
        "id": "337e4ecc1841f869",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "Com Nextion",
        "serial": "13f0e9b5.d6ad16",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "164524664aa72dda"
            ]
        ]
    },
    {
        "id": "164524664aa72dda",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "TO Nextion Flow",
        "mode": "link",
        "links": [
            "2c790f0aa740dda8",
            "789baf9c18deed97",
            "bfbd7c9ef5028bb7",
            "9fa1a1f3d30c941c"
        ],
        "x": 515,
        "y": 120,
        "wires": []
    },
    {
        "id": "958943bee83afdc3",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "Com Nextion",
        "serial": "13f0e9b5.d6ad16",
        "x": 510,
        "y": 160,
        "wires": []
    },
    {
        "id": "149f7856ccf5def5",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "from Nextion Flow",
        "links": [
            "1510e97c.db1fd7",
            "192f29be.15f296",
            "1a3f953f.69859b",
            "217b35da.dc538a",
            "69f1e67e.b72168",
            "70bfcd57.10fd74",
            "9339a284.e2ea",
            "bc89a0b3.6e35b",
            "c68bf351.02a2b",
            "e34863ea.37078",
            "ec305b3a.644d78",
            "eed6561d.d133c8",
            "bb1cfba2.a12418",
            "b056d12f.89a02",
            "f960001c.360c3",
            "d273317b.d3593",
            "7938723c.552f5c",
            "821e7d5e.1ad4e",
            "2756ed08.e83c62",
            "0d1a1d674f7a4850",
            "1cfd34777881b5b1",
            "7c131201731c1f82",
            "19362640a5f04a7d",
            "608d34d4b115eb17",
            "f4f583ca6b2af026",
            "6dcd9af2f9f9a7fb",
            "a871980fedd2d7cc",
            "6ab90bae72f721ab",
            "8c028acdbeb2c2b2",
            "86e0f31e6fdbc23a",
            "26a2576ee98dd6d1",
            "0f884c79ae16762e",
            "d0c431d073f1019b",
            "02a2caec8a85b2f9",
            "87b7e5616e13579a",
            "903ff15c38a19791",
            "3d28efc206fcb596",
            "8dfe568c52c957c7",
            "ec49b648bfada630",
            "7e99fdcc4e073173",
            "71e9b5cac0aa3c6e",
            "a095327680acd7ab",
            "d21dea57e8865efa",
            "1dab675d32ed7602",
            "6d0139fc951e44e0",
            "7a8947a2d2f6974c",
            "055522f8c321dd52",
            "06b89eece4e1354c",
            "dfe344a453d2de83",
            "218555c32011ab6c",
            "baf61298a49e4b7a",
            "f917e206f7cee819",
            "7a142723d956ab34",
            "f3bfa58fc15b2028",
            "151e4fe1770733b9",
            "ffa8d4a5880bf8d6",
            "e39ea8d66e8f80b1",
            "65938a4a36d17b7d",
            "650638e67ec48ab9",
            "27b436fd7c1310e3",
            "e8fa5f85bb4e73d0",
            "415d7f58c6ceefdd",
            "ec4e12a907b66de0",
            "09d4d328ae4cf99d",
            "cb8d757841880e7a",
            "7be4d4f1afc978fe",
            "ab5070e9fde4cec2",
            "597e67cf75901f91",
            "59771662ecbfaf8b",
            "a87602e6d44a3a5c",
            "7eb2bd15d95fed6b",
            "793f48577e8757f3",
            "c65fb5fa5ab2e28e",
            "2a3e402ec0549c67",
            "89ab893bc12e5c31",
            "2d37305e58b88fd7",
            "449b42f791b3912b",
            "7315058732ef7002",
            "09e1599592b84a2a",
            "61c4457abf78539e",
            "b8e17493cd0cab07",
            "e6fcf7b384f8fa1a"
        ],
        "x": 155,
        "y": 160,
        "wires": [
            [
                "958943bee83afdc3"
            ]
        ]
    },
    {
        "id": "34f1197a35807cb0",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "set connections",
        "info": "USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t2400\n- binary buffers \n- split after 10ms\n-  EVEN PARITY!\n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 120ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "dbc9d22056d77b80",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "Com 1 - on GPIO Raspberry - Nextion",
        "info": "38400 8n1\n\nbinary buffers\nsplit after 10ms\n",
        "x": 290,
        "y": 80,
        "wires": []
    },
    {
        "id": "79ee0c7b4d260fb7",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB SERIAL1",
        "info": "USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t25000\n- binary buffers \n- split after 10ms\n- \n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n\n",
        "x": 170,
        "y": 340,
        "wires": []
    },
    {
        "id": "1db08010dab29eab",
        "type": "change",
        "z": "2ea8044e35389b3f",
        "name": "set baudrate = payload",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "baudrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "407403ab94fd67cd",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "fa8eeb57.177cb8",
        "x": 290,
        "y": 300,
        "wires": []
    },
    {
        "id": "a7c4dadf29e02abd",
        "type": "ui_dropdown",
        "z": "2ea8044e35389b3f",
        "name": "",
        "label": "MUART1",
        "tooltip": "MULTIUART PORT",
        "place": "MUART1 ",
        "group": "bc06df1c.ad422",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nothing",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Daly Heyo BMS",
                "value": "1",
                "type": "str"
            },
            {
                "label": "VE.Direct",
                "value": "2",
                "type": "str"
            },
            {
                "label": "JBD, generic",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 580,
        "y": 760,
        "wires": [
            [
                "1db08010dab29eab",
                "4d01042b4bc5d0c7",
                "ae435be872a3cfff",
                "bf544dddd5215822"
            ]
        ]
    },
    {
        "id": "3a8b9c90549b714b",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "Multiuart Out",
        "mode": "link",
        "links": [
            "2d26b1aa.1bfd2e"
        ],
        "x": 665,
        "y": 240,
        "wires": []
    },
    {
        "id": "bb2a109a66b34c73",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "Multiuart1 IN",
        "links": [
            "0acbe89a2b17eef1",
            "4050bf14a921afcc",
            "4393c549c729868f",
            "52f5d3a8a9d59d01",
            "671af293.bbad7c",
            "da5853776d2692fe",
            "ad0889da70890276",
            "14ac3a004339aa29",
            "6d5917dc04d190a0",
            "24a46c7e8d22387f",
            "1ab2fd39386917ba",
            "1baf2fb30eded589",
            "896c9f755289f08b"
        ],
        "x": 175,
        "y": 300,
        "wires": [
            [
                "407403ab94fd67cd"
            ]
        ]
    },
    {
        "id": "cf60566939dd01b0",
        "type": "file",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/multiuart1",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1150,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4d01042b4bc5d0c7",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set global",
        "func": "if(msg.payload==\"0\") {\n    global.set(\"multiuart1\", 0); \n    msg.payload = 0; \n}\n\nelse if(msg.payload==\"1\") {\n    global.set(\"multiuart1\", 1); \n    msg.payload = 1; \n}\n\nelse if(msg.payload==\"2\") {\n    global.set(\"multiuart1\", 2); \n    msg.payload = 2;\n}\n\nelse if(msg.payload==\"7\") {\n    global.set(\"multiuart1\", 7); \n    msg.payload = 7; \n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 760,
        "wires": [
            [
                "cf60566939dd01b0"
            ]
        ]
    },
    {
        "id": "fc7954064802e4ed",
        "type": "file in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/multiuart1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "a7c4dadf29e02abd"
            ]
        ]
    },
    {
        "id": "088bbc31b7da22a0",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "Change Baudrates",
        "info": "\n\n",
        "x": 190,
        "y": 720,
        "wires": []
    },
    {
        "id": "85448bbe22d17a01",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT1",
        "links": [
            "2d26b1aa.1bfd2e",
            "dea5cc704004be19"
        ],
        "x": 635,
        "y": 340,
        "wires": []
    },
    {
        "id": "631e04e732bc5864",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "USB1UART IN",
        "links": [
            "3c7a4ccdd4fe8875",
            "3fd0f84fefde6c42",
            "4393c549c729868f",
            "671af293.bbad7c",
            "ab3c539918e51638",
            "8fb401c872f54966",
            "72a0ed1577641509",
            "246a92bff38e129f",
            "3f2d0d99422ba676",
            "8d4be7aaa5cfa950",
            "b0a71674e856772e",
            "cacdb6449f6027b2",
            "27076aefceb7ca3d"
        ],
        "x": 155,
        "y": 440,
        "wires": [
            [
                "5f3c2890ccaaed78"
            ]
        ]
    },
    {
        "id": "2555b817669ec71d",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB SERIAL2",
        "info": "USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t25000\n- binary buffers \n- split after 10ms\n- \n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n\n",
        "x": 170,
        "y": 500,
        "wires": []
    },
    {
        "id": "e1b033b72073b492",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "USB2UART IN",
        "links": [
            "671af293.bbad7c",
            "cc6200f0.9c1c2",
            "d7d95e4.63868a",
            "2d221c45.e3cc74",
            "f3e08d21c08c9067",
            "ab3c539918e51638",
            "3c7a4ccdd4fe8875",
            "3fd0f84fefde6c42",
            "4393c549c729868f",
            "da5853776d2692fe",
            "52f5d3a8a9d59d01",
            "4050bf14a921afcc",
            "1329104c27a59c38",
            "7408e36a28fb0e42",
            "019e0d59897b6a70",
            "f6b7d9ea69e00d2b",
            "388f894c55c49df4",
            "ba61a84a554ce15e",
            "48645088c99ca6d3",
            "0cc59064c3a278d6"
        ],
        "x": 155,
        "y": 600,
        "wires": [
            [
                "d3a9fa8e367c7416"
            ]
        ]
    },
    {
        "id": "b148a69d2827b3f9",
        "type": "inject",
        "z": "2ea8044e35389b3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "fc7954064802e4ed"
            ]
        ]
    },
    {
        "id": "01dd2c03bf9d5a8d",
        "type": "ui_dropdown",
        "z": "2ea8044e35389b3f",
        "name": "",
        "label": "USB1",
        "tooltip": "If USB connection is not working, please reboot and try again. (Classic)",
        "place": "USBUART1",
        "group": "bc06df1c.ad422",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nothing",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Daly BMS Bluetooth",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Daly MONIT",
                "value": "6",
                "type": "str"
            },
            {
                "label": "VE.Direct",
                "value": "2",
                "type": "str"
            },
            {
                "label": "China Heater",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Webasto",
                "value": "3",
                "type": "str"
            },
            {
                "label": "JBD,generic",
                "value": "7",
                "type": "str"
            },
            {
                "label": "Autoterm 2D",
                "value": "5",
                "type": "str"
            },
            {
                "label": "Autoterm 4D",
                "value": "8",
                "type": "str"
            },
            {
                "label": "MaxxFan",
                "value": "9",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 530,
        "y": 940,
        "wires": [
            [
                "476c314c5bcfdce5",
                "05bf79d02a574117",
                "8120ba7117c8b9b3"
            ]
        ]
    },
    {
        "id": "753986414cbd2eec",
        "type": "file",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb1uart",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 890,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "a8515966cb3dbe53",
        "type": "file in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb1uart",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 940,
        "wires": [
            [
                "01dd2c03bf9d5a8d"
            ]
        ]
    },
    {
        "id": "47dc1361d4e242dd",
        "type": "inject",
        "z": "2ea8044e35389b3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "a8515966cb3dbe53"
            ]
        ]
    },
    {
        "id": "403c78429fe5ca26",
        "type": "switch",
        "z": "2ea8044e35389b3f",
        "name": "",
        "property": "uart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "3a8b9c90549b714b"
            ],
            [
                "788c0148719bd99c"
            ],
            [
                "21c38b1276d2a494"
            ]
        ]
    },
    {
        "id": "4669ca2873cc43db",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "",
        "func": "msg.uart = global.get(\"multiuart1\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "403c78429fe5ca26"
            ]
        ]
    },
    {
        "id": "788c0148719bd99c",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "Multiuart Out",
        "links": [
            "9fdb2e33.f2421"
        ],
        "x": 665,
        "y": 260,
        "wires": []
    },
    {
        "id": "407a93a82383721c",
        "type": "switch",
        "z": "2ea8044e35389b3f",
        "name": "",
        "property": "uart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 490,
        "y": 380,
        "wires": [
            [
                "85448bbe22d17a01"
            ],
            [
                "85448bbe22d17a01"
            ],
            [
                "1abad3b522bc0cdb"
            ],
            [
                "4afe37a709c523b6"
            ],
            [
                "edf12ff1c72dca2a"
            ],
            [
                "df2d1e216890ab1e"
            ],
            [
                "df2d1e216890ab1e"
            ],
            [
                "7f955329a662eb94"
            ]
        ]
    },
    {
        "id": "39aff01f3968d09a",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "",
        "func": "msg.uart = global.get(\"usb1uart\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 380,
        "wires": [
            [
                "407a93a82383721c"
            ]
        ]
    },
    {
        "id": "1abad3b522bc0cdb",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT2",
        "links": [
            "9fdb2e33.f2421"
        ],
        "x": 635,
        "y": 360,
        "wires": []
    },
    {
        "id": "4afe37a709c523b6",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT3",
        "links": [
            "ad794c5a.31855",
            "6bba5e6df42b7b72",
            "77f23e161d8b722f"
        ],
        "x": 635,
        "y": 380,
        "wires": []
    },
    {
        "id": "edf12ff1c72dca2a",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "2d26b1aa.1bfd2e",
            "740c96a6.8a7cf8",
            "60d2221cb6b5fd01",
            "dea5cc704004be19"
        ],
        "x": 635,
        "y": 400,
        "wires": []
    },
    {
        "id": "fefc4df686ce2777",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT1",
        "links": [
            "2d26b1aa.1bfd2e",
            "dea5cc704004be19"
        ],
        "x": 635,
        "y": 500,
        "wires": []
    },
    {
        "id": "cdfee875fc2536a4",
        "type": "switch",
        "z": "2ea8044e35389b3f",
        "name": "",
        "property": "uart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "fefc4df686ce2777"
            ],
            [
                "fefc4df686ce2777"
            ],
            [
                "9a58f3a0ce2f303c"
            ],
            [
                "261db8f0813baa48"
            ],
            [
                "b0a97d8edfb5a3e8"
            ],
            [
                "51a6a2320386c92b"
            ],
            [
                "51a6a2320386c92b"
            ],
            [
                "cd5a5e4cb39851e4"
            ]
        ]
    },
    {
        "id": "2650c6e91f925df6",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "",
        "func": "msg.uart = global.get(\"usb2uart\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 540,
        "wires": [
            [
                "cdfee875fc2536a4"
            ]
        ]
    },
    {
        "id": "9a58f3a0ce2f303c",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT2",
        "links": [
            "9fdb2e33.f2421"
        ],
        "x": 635,
        "y": 520,
        "wires": []
    },
    {
        "id": "261db8f0813baa48",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT3",
        "links": [
            "ad794c5a.31855",
            "6bba5e6df42b7b72",
            "77f23e161d8b722f"
        ],
        "x": 635,
        "y": 540,
        "wires": []
    },
    {
        "id": "b0a97d8edfb5a3e8",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT4",
        "links": [
            "740c96a6.8a7cf8",
            "60d2221cb6b5fd01"
        ],
        "x": 635,
        "y": 560,
        "wires": []
    },
    {
        "id": "476c314c5bcfdce5",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "build uart ui",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 655,
        "y": 960,
        "wires": []
    },
    {
        "id": "ae435be872a3cfff",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "build uart ui",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 715,
        "y": 680,
        "wires": []
    },
    {
        "id": "eb3ddc69e93d1b2d",
        "type": "ui_dropdown",
        "z": "2ea8044e35389b3f",
        "name": "",
        "label": "USB2",
        "tooltip": "If USB connection is not working, please reboot and try again. (Classic)",
        "place": "USBUART2",
        "group": "bc06df1c.ad422",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nothing",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Daly BMS Bluetooth",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Daly MONIT",
                "value": "6",
                "type": "str"
            },
            {
                "label": "VE.Direct",
                "value": "2",
                "type": "str"
            },
            {
                "label": "China Heater",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Webasto",
                "value": "3",
                "type": "str"
            },
            {
                "label": "JBD/generic",
                "value": "7",
                "type": "str"
            },
            {
                "label": "Autoterm 2D",
                "value": "5",
                "type": "str"
            },
            {
                "label": "Autoterm 4D",
                "value": "8",
                "type": "str"
            },
            {
                "label": "MaxxFan",
                "value": "9",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 530,
        "y": 1120,
        "wires": [
            [
                "82cba0c9acde2538",
                "61100ccaca2da0c8",
                "763907570bb7b915"
            ]
        ]
    },
    {
        "id": "76003c928eac1a0e",
        "type": "file",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb2uart",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 890,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "8b774c24bc62d9fa",
        "type": "file in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb2uart",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "eb3ddc69e93d1b2d"
            ]
        ]
    },
    {
        "id": "ef9a084bbd373b22",
        "type": "inject",
        "z": "2ea8044e35389b3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "8b774c24bc62d9fa"
            ]
        ]
    },
    {
        "id": "82cba0c9acde2538",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "build uart ui",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 655,
        "y": 1140,
        "wires": []
    },
    {
        "id": "05bf79d02a574117",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"usb1uart\", str);\n \n return msg\n  \n \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 920,
        "wires": [
            [
                "753986414cbd2eec"
            ]
        ]
    },
    {
        "id": "61100ccaca2da0c8",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"usb2uart\", str);\n \n return msg\n  \n \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "76003c928eac1a0e"
            ]
        ]
    },
    {
        "id": "df2d1e216890ab1e",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "7c40561f7d0fd797",
            "3238c2af5fa263c9",
            "f4de235c06e5fa39",
            "40b74ea1fd686483",
            "52d3e436eddb5609",
            "0422f9d6c34fec81",
            "c6b72f7e0baafb98",
            "4cb3aa39e7df5dbb"
        ],
        "x": 635,
        "y": 420,
        "wires": []
    },
    {
        "id": "51a6a2320386c92b",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "7c40561f7d0fd797",
            "3238c2af5fa263c9",
            "f4de235c06e5fa39",
            "40b74ea1fd686483",
            "52d3e436eddb5609",
            "0422f9d6c34fec81",
            "c6b72f7e0baafb98",
            "4cb3aa39e7df5dbb"
        ],
        "x": 635,
        "y": 580,
        "wires": []
    },
    {
        "id": "1e222bbe4050a0da",
        "type": "status",
        "z": "2ea8044e35389b3f",
        "name": "status usb1",
        "scope": [
            "192438bcc85c5adf"
        ],
        "x": 170,
        "y": 860,
        "wires": [
            [
                "ac8596094192fabd"
            ]
        ]
    },
    {
        "id": "53bbbda759c455f3",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set label",
        "func": "if(msg.status.text == \"node-red:common.status.connected\")\n{\nglobal.set(\"usb1status\",1);\nmsg.payload = \"connected\";\n}\nelse\n{\nglobal.set(\"usb1status\",0);\nmsg.payload = \"not connected\";\n}\nmsg.label = \"USB1 (\"+msg.payload+\")\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 860,
        "wires": [
            [
                "0e949e4b4a6e4c43"
            ]
        ]
    },
    {
        "id": "e5322b652b72ca06",
        "type": "status",
        "z": "2ea8044e35389b3f",
        "name": "status usb2",
        "scope": [
            "b12a1444de384ecb"
        ],
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "7d13a3f938516c90"
            ]
        ]
    },
    {
        "id": "1fcb3bba3839ce02",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set label",
        "func": "if(msg.status.text == \"node-red:common.status.connected\")\n{\nglobal.set(\"usb2status\",1);\nmsg.payload = \"connected\";\n}\nelse\n{\nglobal.set(\"usb2status\",0);\nmsg.payload = \"not connected\";\n}\nmsg.label = \"USB2 (\"+msg.payload+\")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "5fbae06eda438fce"
            ]
        ]
    },
    {
        "id": "ac8596094192fabd",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 860,
        "wires": [
            [
                "53bbbda759c455f3"
            ]
        ]
    },
    {
        "id": "7d13a3f938516c90",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 1040,
        "wires": [
            [
                "1fcb3bba3839ce02"
            ]
        ]
    },
    {
        "id": "0e949e4b4a6e4c43",
        "type": "ui_text",
        "z": "2ea8044e35389b3f",
        "group": "bc06df1c.ad422",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "USB1Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 860,
        "wires": []
    },
    {
        "id": "5fbae06eda438fce",
        "type": "ui_text",
        "z": "2ea8044e35389b3f",
        "group": "bc06df1c.ad422",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "USB2Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7f955329a662eb94",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "dea5cc704004be19"
        ],
        "x": 635,
        "y": 440,
        "wires": []
    },
    {
        "id": "cd5a5e4cb39851e4",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "dea5cc704004be19"
        ],
        "x": 635,
        "y": 600,
        "wires": []
    },
    {
        "id": "192438bcc85c5adf",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "635c30f7656116e2",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "39aff01f3968d09a"
            ]
        ]
    },
    {
        "id": "b12a1444de384ecb",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "41701c9d2e39737e",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "2650c6e91f925df6"
            ]
        ]
    },
    {
        "id": "c215fc6a1f3948dc",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 1120,
        "wires": [
            [
                "402b82484ab91b65"
            ]
        ]
    },
    {
        "id": "5f3c2890ccaaed78",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "635c30f7656116e2",
        "x": 280,
        "y": 440,
        "wires": []
    },
    {
        "id": "d3a9fa8e367c7416",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "41701c9d2e39737e",
        "x": 280,
        "y": 600,
        "wires": []
    },
    {
        "id": "cc47bd193f56bf89",
        "type": "serial request",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "635c30f7656116e2",
        "x": 1480,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "620b2e76cab876e8",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB SERIAL3",
        "info": "USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t25000\n- binary buffers \n- split after 10ms\n- \n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n\n",
        "x": 970,
        "y": 280,
        "wires": []
    },
    {
        "id": "5e3c9230cc132f6c",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT1",
        "links": [
            "2d26b1aa.1bfd2e",
            "dea5cc704004be19"
        ],
        "x": 1425,
        "y": 280,
        "wires": []
    },
    {
        "id": "1b1168f8607d8205",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "USB3UART IN",
        "links": [
            "3c7a4ccdd4fe8875",
            "3fd0f84fefde6c42",
            "4050bf14a921afcc",
            "4393c549c729868f",
            "52f5d3a8a9d59d01",
            "671af293.bbad7c",
            "ab3c539918e51638",
            "da5853776d2692fe",
            "9dd2ca6c97ca068c",
            "875171626b6bcf9a",
            "27f9332e695de4b7",
            "876eb65067c7e2f1",
            "0012ba2f6936f978",
            "d9a6e5f497edbf3a",
            "fcb3a99d4e807dd9",
            "3b407df01a5b9435"
        ],
        "x": 835,
        "y": 380,
        "wires": [
            [
                "bc45a6814d4665e2"
            ]
        ]
    },
    {
        "id": "fc0870f2e76bf691",
        "type": "switch",
        "z": "2ea8044e35389b3f",
        "name": "",
        "property": "uart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "5e3c9230cc132f6c"
            ],
            [
                "5e3c9230cc132f6c"
            ],
            [
                "6a7fd365793465ff"
            ],
            [
                "41a8e17ad9dd91cd"
            ],
            [
                "7d74a95da2ff9101"
            ],
            [
                "68309d30d74db678"
            ],
            [
                "68309d30d74db678"
            ],
            [
                "d426c207d4f1166d"
            ]
        ]
    },
    {
        "id": "a4b9212b8e588c5f",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "",
        "func": "msg.uart = global.get(\"usb3uart\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "fc0870f2e76bf691"
            ]
        ]
    },
    {
        "id": "6a7fd365793465ff",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT2",
        "links": [
            "9fdb2e33.f2421"
        ],
        "x": 1425,
        "y": 300,
        "wires": []
    },
    {
        "id": "41a8e17ad9dd91cd",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT3",
        "links": [
            "ad794c5a.31855",
            "6bba5e6df42b7b72",
            "77f23e161d8b722f"
        ],
        "x": 1425,
        "y": 320,
        "wires": []
    },
    {
        "id": "7d74a95da2ff9101",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "2d26b1aa.1bfd2e",
            "740c96a6.8a7cf8",
            "60d2221cb6b5fd01",
            "dea5cc704004be19"
        ],
        "x": 1425,
        "y": 340,
        "wires": []
    },
    {
        "id": "68309d30d74db678",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "7c40561f7d0fd797",
            "3238c2af5fa263c9",
            "f4de235c06e5fa39",
            "40b74ea1fd686483",
            "52d3e436eddb5609",
            "0422f9d6c34fec81",
            "c6b72f7e0baafb98",
            "4cb3aa39e7df5dbb"
        ],
        "x": 1425,
        "y": 360,
        "wires": []
    },
    {
        "id": "d426c207d4f1166d",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "dea5cc704004be19"
        ],
        "x": 1425,
        "y": 380,
        "wires": []
    },
    {
        "id": "46e7e13d49a524ba",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "ccce6b9ce5924ec6",
        "x": 970,
        "y": 320,
        "wires": [
            [
                "a4b9212b8e588c5f"
            ]
        ]
    },
    {
        "id": "bc45a6814d4665e2",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "ccce6b9ce5924ec6",
        "x": 980,
        "y": 380,
        "wires": []
    },
    {
        "id": "373ea8657ebde3af",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB SERIAL4",
        "info": " - USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t25000\n- binary buffers \n- split after 10ms\n- \n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n\n",
        "x": 970,
        "y": 480,
        "wires": []
    },
    {
        "id": "38cb32c06a098f9e",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "USB4UART IN",
        "links": [
            "1c8ea076f1487c81",
            "31920bccd53dd51a",
            "38463e3a293cfe8d",
            "3f9db573bfed27be",
            "671af293.bbad7c",
            "8879f99ded5a9057",
            "e1367c6cc58fb2d9",
            "42589028751521b8"
        ],
        "x": 845,
        "y": 600,
        "wires": [
            [
                "e9ea1cc93d4ce5e6"
            ]
        ]
    },
    {
        "id": "54b279a4e8344804",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT1",
        "links": [
            "2d26b1aa.1bfd2e",
            "dea5cc704004be19"
        ],
        "x": 1425,
        "y": 500,
        "wires": []
    },
    {
        "id": "36ebd7c969b1e13f",
        "type": "switch",
        "z": "2ea8044e35389b3f",
        "name": "",
        "property": "uart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 1270,
        "y": 540,
        "wires": [
            [
                "54b279a4e8344804"
            ],
            [
                "54b279a4e8344804"
            ],
            [
                "1f60a35e099f02b6"
            ],
            [
                "742c72b859cc3261"
            ],
            [
                "fd978acdbf61cb68"
            ],
            [
                "364010e3c3bb676b"
            ],
            [
                "364010e3c3bb676b"
            ],
            [
                "dc97101427653fc4"
            ]
        ]
    },
    {
        "id": "590cb3f69070d920",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "",
        "func": "msg.uart = global.get(\"usb4uart\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "36ebd7c969b1e13f"
            ]
        ]
    },
    {
        "id": "1f60a35e099f02b6",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT2",
        "links": [
            "9fdb2e33.f2421"
        ],
        "x": 1425,
        "y": 520,
        "wires": []
    },
    {
        "id": "742c72b859cc3261",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT3",
        "links": [
            "ad794c5a.31855",
            "6bba5e6df42b7b72",
            "77f23e161d8b722f"
        ],
        "x": 1425,
        "y": 540,
        "wires": []
    },
    {
        "id": "fd978acdbf61cb68",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB2OUT4",
        "links": [
            "740c96a6.8a7cf8",
            "60d2221cb6b5fd01"
        ],
        "x": 1425,
        "y": 560,
        "wires": []
    },
    {
        "id": "364010e3c3bb676b",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "7c40561f7d0fd797",
            "3238c2af5fa263c9",
            "f4de235c06e5fa39",
            "40b74ea1fd686483",
            "52d3e436eddb5609",
            "0422f9d6c34fec81",
            "c6b72f7e0baafb98",
            "4cb3aa39e7df5dbb"
        ],
        "x": 1425,
        "y": 580,
        "wires": []
    },
    {
        "id": "dc97101427653fc4",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "USB1OUT4",
        "links": [
            "dea5cc704004be19"
        ],
        "x": 1425,
        "y": 600,
        "wires": []
    },
    {
        "id": "1aa1e26f859b0cce",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "e3c8faf77aeea751",
        "x": 980,
        "y": 540,
        "wires": [
            [
                "590cb3f69070d920"
            ]
        ]
    },
    {
        "id": "e9ea1cc93d4ce5e6",
        "type": "serial out",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "e3c8faf77aeea751",
        "x": 990,
        "y": 600,
        "wires": []
    },
    {
        "id": "769d5a6a6832f2b8",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "Multi Port UART5 ",
        "info": "USB K-Line\nWebasto\n- baut 2400 8E1\n- binary buffers \n- split after 50ms\n\n\nUSB K-Line China Heater\n-Baud Rate \t\t25000\n- binary buffers \n- split after 10ms\n- \n\n\n\nMULTI UART 3.3v\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 120ms\n\n\nDALY/HEYO BMS \n-- baut 9600 8E1\n- binary buffers \n- split after 10ms\n\nVictron Ve.Direct\n- Baud Rate \t\t19200\n- binary buffers \n- split after 10ms\n\n\n",
        "x": 220,
        "y": 220,
        "wires": []
    },
    {
        "id": "0f9831dab4db207f",
        "type": "ui_dropdown",
        "z": "2ea8044e35389b3f",
        "name": "",
        "label": "USB3",
        "tooltip": "If USB connection is not working, please reboot and try again. (Classic)",
        "place": "USBUART1",
        "group": "bc06df1c.ad422",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nothing",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Daly BMS Bluetooth",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Daly MONIT",
                "value": "6",
                "type": "str"
            },
            {
                "label": "VE.Direct",
                "value": "2",
                "type": "str"
            },
            {
                "label": "China Heater",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Webasto",
                "value": "3",
                "type": "str"
            },
            {
                "label": "JBD,generic",
                "value": "7",
                "type": "str"
            },
            {
                "label": "Autoterm 2D",
                "value": "5",
                "type": "str"
            },
            {
                "label": "Autoterm 4D",
                "value": "8",
                "type": "str"
            },
            {
                "label": "MaxxFan",
                "value": "9",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 530,
        "y": 1280,
        "wires": [
            [
                "6b6e79e3f626c4d5",
                "fa3527cc29323b59",
                "889d909fd7f3f84d"
            ]
        ]
    },
    {
        "id": "a8d5ae5375f9d672",
        "type": "file",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb3uart",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 890,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3bae0e9f6d145e9b",
        "type": "file in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb3uart",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "0f9831dab4db207f"
            ]
        ]
    },
    {
        "id": "919874b54e90438b",
        "type": "inject",
        "z": "2ea8044e35389b3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1280,
        "wires": [
            [
                "3bae0e9f6d145e9b"
            ]
        ]
    },
    {
        "id": "6b6e79e3f626c4d5",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "build uart ui",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 655,
        "y": 1300,
        "wires": []
    },
    {
        "id": "fa3527cc29323b59",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"usb3uart\", str);\n \n return msg\n  \n \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1260,
        "wires": [
            [
                "a8d5ae5375f9d672"
            ]
        ]
    },
    {
        "id": "8c21c946c2a29698",
        "type": "status",
        "z": "2ea8044e35389b3f",
        "name": "status usb3",
        "scope": [
            "46e7e13d49a524ba"
        ],
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "dc1e76c4a88a72df"
            ]
        ]
    },
    {
        "id": "fa49a893681fc6c8",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set label",
        "func": "if(msg.status.text == \"node-red:common.status.connected\")\n{\nglobal.set(\"usb3status\",1);\nmsg.payload = \"connected\";\n}\nelse\n{\nglobal.set(\"usb3status\",0);\nmsg.payload = \"not connected\";\n}\nmsg.label = \"USB3 (\"+msg.payload+\")\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1200,
        "wires": [
            [
                "b4f2f865bfde48a9"
            ]
        ]
    },
    {
        "id": "dc1e76c4a88a72df",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 1200,
        "wires": [
            [
                "fa49a893681fc6c8"
            ]
        ]
    },
    {
        "id": "b4f2f865bfde48a9",
        "type": "ui_text",
        "z": "2ea8044e35389b3f",
        "group": "bc06df1c.ad422",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "USB3Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b77092becd98d7ba",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 1280,
        "wires": [
            [
                "9d0a30926aeee2fe"
            ]
        ]
    },
    {
        "id": "9d0a30926aeee2fe",
        "type": "serial request",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "ccce6b9ce5924ec6",
        "x": 1480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "7611e48a476c884e",
        "type": "ui_dropdown",
        "z": "2ea8044e35389b3f",
        "name": "",
        "label": "USB4",
        "tooltip": "If USB connection is not working, please reboot and try again. (Classic)",
        "place": "USBUART1",
        "group": "bc06df1c.ad422",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nothing",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Daly BMS Bluetooth",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Daly MONIT",
                "value": "6",
                "type": "str"
            },
            {
                "label": "VE.Direct",
                "value": "2",
                "type": "str"
            },
            {
                "label": "China Heater",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Webasto",
                "value": "3",
                "type": "str"
            },
            {
                "label": "JBD,generic",
                "value": "7",
                "type": "str"
            },
            {
                "label": "Autoterm 2D",
                "value": "5",
                "type": "str"
            },
            {
                "label": "Autoterm 4D",
                "value": "8",
                "type": "str"
            },
            {
                "label": "MaxxFan",
                "value": "9",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 550,
        "y": 1440,
        "wires": [
            [
                "a1ec3f80405825b1",
                "f46c975631a3e9bc",
                "123657f3e3998f27"
            ]
        ]
    },
    {
        "id": "55d0f9bcd4256ee1",
        "type": "file",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb4uart",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 890,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "59c1aa8dadbf8857",
        "type": "file in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "filename": "pekaway/usb4uart",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 380,
        "y": 1440,
        "wires": [
            [
                "7611e48a476c884e"
            ]
        ]
    },
    {
        "id": "09cb148ec67ea93b",
        "type": "inject",
        "z": "2ea8044e35389b3f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "59c1aa8dadbf8857"
            ]
        ]
    },
    {
        "id": "a1ec3f80405825b1",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "build uart ui",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 675,
        "y": 1460,
        "wires": []
    },
    {
        "id": "f46c975631a3e9bc",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"usb4uart\", str);\n \n return msg\n  \n \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1420,
        "wires": [
            [
                "55d0f9bcd4256ee1"
            ]
        ]
    },
    {
        "id": "63677e593173cfa9",
        "type": "status",
        "z": "2ea8044e35389b3f",
        "name": "status usb4",
        "scope": [
            "1aa1e26f859b0cce"
        ],
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "7f4bfd0ffd093141"
            ]
        ]
    },
    {
        "id": "03bb8df1ad3bde27",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set label",
        "func": "if(msg.status.text == \"node-red:common.status.connected\")\n{\nglobal.set(\"usb4status\",1);\nmsg.payload = \"connected\";\n}\nelse\n{\nglobal.set(\"usb4status\",0);\nmsg.payload = \"not connected\";\n}\nmsg.label = \"USB4 (\"+msg.payload+\")\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1360,
        "wires": [
            [
                "646bccafc518f695"
            ]
        ]
    },
    {
        "id": "7f4bfd0ffd093141",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 1360,
        "wires": [
            [
                "03bb8df1ad3bde27"
            ]
        ]
    },
    {
        "id": "646bccafc518f695",
        "type": "ui_text",
        "z": "2ea8044e35389b3f",
        "group": "bc06df1c.ad422",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "USB4Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 1360,
        "wires": []
    },
    {
        "id": "0e4fb0275827de42",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 1440,
        "wires": [
            [
                "817df75c7ab35981"
            ]
        ]
    },
    {
        "id": "817df75c7ab35981",
        "type": "serial request",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "e3c8faf77aeea751",
        "x": 1480,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "402b82484ab91b65",
        "type": "serial request",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "41701c9d2e39737e",
        "x": 1480,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "123657f3e3998f27",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set usbuart baudrate",
        "func": "msg.payload = Number(msg.payload);\n\nif (msg.payload == 1) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 2) {\n    msg.baudrate = \"19200\";\n    return msg\n}\nif (msg.payload == 3) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 4) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 5) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 6) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 7) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 8) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 9) {\n    msg.baudrate = \"9600\";\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1440,
        "wires": [
            [
                "0e4fb0275827de42"
            ]
        ]
    },
    {
        "id": "3d5bd08210f7c292",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB1",
        "info": "",
        "x": 150,
        "y": 900,
        "wires": []
    },
    {
        "id": "4279be1ae6a2a4d9",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB2",
        "info": "",
        "x": 150,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2540e5a827a39294",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB3",
        "info": "",
        "x": 150,
        "y": 1240,
        "wires": []
    },
    {
        "id": "976126574d9da2b0",
        "type": "comment",
        "z": "2ea8044e35389b3f",
        "name": "USB4",
        "info": "",
        "x": 150,
        "y": 1400,
        "wires": []
    },
    {
        "id": "b186ea440a295e27",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 940,
        "wires": [
            [
                "cc47bd193f56bf89"
            ]
        ]
    },
    {
        "id": "51858671e39c9f96",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "usb1 reset",
        "links": [
            "ad88f10fd1f2d787",
            "3334ee7ff0f7fc6c"
        ],
        "x": 225,
        "y": 980,
        "wires": [
            [
                "a8515966cb3dbe53"
            ]
        ]
    },
    {
        "id": "bf2cea84191ef3d2",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "usb2 reset",
        "links": [
            "ad88f10fd1f2d787",
            "3334ee7ff0f7fc6c"
        ],
        "x": 225,
        "y": 1160,
        "wires": [
            [
                "8b774c24bc62d9fa"
            ]
        ]
    },
    {
        "id": "c5f0c4372a081cd7",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "usb3 reset",
        "links": [
            "ad88f10fd1f2d787",
            "3334ee7ff0f7fc6c"
        ],
        "x": 235,
        "y": 1320,
        "wires": [
            [
                "3bae0e9f6d145e9b"
            ]
        ]
    },
    {
        "id": "8eb597b7ad8580fb",
        "type": "link in",
        "z": "2ea8044e35389b3f",
        "name": "usb4 reset",
        "links": [
            "ad88f10fd1f2d787",
            "3334ee7ff0f7fc6c"
        ],
        "x": 225,
        "y": 1480,
        "wires": [
            [
                "59c1aa8dadbf8857"
            ]
        ]
    },
    {
        "id": "e9938ed2d61752e3",
        "type": "serial in",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "dba432f2.5f9a",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "4669ca2873cc43db"
            ]
        ]
    },
    {
        "id": "e59c7845ced8caa2",
        "type": "serial request",
        "z": "2ea8044e35389b3f",
        "name": "",
        "serial": "dba432f2.5f9a",
        "x": 1170,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "bf544dddd5215822",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set usbuart baudrate",
        "func": "msg.payload = Number(msg.payload);\n\nif(msg.payload==1) {\n    msg.baudrate = \"9600\"; \n    return msg\n}\nif(msg.payload==2) {\n    msg.baudrate = \"19200\";\n    return msg\n}\nif(msg.payload==3) {\n    msg.baudrate = \"2400\"; \n    return msg\n}\nif(msg.payload==4) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==5) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==6) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==7) {\n    msg.baudrate = \"9600\";\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 800,
        "wires": [
            [
                "f3ba4b286f1652a0"
            ]
        ]
    },
    {
        "id": "f3ba4b286f1652a0",
        "type": "delay",
        "z": "2ea8044e35389b3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 800,
        "wires": [
            [
                "e59c7845ced8caa2"
            ]
        ]
    },
    {
        "id": "21c38b1276d2a494",
        "type": "link out",
        "z": "2ea8044e35389b3f",
        "name": "Multiuart Out",
        "mode": "link",
        "links": [
            "dea5cc704004be19"
        ],
        "x": 665,
        "y": 280,
        "wires": []
    },
    {
        "id": "889d909fd7f3f84d",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set usbuart baudrate",
        "func": "msg.payload = Number(msg.payload);\n\nif (msg.payload == 1) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 2) {\n    msg.baudrate = \"19200\";\n    return msg\n}\nif (msg.payload == 3) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 4) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 5) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 6) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 7) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 8) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 9) {\n    msg.baudrate = \"9600\";\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1280,
        "wires": [
            [
                "b77092becd98d7ba"
            ]
        ]
    },
    {
        "id": "763907570bb7b915",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set usbuart baudrate",
        "func": "msg.payload = Number(msg.payload);\n\nif (msg.payload == 1) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 2) {\n    msg.baudrate = \"19200\";\n    return msg\n}\nif (msg.payload == 3) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 4) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 5) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 6) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 7) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 8) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 9) {\n    msg.baudrate = \"9600\";\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1120,
        "wires": [
            [
                "c215fc6a1f3948dc"
            ]
        ]
    },
    {
        "id": "8120ba7117c8b9b3",
        "type": "function",
        "z": "2ea8044e35389b3f",
        "name": "set usbuart baudrate",
        "func": "msg.payload = Number(msg.payload);\n\nif(msg.payload==1) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==2) {\n    msg.baudrate = \"19200\";\n    return msg\n}\nif(msg.payload==3) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif(msg.payload==4) {  \n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==5) {  \n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==6) {\n    msg.baudrate = \"9600\";\n    return msg\n}\nif(msg.payload==7) {     \n    msg.baudrate = \"9600\";\n    return msg\n}\nif (msg.payload == 8) {\n    msg.baudrate = \"2400\";\n    return msg\n}\nif (msg.payload == 9) {\n    msg.baudrate = \"9600\";\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 940,
        "wires": [
            [
                "b186ea440a295e27"
            ]
        ]
    },
    {
        "id": "51b0d4c1.ba0bdc",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"temp3\");\nvar label = global.get(\"Ntemp3\");\n\nmsg.sensorname = label;\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 160,
        "wires": [
            [
                "3449dae3.b38826"
            ]
        ]
    },
    {
        "id": "7a143dd9.64c744",
        "type": "trigger",
        "z": "e10bdbef.f84828",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "51b0d4c1.ba0bdc",
                "5ca2121a.c7476c",
                "132a4023.35b0c",
                "e5045056.e89c6",
                "a17f80c87beee3e8",
                "06a2fdb4a3fdf533"
            ]
        ]
    },
    {
        "id": "f7c8fdb8.e039d",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "7a143dd9.64c744"
            ]
        ]
    },
    {
        "id": "fba98d01.ecbc9",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Temp",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ca2121a.c7476c",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"temp1\");\nvar label = global.get(\"Ntemp1\");\n\nmsg.sensorname = label;\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 80,
        "wires": [
            [
                "5eac3ead.16421"
            ]
        ]
    },
    {
        "id": "5eac3ead.16421",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "b8db3199.f0dbe",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "temp1",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 80,
        "wires": []
    },
    {
        "id": "132a4023.35b0c",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"temp2\");\nvar label = global.get(\"Ntemp2\");\n\nmsg.sensorname = label;\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 120,
        "wires": [
            [
                "7b15895.6650578"
            ]
        ]
    },
    {
        "id": "7b15895.6650578",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "b8db3199.f0dbe",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "temp2",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "3449dae3.b38826",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "b8db3199.f0dbe",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "temp3",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 160,
        "wires": []
    },
    {
        "id": "fa2b3de4.8a0dd",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "b8db3199.f0dbe",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "temp4",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 200,
        "wires": []
    },
    {
        "id": "e5045056.e89c6",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"temp4\");\nvar label = global.get(\"Ntemp4\");\n\nmsg.sensorname = label;\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 200,
        "wires": [
            [
                "fa2b3de4.8a0dd"
            ]
        ]
    },
    {
        "id": "32ccfc50.e148f4",
        "type": "link in",
        "z": "e10bdbef.f84828",
        "name": "linktempsensor",
        "links": [
            "e4c25345.3dbbb",
            "961a8b6d41509271"
        ],
        "x": 445,
        "y": 140,
        "wires": [
            [
                "5ca2121a.c7476c",
                "132a4023.35b0c",
                "51b0d4c1.ba0bdc",
                "e5045056.e89c6"
            ]
        ]
    },
    {
        "id": "6c25212.ffbe9e",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "31dacdc4.d39832",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Capacity",
        "label": "watthours",
        "format": "{{value}}",
        "min": "0",
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 500,
        "y": 360,
        "wires": []
    },
    {
        "id": "9e2a494c.2db488",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "31dacdc4.d39832",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "9",
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "c5321872.4e1538",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"pkwshuntamps\");\n\nmsg.payload= Number(check).toFixed(1)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 400,
        "wires": [
            [
                "3d0de9d6.c94da6"
            ]
        ]
    },
    {
        "id": "d735283b.74f7e8",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "c5321872.4e1538",
                "7c803ae1.101434",
                "1836db67.ef0215",
                "2de9812.ce0df7e",
                "8acd3b7b78f00bf9"
            ]
        ]
    },
    {
        "id": "7c803ae1.101434",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"pkwshuntSOC\");\n\nif(global.get(\"pkwshuntactive\") == true) \n{\nvar min = 0;\nvar max = global.get(\"pkwshuntMAXWatthours\") || 100;\nvar data = Number(check).toFixed(1);\nmsg = {payload:data,ui_control:{min:min,max:max},topic:\"Soil\"};\n}\n\nmsg.payload = Number(global.get(\"pkwshuntWatthours\"));\nmsg.payload = msg.payload.toFixed(0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 360,
        "wires": [
            [
                "6c25212.ffbe9e"
            ]
        ]
    },
    {
        "id": "1836db67.ef0215",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"pkwshuntvolt\");\nvar check1 = global.get(\"pkwshuntamps\");\n\n\nmsg.payload= check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 440,
        "wires": [
            [
                "9e2a494c.2db488"
            ]
        ]
    },
    {
        "id": "ed298420.5b4f88",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "31dacdc4.d39832",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "power(w)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 480,
        "wires": []
    },
    {
        "id": "2de9812.ce0df7e",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"pkwshuntvolt\");\nvar check1 = global.get(\"pkwshuntamps\");\n\nmsg.payload= check*check1;\nmsg.payload= msg.payload.toFixed(1);\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "ed298420.5b4f88"
            ]
        ]
    },
    {
        "id": "7f5ba01e.828df",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Battery",
        "info": "",
        "x": 90,
        "y": 280,
        "wires": []
    },
    {
        "id": "7382b1f7.caaa9",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Water Level",
        "info": "",
        "x": 190,
        "y": 940,
        "wires": []
    },
    {
        "id": "c04bf80f.a3bca8",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "wave1",
        "group": "83efe75b9db71cfa",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "wave",
        "title": "{{sensorname}}",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "99",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1070,
        "y": 940,
        "wires": []
    },
    {
        "id": "89344e4c.925e4",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "wave2",
        "group": "83efe75b9db71cfa",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "wave",
        "title": "{{sensorname}}",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "99",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1070,
        "y": 980,
        "wires": []
    },
    {
        "id": "3f4ef597.ad8bba",
        "type": "link in",
        "z": "e10bdbef.f84828",
        "name": "LinkWaterLevel",
        "links": [
            "e4c25345.3dbbb",
            "58c59868.e875c8",
            "961a8b6d41509271"
        ],
        "x": 675,
        "y": 960,
        "wires": [
            [
                "7caef129.00c9c",
                "5eee9beb.def954",
                "2dc75a1f.e07c76",
                "99311bd4.989658"
            ]
        ]
    },
    {
        "id": "7caef129.00c9c",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"Level1\");\nvar label = global.get(\"NLevel1\");\n\nmsg.sensorname = label;\n\nif (check > 100) {\n    check = 100\n}\nelse if (check < 0) {\n    check = 0\n}\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 940,
        "wires": [
            [
                "c04bf80f.a3bca8"
            ]
        ]
    },
    {
        "id": "5eee9beb.def954",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"Level2\");\nvar label = global.get(\"NLevel2\");\n\nmsg.sensorname = label;\n\nif (check > 100) {\n    check = 100\n}\nelse if (check < 0) {\n    check = 0\n}\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 980,
        "wires": [
            [
                "89344e4c.925e4"
            ]
        ]
    },
    {
        "id": "2dc75a1f.e07c76",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"Level3\");\nvar label = global.get(\"NLevel3\");\n\nmsg.sensorname = label;\n\nif (check > 100) {\n    check = 100\n}\nelse if (check < 0) {\n    check = 0\n}\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1020,
        "wires": [
            [
                "1d5acabb.0458c5"
            ]
        ]
    },
    {
        "id": "99311bd4.989658",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"Level4\");\nvar label = global.get(\"NLevel4\");\n\nmsg.sensorname = label;\n\nif (check > 100) {\n    check = 100\n}\nelse if (check < 0) {\n    check = 0\n}\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1060,
        "wires": [
            [
                "c48ac64f.26aa68"
            ]
        ]
    },
    {
        "id": "8995e5e7.65b5b8",
        "type": "delay",
        "z": "e10bdbef.f84828",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 380,
        "y": 1020,
        "wires": [
            [
                "d051c3b7.a24ae"
            ]
        ]
    },
    {
        "id": "d051c3b7.a24ae",
        "type": "trigger",
        "z": "e10bdbef.f84828",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 600,
        "y": 1020,
        "wires": [
            [
                "7caef129.00c9c",
                "5eee9beb.def954",
                "2dc75a1f.e07c76",
                "99311bd4.989658"
            ]
        ]
    },
    {
        "id": "1d5acabb.0458c5",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "wave2",
        "group": "83efe75b9db71cfa",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "wave",
        "title": "{{sensorname}}",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "99",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1070,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c48ac64f.26aa68",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "wave2",
        "group": "83efe75b9db71cfa",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "wave",
        "title": "{{sensorname}}",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "99",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e5230f8a.f56c2",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1020,
        "wires": [
            [
                "8995e5e7.65b5b8"
            ]
        ]
    },
    {
        "id": "dde5c69474c09d76",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "msg.payload =global.get(\"BMSamps\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "9997def036c6e466"
            ]
        ]
    },
    {
        "id": "60ac7456af1d3a7c",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 360,
        "wires": [
            [
                "dde5c69474c09d76",
                "7b40c7d0a58b2a23",
                "0382d1b552e0b3d5",
                "36e40d74806e5e24",
                "a8219981e67a4ea4",
                "0bde3547b5ee67f5",
                "d35f3157cbfde418",
                "6f7a18ac7fdbbcd7",
                "01a2961b39108eae",
                "63e79ce3b17c8613",
                "0c235bbb53d494e5"
            ]
        ]
    },
    {
        "id": "b7cfaa5fca937fad",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "PekawayShut",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "bef81f410354024e",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "BMS",
        "info": "",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "5e9cb45224a28dd9",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Victron Shunt",
        "info": "",
        "x": 1410,
        "y": 260,
        "wires": []
    },
    {
        "id": "dc55b46a96abfed5",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "cell1(V)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 500,
        "wires": []
    },
    {
        "id": "118dcfafc71960ce",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "cell2(V)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 540,
        "wires": []
    },
    {
        "id": "36716f4596bc5bd9",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "cell3(V)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 580,
        "wires": []
    },
    {
        "id": "93f76c49a7962d21",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "cell4(V)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 620,
        "wires": []
    },
    {
        "id": "7b40c7d0a58b2a23",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMScell1\")/1000;\nmsg.payload= check.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "dc55b46a96abfed5"
            ]
        ]
    },
    {
        "id": "0382d1b552e0b3d5",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMScell2\")/1000;\nmsg.payload= check.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "118dcfafc71960ce"
            ]
        ]
    },
    {
        "id": "36e40d74806e5e24",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMScell3\")/1000;\nmsg.payload= check.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "36716f4596bc5bd9"
            ]
        ]
    },
    {
        "id": "a8219981e67a4ea4",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMScell4\")/1000;\nmsg.payload= check.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "93f76c49a7962d21"
            ]
        ]
    },
    {
        "id": "46d20edab716be1d",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "celldrift(V)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 660,
        "wires": []
    },
    {
        "id": "0bde3547b5ee67f5",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"maxvolt\");\nvar check1 = global.get(\"minvolt\");\nmsg.payload= (check-check1)/1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "46d20edab716be1d"
            ]
        ]
    },
    {
        "id": "ca5c975cffa270c8",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1430,
        "y": 360,
        "wires": [
            [
                "e62b88761cfed2a0",
                "ec029226bc62c85c",
                "cb52748fece48bd8",
                "471930220cb9a52a",
                "1760289b2d1ff9b4",
                "c6f935d5e5f00544",
                "1cb68be23a80cd89"
            ]
        ]
    },
    {
        "id": "e62b88761cfed2a0",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "MainBattery",
        "func": "\nmsg.payload=global.get(\"VE_Mainbattery\");\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 360,
        "wires": [
            [
                "cacc2c09dc3d4e09"
            ]
        ]
    },
    {
        "id": "ec029226bc62c85c",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "Vaux",
        "func": "\nmsg.payload=global.get(\"VE_Aux\");\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 400,
        "wires": [
            [
                "af03a8051a30600c"
            ]
        ]
    },
    {
        "id": "cb52748fece48bd8",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "Current",
        "func": "\nmsg.payload=global.get(\"VE_Current\");\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 440,
        "wires": [
            [
                "7940eb878d54d63c"
            ]
        ]
    },
    {
        "id": "471930220cb9a52a",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "Power",
        "func": "\nmsg.payload=global.get(\"VE_Power\");\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 480,
        "wires": [
            [
                "7492328298868512"
            ]
        ]
    },
    {
        "id": "1760289b2d1ff9b4",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "Consumed AMPHOurs",
        "func": "\nmsg.payload=global.get(\"VE_consumedAH\");\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 520,
        "wires": [
            [
                "0aaae3282a206dea"
            ]
        ]
    },
    {
        "id": "c6f935d5e5f00544",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "SOC",
        "func": "\nmsg.payload=global.get(\"VE_SOC\");\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 560,
        "wires": [
            [
                "5a3fb1d6419ea51f"
            ]
        ]
    },
    {
        "id": "1cb68be23a80cd89",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "TimeToGo",
        "func": "\nmsg.payload=global.get(\"VE_timetogo\");\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 600,
        "wires": [
            [
                "8e0844ea28ecf453"
            ]
        ]
    },
    {
        "id": "7940eb878d54d63c",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "d7b10e4dc1f23ce3",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Amp",
        "label": "A",
        "format": "{{value}}",
        "min": "-200",
        "max": "110",
        "colors": [
            "#000000",
            "#e6e600",
            "#14c838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1970,
        "y": 440,
        "wires": []
    },
    {
        "id": "cacc2c09dc3d4e09",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "d7b10e4dc1f23ce3",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Volt",
        "label": "V",
        "format": "{{value}}",
        "min": "9",
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1970,
        "y": 360,
        "wires": []
    },
    {
        "id": "7492328298868512",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "d7b10e4dc1f23ce3",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "power(w)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1980,
        "y": 480,
        "wires": []
    },
    {
        "id": "5a3fb1d6419ea51f",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "d7b10e4dc1f23ce3",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "State of Charge",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#b30000",
            "#e6e600",
            "#05c838"
        ],
        "seg1": "10",
        "seg2": "40",
        "className": "",
        "x": 2000,
        "y": 560,
        "wires": []
    },
    {
        "id": "0aaae3282a206dea",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "d7b10e4dc1f23ce3",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Consumed Ah",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2000,
        "y": 520,
        "wires": []
    },
    {
        "id": "af03a8051a30600c",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "d7b10e4dc1f23ce3",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "AUX",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1970,
        "y": 400,
        "wires": []
    },
    {
        "id": "8e0844ea28ecf453",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "d7b10e4dc1f23ce3",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TimeToGo(min)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2000,
        "y": 600,
        "wires": []
    },
    {
        "id": "3d0de9d6.c94da6",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "31dacdc4.d39832",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "AMPS",
        "label": "a",
        "format": "{{value}}",
        "min": "-200",
        "max": "110",
        "colors": [
            "#000000",
            "#e6e600",
            "#14c838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "4207887c37cd68d9",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "d35f3157cbfde418",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMStemp\");\nmsg.payload= check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 700,
        "wires": [
            [
                "4207887c37cd68d9"
            ]
        ]
    },
    {
        "id": "9997def036c6e466",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "e60b8bd1.9669b8",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "AMPS",
        "label": "A",
        "format": "{{value}}",
        "min": "-200",
        "max": "110",
        "colors": [
            "#e26f03",
            "#e6e600",
            "#14c838"
        ],
        "seg1": "-0.01",
        "seg2": "1",
        "className": "",
        "x": 1170,
        "y": 360,
        "wires": []
    },
    {
        "id": "8112bb6d1dae02e4",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "e60b8bd1.9669b8",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "State of Charge",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#b30000",
            "#e6e600",
            "#05c838"
        ],
        "seg1": "10",
        "seg2": "40",
        "className": "",
        "x": 1200,
        "y": 400,
        "wires": []
    },
    {
        "id": "6f7a18ac7fdbbcd7",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "msg.payload =global.get(\"BMSsoc\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "8112bb6d1dae02e4"
            ]
        ]
    },
    {
        "id": "a1ed0636d661be17",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "e60b8bd1.9669b8",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "9",
        "max": "15",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "12",
        "seg2": "14.5",
        "className": "",
        "x": 1180,
        "y": 440,
        "wires": []
    },
    {
        "id": "01a2961b39108eae",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "msg.payload = Number(global.get(\"BMSvolt\")).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "a1ed0636d661be17"
            ]
        ]
    },
    {
        "id": "8acd3b7b78f00bf9",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "msg.payload = global.get(\"pkwshuntSOC\");\n\nreturn msg;\n   \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "2551623ea721a188"
            ]
        ]
    },
    {
        "id": "2551623ea721a188",
        "type": "ui_gauge",
        "z": "e10bdbef.f84828",
        "name": "",
        "group": "31dacdc4.d39832",
        "order": 5,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "State of Charge",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#b30000",
            "#e6e600",
            "#05c838"
        ],
        "seg1": "10",
        "seg2": "40",
        "className": "",
        "x": 520,
        "y": 520,
        "wires": []
    },
    {
        "id": "dbd057b40aee842f",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "power(w)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 740,
        "wires": []
    },
    {
        "id": "63e79ce3b17c8613",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"BMSpower\");\n\nif(check==false || check == \"\")\n{\n    check = global.get(\"BMSvolt\")*global.get(\"BMSamps\");\n    check = check.toFixed(1);\n}\n\nmsg.payload= check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 740,
        "wires": [
            [
                "dbd057b40aee842f"
            ]
        ]
    },
    {
        "id": "dd72af6ed786439b",
        "type": "inject",
        "z": "e10bdbef.f84828",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "5198cd4aefa8aff2"
            ]
        ]
    },
    {
        "id": "5198cd4aefa8aff2",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "copy data",
        "func": "var check = global.get(\"BatteryDataDelivery\");\nif (check ==\"\"){\n    return null\n}\n\nif (check == \"BMS\")\n{\n    if (global.get(\"BMSvolt\") == \"wait\" || global.get(\"BMSsoc\") == \"wait\" || global.get(\"BMSamps\") == \"wait\" || global.get(\"BMSsoc\") == undefined || global.get(\"BMSvolt\") == undefined || global.get(\"BMSamps\") == undefined) {\n        return null   \n    }\n    global.set(\"MainBattVolt\",global.get(\"BMSvolt\").toFixed(2))\n    global.set(\"MainBattSoc\",global.get(\"BMSsoc\").toFixed(0))\n    global.set(\"MainBattAmps\",global.get(\"BMSamps\").toFixed(2))\n}\n\nif (check == \"VICTRON\")\n{\n    if (global.get(\"VE_Mainbattery\") == \"\" || global.get(\"VE_SOC\") == \"\" || global.get(\"VE_Current\") == \"\") {\n        return null   \n    }\n    global.set(\"MainBattVolt\",global.get(\"VE_Mainbattery\"))\n    global.set(\"MainBattSoc\",global.get(\"VE_SOC\").toFixed(0))\n    global.set(\"MainBattAmps\",global.get(\"VE_Current\").toFixed(2))\n}\n\nif (check == \"VANPISHUNT\")\n{\n    if (global.get(\"pkwshuntvolt\") == \"\" || global.get(\"pkwshuntSOC\") == \"\" || global.get(\"pkwshuntamps\") == \"\") {\n        return null   \n    }\n    global.set(\"MainBattVolt\",global.get(\"pkwshuntvolt\"))\n    global.set(\"MainBattSoc\",global.get(\"pkwshuntSOC\").toFixed(0))\n    global.set(\"MainBattAmps\",global.get(\"pkwshuntamps\").toFixed(2))\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b945510c79266843",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Copy to MainBattData",
        "info": "",
        "x": 180,
        "y": 680,
        "wires": []
    },
    {
        "id": "ed63aeac49ff2ea4",
        "type": "comment",
        "z": "e10bdbef.f84828",
        "name": "Delete unused watertanks here",
        "info": "",
        "x": 1070,
        "y": 900,
        "wires": []
    },
    {
        "id": "a568b22f6e8c8503",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "e60b8bd1.9669b8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Cap",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1170,
        "y": 780,
        "wires": []
    },
    {
        "id": "0c235bbb53d494e5",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "msg.payload=global.get(\"BMScap\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 780,
        "wires": [
            [
                "a568b22f6e8c8503"
            ]
        ]
    },
    {
        "id": "a17f80c87beee3e8",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"dimmytemp1\");\nvar label = global.get(\"Ndimmytemp1\");\n\nmsg.sensorname = label;\nmsg.payload = check;\n\nif (msg.payload != \"\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 240,
        "wires": [
            [
                "aedeb5b6e5d952b1"
            ]
        ]
    },
    {
        "id": "aedeb5b6e5d952b1",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "cdfe5cc799303fe2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "dimmytemp1",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "06a2fdb4a3fdf533",
        "type": "function",
        "z": "e10bdbef.f84828",
        "name": "get global",
        "func": "var check = global.get(\"dimmytemp2\");\nvar label = global.get(\"Ndimmytemp2\");\n\nmsg.sensorname = label;\nmsg.payload = check;  \n\nif (msg.payload != \"\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 280,
        "wires": [
            [
                "3df5b625b3bc2a3b"
            ]
        ]
    },
    {
        "id": "3df5b625b3bc2a3b",
        "type": "ui_text",
        "z": "e10bdbef.f84828",
        "group": "cdfe5cc799303fe2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "dimmytemp2",
        "label": "{{sensorname}}",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "bfbd7c9ef5028bb7",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "From Init Flow",
        "links": [
            "164524664aa72dda"
        ],
        "x": 145,
        "y": 1040,
        "wires": [
            [
                "18cb1b613e01ce8c",
                "5ad59a8cb2d528e4",
                "bca97bb19473afd2",
                "a09d2fa4dbaf3703",
                "c212bc911f540555",
                "1595f8b7506866cb"
            ]
        ]
    },
    {
        "id": "c351aff719180e76",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1955,
        "y": 280,
        "wires": []
    },
    {
        "id": "8702cd1aeacb9a41",
        "type": "switch",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x02",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x03",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x04",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x05",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x06",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x07",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x08",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "fa258e0db082ae9a"
            ],
            [
                "9fbf716e57f53d4c"
            ],
            [
                "84366fadddcdd179"
            ],
            [
                "b42730e1b5adca40"
            ],
            [
                "a10bb7cacd55ae72"
            ],
            [
                "c971bdcff1cf6c54"
            ],
            [
                "125c08247783561c"
            ],
            [
                "f42d0f3147d21a31"
            ]
        ]
    },
    {
        "id": "fa258e0db082ae9a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay1",
        "func": "var check = global.get(\"one\");\nif (check === true) { \n  check= false; \n}\nelse {\n  check = true; \n}\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 120,
        "wires": [
            [
                "720d8c2ff876320d"
            ]
        ]
    },
    {
        "id": "9fbf716e57f53d4c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay2",
        "func": "var check = global.get(\"two\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 160,
        "wires": [
            [
                "9a86a2839b75c781"
            ]
        ]
    },
    {
        "id": "84366fadddcdd179",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay3",
        "func": "var check = global.get(\"three\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 200,
        "wires": [
            [
                "3019641ae8571e9b"
            ]
        ]
    },
    {
        "id": "b42730e1b5adca40",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay4",
        "func": "var check = global.get(\"four\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 240,
        "wires": [
            [
                "b1c3a19b51caf489"
            ]
        ]
    },
    {
        "id": "a10bb7cacd55ae72",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay5",
        "func": "var check = global.get(\"five\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "cc47e86723bc4c23"
            ]
        ]
    },
    {
        "id": "c971bdcff1cf6c54",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay6",
        "func": "var check = global.get(\"six\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 320,
        "wires": [
            [
                "ca15d0246510cd64"
            ]
        ]
    },
    {
        "id": "125c08247783561c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay7",
        "func": "var check = global.get(\"seven\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 360,
        "wires": [
            [
                "7610c3c54986f3af"
            ]
        ]
    },
    {
        "id": "f42d0f3147d21a31",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check relay8",
        "func": "var check = global.get(\"eight\");\nif (check === true) {\n  check = false;\n}\nelse {\n  check = true;\n}\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 400,
        "wires": [
            [
                "0638ad8f109878be"
            ]
        ]
    },
    {
        "id": "8626dc87cfb0d59c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status relay",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1080,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "720d8c2ff876320d",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 1",
        "links": [
            "1ef7678bbaad1144",
            "23ac7466e5c01ae2",
            "6be0cc7556d1afc4",
            "86313867d769988b",
            "d733acfd12bbd35e",
            "df1ebee2d30384f0",
            "e2958091f0f04f2f",
            "e9ffa3ef.cde5d",
            "f765423d8ced5e16"
        ],
        "x": 1185,
        "y": 120,
        "wires": []
    },
    {
        "id": "cab7c33a6b03d681",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 1",
        "links": [
            "11c24833.f847b8",
            "3fe1e8b328779bf0"
        ],
        "x": 1435,
        "y": 120,
        "wires": [
            [
                "654cd8ba8ffc12b5"
            ]
        ]
    },
    {
        "id": "b1c3a19b51caf489",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 4",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 1185,
        "y": 240,
        "wires": []
    },
    {
        "id": "46d4a16c9ab98c02",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 4",
        "links": [
            "e6f5ea3d.aa0598",
            "b02c0e0763bb6814"
        ],
        "x": 1435,
        "y": 240,
        "wires": [
            [
                "de08ede24754dce6"
            ]
        ]
    },
    {
        "id": "cc47e86723bc4c23",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 5",
        "links": [
            "8cde3678.94ac88",
            "1d05179e.1f1a78",
            "1e0f28f7.6b3347",
            "a17061ed.e682d"
        ],
        "x": 1185,
        "y": 280,
        "wires": []
    },
    {
        "id": "335311e76fc1b0d3",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 5",
        "links": [
            "609b8170.8c3d8",
            "22d3166b.ba4d7a",
            "650bb86c.becc38",
            "4f9da46367fef448"
        ],
        "x": 1435,
        "y": 280,
        "wires": [
            [
                "5ef265fb30f0b3fd"
            ]
        ]
    },
    {
        "id": "ca15d0246510cd64",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 6",
        "links": [
            "a45ee432.b7ef98",
            "c9adec52.63ae6",
            "f4303c75.d5b1c",
            "31dcf86e.085898"
        ],
        "x": 1185,
        "y": 320,
        "wires": []
    },
    {
        "id": "d891f680fd571dec",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 6",
        "links": [
            "fdbe2584.d2b908"
        ],
        "x": 1435,
        "y": 320,
        "wires": [
            [
                "19a1a08474a557bc"
            ]
        ]
    },
    {
        "id": "7610c3c54986f3af",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 7",
        "links": [
            "e97a5ba1.09c7e8",
            "38796905.f4b7f6",
            "de881e69.90777",
            "3f2d3621.ced3da"
        ],
        "x": 1185,
        "y": 360,
        "wires": []
    },
    {
        "id": "035628cc9674bd11",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 7",
        "links": [
            "9d5d0211.bcb19",
            "7342408f.2fe48",
            "1e76d914.195da7",
            "04b3f2d1f22e9655"
        ],
        "x": 1435,
        "y": 360,
        "wires": [
            [
                "e69fa12603b2da6f"
            ]
        ]
    },
    {
        "id": "0638ad8f109878be",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 8",
        "links": [
            "95089e82.5785e",
            "2840c10.f61294",
            "f38ca7b2.7594d8",
            "c946b435.21b198"
        ],
        "x": 1185,
        "y": 400,
        "wires": []
    },
    {
        "id": "e3452c9d81f432fe",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 8",
        "links": [
            "3d012ced.3740b4"
        ],
        "x": 1435,
        "y": 400,
        "wires": [
            [
                "492721c2a2be2e3d"
            ]
        ]
    },
    {
        "id": "9a86a2839b75c781",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 2",
        "links": [
            "7255f9f4.6304d8"
        ],
        "x": 1185,
        "y": 160,
        "wires": []
    },
    {
        "id": "68f3ac79694a84b1",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 2",
        "links": [
            "893b1d6d.f3097",
            "da5b7e203041069d"
        ],
        "x": 1435,
        "y": 160,
        "wires": [
            [
                "685c8d7a53556461"
            ]
        ]
    },
    {
        "id": "3019641ae8571e9b",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 3",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 1185,
        "y": 200,
        "wires": []
    },
    {
        "id": "421035b4d432bed7",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 3",
        "links": [
            "c0c96477.8f3118",
            "5c4d2c529f2b0f24"
        ],
        "x": 1435,
        "y": 200,
        "wires": [
            [
                "bf70d22802a32496"
            ]
        ]
    },
    {
        "id": "10940a91f0da7603",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "To Dashboard Relais",
        "info": "",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "d9ae692a80d696e6",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 140,
        "wires": [
            [
                "6ba106d26189629a"
            ]
        ]
    },
    {
        "id": "6b9d5a7efd886141",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 380,
        "wires": [
            [
                "5058f7eeca94e3cb"
            ]
        ]
    },
    {
        "id": "4bd82aa0a64d1207",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.55",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 180,
        "wires": [
            [
                "5a151d19f113bf23"
            ]
        ]
    },
    {
        "id": "a5c2795fabeb875a",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 220,
        "wires": [
            [
                "8ae3f613c8522df8"
            ]
        ]
    },
    {
        "id": "4f64f0acfa13a726",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 260,
        "wires": [
            [
                "5daffd7aca81ab80"
            ]
        ]
    },
    {
        "id": "c712a4f0e0a426f7",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 300,
        "wires": [
            [
                "8db12396393afbbd"
            ]
        ]
    },
    {
        "id": "8a6ee309c5e97ac0",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.75",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 340,
        "wires": [
            [
                "fde596420350f65c"
            ]
        ]
    },
    {
        "id": "665cb2d78edd0245",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 100,
        "wires": [
            [
                "3866177a493dcccc"
            ]
        ]
    },
    {
        "id": "58b2fef61d764c23",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 140,
        "wires": [
            [
                "d9ae692a80d696e6"
            ]
        ]
    },
    {
        "id": "7e7734dc313207ed",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 180,
        "wires": [
            [
                "4bd82aa0a64d1207"
            ]
        ]
    },
    {
        "id": "c8fac2168dab8a48",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 220,
        "wires": [
            [
                "a5c2795fabeb875a"
            ]
        ]
    },
    {
        "id": "2abf9f0d10e95ef6",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 260,
        "wires": [
            [
                "4f64f0acfa13a726"
            ]
        ]
    },
    {
        "id": "cdbbb1530801c061",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 300,
        "wires": [
            [
                "c712a4f0e0a426f7"
            ]
        ]
    },
    {
        "id": "d3053b169799573d",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name8",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 380,
        "wires": [
            [
                "6b9d5a7efd886141"
            ]
        ]
    },
    {
        "id": "82e236d5c67298b4",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2700,
        "y": 260,
        "wires": [
            [
                "665cb2d78edd0245",
                "58b2fef61d764c23",
                "7e7734dc313207ed",
                "c8fac2168dab8a48",
                "2abf9f0d10e95ef6",
                "cdbbb1530801c061",
                "d3053b169799573d",
                "e0b032a383c50b24",
                "35c5afc4565c6a72",
                "da1cc8078ad72558"
            ]
        ]
    },
    {
        "id": "e0b032a383c50b24",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 340,
        "wires": [
            [
                "8a6ee309c5e97ac0"
            ]
        ]
    },
    {
        "id": "3866177a493dcccc",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t41.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 100,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "51224a1fccb5c5f9",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "f3b81ce4.96da8"
        ],
        "x": 2545,
        "y": 620,
        "wires": [
            [
                "82e236d5c67298b4",
                "74a81fc88ab2cca3",
                "3702782747945312"
            ]
        ]
    },
    {
        "id": "6ba106d26189629a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\n\n\n\n\nmsg.payload = \"t42.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 140,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "5a151d19f113bf23",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t43.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 180,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "8ae3f613c8522df8",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\n\nmsg.payload = \"t44.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 220,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "5daffd7aca81ab80",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t45.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 260,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "8db12396393afbbd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\n\nmsg.payload = \"t46.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 300,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "fde596420350f65c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t47.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 340,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "5058f7eeca94e3cb",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t48.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 380,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "7826827dd358496b",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 560,
        "wires": [
            [
                "54a28624954927ab"
            ]
        ]
    },
    {
        "id": "924c2345f2fc88dd",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 880,
        "wires": [
            [
                "325c25b9b25b1733"
            ]
        ]
    },
    {
        "id": "e5f779cd37f088ae",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.55",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 600,
        "wires": [
            [
                "c2cde6a020b6e74b"
            ]
        ]
    },
    {
        "id": "b748f7a8b3c0fe01",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 640,
        "wires": [
            [
                "f265cee20e6e9d2c"
            ]
        ]
    },
    {
        "id": "5f1686c73ea6b871",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 760,
        "wires": [
            [
                "c9b8479df3597eab"
            ]
        ]
    },
    {
        "id": "dbb902c53a313643",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 800,
        "wires": [
            [
                "2729afed2f0aedfd"
            ]
        ]
    },
    {
        "id": "c401b68e24cb5cb6",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.75",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 840,
        "wires": [
            [
                "caef557005f64d7b"
            ]
        ]
    },
    {
        "id": "d72aad103dcabdc6",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t41.txt,440\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 520,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "54a28624954927ab",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t42.txt,455\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 560,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "c2cde6a020b6e74b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t43.txt,470\";\n\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 600,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "f265cee20e6e9d2c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t44.txt,485\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 640,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "c9b8479df3597eab",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t45.txt,500\";\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 760,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "2729afed2f0aedfd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t46.txt,515\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 800,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "caef557005f64d7b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t47.txt,530\";\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 840,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "325c25b9b25b1733",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t48.txt,545\";\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 880,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "74a81fc88ab2cca3",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2720,
        "y": 720,
        "wires": [
            [
                "d72aad103dcabdc6",
                "7826827dd358496b",
                "e5f779cd37f088ae",
                "b748f7a8b3c0fe01",
                "5f1686c73ea6b871",
                "dbb902c53a313643",
                "c401b68e24cb5cb6",
                "924c2345f2fc88dd",
                "00134fa8e4e69881",
                "aba15a11daeb3ef4"
            ]
        ]
    },
    {
        "id": "6f601024fa4c4ed8",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 660,
        "wires": []
    },
    {
        "id": "6383778a69d9aad1",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Edit Button Txt",
        "info": "",
        "x": 3160,
        "y": 80,
        "wires": []
    },
    {
        "id": "f9055b37f0eed1f1",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Save in Nextion EEPROM - relay",
        "info": "",
        "x": 3150,
        "y": 520,
        "wires": []
    },
    {
        "id": "a7178e975b508c9e",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Save in Nextion EEPROM - Level",
        "info": "",
        "x": 3170,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c17b895fcd3e1cc9",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1440,
        "wires": [
            [
                "a1ab9cbd7a8c8704"
            ]
        ]
    },
    {
        "id": "4c69d086d3b33d75",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t61.txt,600\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1320,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "a1ab9cbd7a8c8704",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t62.txt,625\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1440,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "318fbe388a0de877",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3dd70e69c062bf47",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "58c59868.e875c8"
        ],
        "x": 2575,
        "y": 1460,
        "wires": [
            [
                "057c0545641aed08",
                "c1e1bec6ff42befd",
                "740c23f9b850457d",
                "a0c43a402f394678",
                "c039ed40ba196867",
                "3702782747945312"
            ]
        ]
    },
    {
        "id": "434fcb91fc45eb50",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1480,
        "wires": [
            [
                "9123e80c1a64ff88"
            ]
        ]
    },
    {
        "id": "6228ba4d3cdb577c",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1520,
        "wires": [
            [
                "5a04fbbdf67d1356"
            ]
        ]
    },
    {
        "id": "c1e1bec6ff42befd",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/level1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3130,
        "y": 1480,
        "wires": [
            [
                "434fcb91fc45eb50"
            ]
        ]
    },
    {
        "id": "740c23f9b850457d",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/level2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3130,
        "y": 1520,
        "wires": [
            [
                "6228ba4d3cdb577c"
            ]
        ]
    },
    {
        "id": "c039ed40ba196867",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/level4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3140,
        "y": 1600,
        "wires": [
            [
                "d17978f2067394f5"
            ]
        ]
    },
    {
        "id": "a0c43a402f394678",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/level3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3130,
        "y": 1560,
        "wires": [
            [
                "6b5ffe5d66f2efe1"
            ]
        ]
    },
    {
        "id": "9123e80c1a64ff88",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\n\n\n\nmsg.payload = \"t61.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 1480,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "5a04fbbdf67d1356",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = msg.payload;\n\n\n\n\nmsg.payload = \"t62.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3530,
        "y": 1520,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "057c0545641aed08",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3120,
        "y": 1360,
        "wires": [
            [
                "4c69d086d3b33d75",
                "c17b895fcd3e1cc9",
                "7b1bbd3fdfa40e07",
                "c1b9de90986cdc77"
            ]
        ]
    },
    {
        "id": "e48ee7aacdf56dd0",
        "type": "exec",
        "z": "013c27e6e1e7446d",
        "command": "sudo date -s ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 750,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "554e5ee80a20d738",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Sync Time from Nextion RTC",
        "info": "",
        "x": 360,
        "y": 940,
        "wires": []
    },
    {
        "id": "97c714fcb7767c8f",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "nameupdate",
        "links": [
            "23a5f872.6a3d28",
            "ffbc36db2295fadb",
            "1f8fcf0784c4d729",
            "478ea3480d266c95"
        ],
        "x": 2975,
        "y": 920,
        "wires": []
    },
    {
        "id": "3702782747945312",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2720,
        "y": 920,
        "wires": [
            [
                "97c714fcb7767c8f"
            ]
        ]
    },
    {
        "id": "598b3e23fb381e1c",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "update globales",
        "info": "",
        "x": 2720,
        "y": 880,
        "wires": []
    },
    {
        "id": "89b2434889040a39",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t83.txt,850\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3550,
        "y": 1740,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "68681982f57e3b98",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t84.txt,875\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1780,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "4bb2a029a8d55a10",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6e88cc4bca0a8995",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "d3a64b0d.8d56b8"
        ],
        "x": 2605,
        "y": 1900,
        "wires": [
            [
                "f5161c3b177d97fb",
                "ebc91a98cb9eb1d0",
                "6a266dcacded1d50",
                "75746c9eaeb2f2d5",
                "b510f9106d20c635",
                "3702782747945312",
                "ceb0b7a42a9b2bb5",
                "a7234f4ad034b48c",
                "a919ceaa7cd6fbd8",
                "2793fa059e08450d"
            ]
        ]
    },
    {
        "id": "5c83defdf8a023d3",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1980,
        "wires": [
            [
                "df4bf2bb76990884"
            ]
        ]
    },
    {
        "id": "6efe617d54aca412",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 2020,
        "wires": [
            [
                "b8031e10c3ecfc28"
            ]
        ]
    },
    {
        "id": "ebc91a98cb9eb1d0",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3100,
        "y": 1980,
        "wires": [
            [
                "5c83defdf8a023d3"
            ]
        ]
    },
    {
        "id": "6a266dcacded1d50",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3100,
        "y": 2020,
        "wires": [
            [
                "6efe617d54aca412"
            ]
        ]
    },
    {
        "id": "b510f9106d20c635",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3100,
        "y": 2100,
        "wires": [
            [
                "daa36ed61df7b859"
            ]
        ]
    },
    {
        "id": "75746c9eaeb2f2d5",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3100,
        "y": 2060,
        "wires": [
            [
                "a98ba1f39a30d6f6"
            ]
        ]
    },
    {
        "id": "df4bf2bb76990884",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\n\n\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\n\nmsg.payload = \"t81.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 1980,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "b8031e10c3ecfc28",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\nmsg.payload = \"t82.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2020,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "f5161c3b177d97fb",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3320,
        "y": 1800,
        "wires": [
            [
                "89b2434889040a39",
                "cd378ca05f60c8cd",
                "8029d6512a577de2",
                "68681982f57e3b98",
                "8fb7cf245b2a8b2d",
                "be7c4908f9bdaee9",
                "37e716238b48545f",
                "7eba2141f92539df"
            ]
        ]
    },
    {
        "id": "cd378ca05f60c8cd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t81.txt,800\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1660,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "8029d6512a577de2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t82.txt,825\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3550,
        "y": 1700,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "90193c47c5455e33",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Save in Nextion EEPROM - Wifiname",
        "info": "",
        "x": 3250,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a98ba1f39a30d6f6",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 2060,
        "wires": [
            [
                "2e7fc69249e31efd"
            ]
        ]
    },
    {
        "id": "daa36ed61df7b859",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 2100,
        "wires": [
            [
                "560261478d051af3"
            ]
        ]
    },
    {
        "id": "2e7fc69249e31efd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "var buf = [];\n\nvar newStr = msg.payload;\n\n\nmsg.payload = \"t83.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2060,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "560261478d051af3",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\nvar buf = [];\n\nvar newStr = msg.payload;\nmsg.payload = \"t84.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2100,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "0056e27501414fc0",
        "type": "switch",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x0B",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0x0C",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0D",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0E",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x4B",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x4C",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x4D",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x4E",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "5de46367dbedf2ea"
            ],
            [
                "2320fb1322647747"
            ],
            [
                "c6daf02a88a500c1"
            ],
            [
                "21c71c2049860820"
            ],
            [
                "86bf84ac2c740713"
            ],
            [
                "416682304310e43d"
            ],
            [
                "ed7a7902c8ddc395"
            ],
            [
                "cf46cb077fde508f"
            ]
        ]
    },
    {
        "id": "af0bfeb598812112",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "wifi relays",
        "info": "",
        "x": 980,
        "y": 480,
        "wires": []
    },
    {
        "id": "1918877c187cee95",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 4",
        "links": [
            "52e560227ba2414c",
            "d2ce5044.ef8af"
        ],
        "x": 1955,
        "y": 600,
        "wires": []
    },
    {
        "id": "d4164aba427ccf52",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 3",
        "links": [
            "428f4d48.86eaf4",
            "b7ebdd6f595b53a1"
        ],
        "x": 1955,
        "y": 560,
        "wires": []
    },
    {
        "id": "8e74064fd45a46d4",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 2",
        "links": [
            "33a5d09e.6cc14",
            "fe0c5890608f9457"
        ],
        "x": 1955,
        "y": 520,
        "wires": []
    },
    {
        "id": "5de46367dbedf2ea",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay1",
        "func": "var check = global.get(\"Wone\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 480,
        "wires": [
            [
                "8a40988dd0ca7485"
            ]
        ]
    },
    {
        "id": "2320fb1322647747",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay2",
        "func": "var check = global.get(\"Wtwo\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 520,
        "wires": [
            [
                "8e74064fd45a46d4"
            ]
        ]
    },
    {
        "id": "c6daf02a88a500c1",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay3",
        "func": "var check = global.get(\"Wthree\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 560,
        "wires": [
            [
                "d4164aba427ccf52"
            ]
        ]
    },
    {
        "id": "21c71c2049860820",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay4",
        "func": "var check = global.get(\"Wfour\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 600,
        "wires": [
            [
                "1918877c187cee95"
            ]
        ]
    },
    {
        "id": "d63dfb1d717d5fdd",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 280,
        "wires": []
    },
    {
        "id": "355ff172d5c3c342",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Save in Nextion EEPROM - TEMP",
        "info": "",
        "x": 3200,
        "y": 940,
        "wires": []
    },
    {
        "id": "415b7912fd262441",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3150,
        "y": 1020,
        "wires": [
            [
                "3035ff95c980347e"
            ]
        ]
    },
    {
        "id": "995f1ff6b18e5025",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.55",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3150,
        "y": 1060,
        "wires": [
            [
                "042a817c24fb1f54"
            ]
        ]
    },
    {
        "id": "65149d44a5450af4",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3150,
        "y": 1100,
        "wires": [
            [
                "f32544bc7205581c"
            ]
        ]
    },
    {
        "id": "d06df49baa2d9557",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t8.txt,500\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3130,
        "y": 980,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "3035ff95c980347e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t9.txt,550\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3370,
        "y": 1020,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "042a817c24fb1f54",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t10.txt,600\";\n\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3370,
        "y": 1060,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "f32544bc7205581c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t11.txt,650\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3370,
        "y": 1100,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "5b182493eb15566d",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e43b595a1cd28a45",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "e4c25345.3dbbb"
        ],
        "x": 2575,
        "y": 1160,
        "wires": [
            [
                "e6c43cc13577b98c",
                "d50b13e11202f135",
                "a6ab45fb5e61949e",
                "7cd24d1dc3d4632f",
                "e5fce4c1199ed4bc",
                "3702782747945312"
            ]
        ]
    },
    {
        "id": "d91587e367cb7a5e",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3390,
        "y": 1260,
        "wires": [
            [
                "4bda6a47a66be712"
            ]
        ]
    },
    {
        "id": "ef9af97370a5be68",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3390,
        "y": 1140,
        "wires": [
            [
                "f65f9ed0d9bffd00"
            ]
        ]
    },
    {
        "id": "c476f82b4ec462bb",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3390,
        "y": 1180,
        "wires": [
            [
                "2f624e67e739838d"
            ]
        ]
    },
    {
        "id": "9b93950dcee8668b",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.75",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3390,
        "y": 1220,
        "wires": [
            [
                "ae143b6273e18e4a"
            ]
        ]
    },
    {
        "id": "d50b13e11202f135",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3160,
        "y": 1140,
        "wires": [
            [
                "ef9af97370a5be68"
            ]
        ]
    },
    {
        "id": "a6ab45fb5e61949e",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3160,
        "y": 1180,
        "wires": [
            [
                "c476f82b4ec462bb"
            ]
        ]
    },
    {
        "id": "e5fce4c1199ed4bc",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3160,
        "y": 1260,
        "wires": [
            [
                "d91587e367cb7a5e"
            ]
        ]
    },
    {
        "id": "7cd24d1dc3d4632f",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3160,
        "y": 1220,
        "wires": [
            [
                "9b93950dcee8668b"
            ]
        ]
    },
    {
        "id": "f65f9ed0d9bffd00",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"t8.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3590,
        "y": 1140,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "2f624e67e739838d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"t9.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3590,
        "y": 1180,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "ae143b6273e18e4a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"t10.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3590,
        "y": 1220,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "4bda6a47a66be712",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"t11.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3590,
        "y": 1260,
        "wires": [
            [
                "5b182493eb15566d"
            ]
        ]
    },
    {
        "id": "e6c43cc13577b98c",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2860,
        "y": 1100,
        "wires": [
            [
                "415b7912fd262441",
                "995f1ff6b18e5025",
                "65149d44a5450af4",
                "d06df49baa2d9557"
            ]
        ]
    },
    {
        "id": "c177a0d86e07afe7",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status MainBatt",
        "func": "var SOC = global.get(\"MainBattSoc\");\nvar AMPS = global.get(\"MainBattAmps\");\nvar VOLT = global.get(\"MainBattVolt\");\n\n\nmsg.Site = 0x02;\nmsg.Command = 0xff;\nmsg.string = VOLT + \"/\" + AMPS +\"/\" + SOC +\"/\"\n\nif(global.get(\"BatteryDataDelivery\")==\"1\")\nmsg.Command = 0xEE;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1040,
        "wires": [
            [
                "c0425c706dcfc785"
            ]
        ]
    },
    {
        "id": "fde467896321f625",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "mode": "link",
        "links": [
            "149f7856ccf5def5"
        ],
        "x": 1805,
        "y": 1020,
        "wires": []
    },
    {
        "id": "79d1002e7d0c9e36",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "BMS INFO",
        "info": "",
        "x": 1540,
        "y": 1400,
        "wires": []
    },
    {
        "id": "34cedcf899da6869",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t98.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1440,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "6ed3c2a23d50b424",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "\nvar check = global.get(\"BMSpower\");\n\nif(check==false || check == \"\")\n{\n    check = global.get(\"BMSvolt\")*global.get(\"BMSamps\");\n    check = check.toFixed(1);\n}\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1440,
        "wires": [
            [
                "34cedcf899da6869"
            ]
        ]
    },
    {
        "id": "87f76850f70a04b9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check settings",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1560,
        "wires": [
            [
                "6ed3c2a23d50b424",
                "df09fdeec5b06743",
                "da64405916d9ca79",
                "c6a4f7d1ccad03b3",
                "8d3c623945f9d880",
                "9d865cc2bed32d91",
                "b0a82a94b7c2ce7e"
            ]
        ]
    },
    {
        "id": "e1c35d5563222826",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 2255,
        "y": 1520,
        "wires": []
    },
    {
        "id": "56799c6a0aac6e48",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t99.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1480,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "df09fdeec5b06743",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"BMStemp\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1480,
        "wires": [
            [
                "56799c6a0aac6e48"
            ]
        ]
    },
    {
        "id": "84db3da9d9db4be2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t910.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1520,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "da64405916d9ca79",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"BMScell1\")/1000;\nmsg.payload= check.toFixed(2);\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1520,
        "wires": [
            [
                "84db3da9d9db4be2"
            ]
        ]
    },
    {
        "id": "0c90a508346375cb",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t911.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1560,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "c6a4f7d1ccad03b3",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"BMScell2\")/1000;\nmsg.payload= check.toFixed(2);\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1560,
        "wires": [
            [
                "0c90a508346375cb"
            ]
        ]
    },
    {
        "id": "57f11f02f1aa3b54",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t912.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1600,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "8d3c623945f9d880",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"BMScell3\")/1000;\nmsg.payload= check.toFixed(2);\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1600,
        "wires": [
            [
                "57f11f02f1aa3b54"
            ]
        ]
    },
    {
        "id": "0aaffb3ba418b62d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t913.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1640,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "9d865cc2bed32d91",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"BMScell4\")/1000;\nmsg.payload= check.toFixed(2);\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1640,
        "wires": [
            [
                "0aaffb3ba418b62d"
            ]
        ]
    },
    {
        "id": "9de15deb8d6eb94f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t914.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1680,
        "wires": [
            [
                "e1c35d5563222826"
            ]
        ]
    },
    {
        "id": "b0a82a94b7c2ce7e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"maxvolt\");\nvar check1 = global.get(\"minvolt\");\n\nmsg.payload= (check-check1)/1000;\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1680,
        "wires": [
            [
                "9de15deb8d6eb94f"
            ]
        ]
    },
    {
        "id": "527507695ddbdc39",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Save in Nextion EEPROM - TEMP",
        "info": "",
        "x": 3240,
        "y": 2400,
        "wires": []
    },
    {
        "id": "9d212bbf67c86ec9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "var buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\nmsg.payload = \"wepo t33.txt,400\";\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3570,
        "y": 2440,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "b2a9ed9674213640",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "var buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\nmsg.payload = \"wepo t34.txt,425\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3570,
        "y": 2480,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "662288728da5cd7c",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 3785,
        "y": 2500,
        "wires": []
    },
    {
        "id": "0597d9f50b3013f7",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "0.65s",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2520,
        "wires": [
            [
                "15b9740d48853973"
            ]
        ]
    },
    {
        "id": "1e8a80cdda8d9f48",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "0.7s",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2560,
        "wires": [
            [
                "2f6208570718c6ba"
            ]
        ]
    },
    {
        "id": "eccdad8e637d837a",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3140,
        "y": 2520,
        "wires": [
            [
                "0597d9f50b3013f7"
            ]
        ]
    },
    {
        "id": "b09888ed547845fc",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3140,
        "y": 2560,
        "wires": [
            [
                "1e8a80cdda8d9f48"
            ]
        ]
    },
    {
        "id": "5fc067ea94c7f887",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3140,
        "y": 2640,
        "wires": [
            [
                "57666d5eab09c5cf"
            ]
        ]
    },
    {
        "id": "88d59be56e86e151",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/tempsensor3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 3140,
        "y": 2600,
        "wires": [
            [
                "74928bee6579bf98"
            ]
        ]
    },
    {
        "id": "15b9740d48853973",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "var buf = [];\nmsg.payload = \"t31.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2520,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "2f6208570718c6ba",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "var buf = [];\nmsg.payload = \"t32.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2560,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "ff98d6768e1e51c5",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2440,
        "wires": [
            [
                "9d212bbf67c86ec9",
                "4eb5622a9499c254",
                "080209a4f030ea6c",
                "b2a9ed9674213640"
            ]
        ]
    },
    {
        "id": "4eb5622a9499c254",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "var buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\nmsg.payload = \"wepo t31.txt,350\";\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3570,
        "y": 2360,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "080209a4f030ea6c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "var buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\nmsg.payload = \"wepo t32.txt,375\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3570,
        "y": 2400,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "74928bee6579bf98",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "0.65s",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2600,
        "wires": [
            [
                "1a17d7140249e236"
            ]
        ]
    },
    {
        "id": "57666d5eab09c5cf",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "0.7s",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2640,
        "wires": [
            [
                "dc41473cf33b642c"
            ]
        ]
    },
    {
        "id": "1a17d7140249e236",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "var buf = [];\nmsg.payload = \"t33.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2600,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "dc41473cf33b642c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "var buf = [];\nmsg.payload = \"t34.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2640,
        "wires": [
            [
                "662288728da5cd7c"
            ]
        ]
    },
    {
        "id": "1cb5d103b9019efa",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "Update Tempname",
        "links": [
            "e4c25345.3dbbb"
        ],
        "x": 2615,
        "y": 2420,
        "wires": [
            [
                "ff98d6768e1e51c5",
                "eccdad8e637d837a",
                "b09888ed547845fc",
                "88d59be56e86e151",
                "5fc067ea94c7f887",
                "68e960f85a67bd15"
            ]
        ]
    },
    {
        "id": "f00785041faf7241",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "nameupdate",
        "links": [
            "23a5f872.6a3d28",
            "ffbc36db2295fadb",
            "1f8fcf0784c4d729",
            "478ea3480d266c95"
        ],
        "x": 3785,
        "y": 2320,
        "wires": []
    },
    {
        "id": "68e960f85a67bd15",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "10s",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3330,
        "y": 2320,
        "wires": [
            [
                "f00785041faf7241"
            ]
        ]
    },
    {
        "id": "01497ad92530cfe2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t111.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1780,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "152b6e49869d5db4",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_Mainbattery\");\n\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1780,
        "wires": [
            [
                "01497ad92530cfe2"
            ]
        ]
    },
    {
        "id": "aa2b06bb394c1368",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check settings",
        "func": "var usb1 = global.get(\"usb1uart\");\nvar usb2 = global.get(\"usb2uart\");\nvar usb3 = global.get(\"usb3uart\");\nvar usb4 = global.get(\"usb4uart\");\nvar uart = global.get(\"multiuart1\");\n\nif(usb1 == 2 || usb2 == 2 || usb3 == 2 || usb4 == 2 || uart == 2) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1800,
        "wires": [
            [
                "152b6e49869d5db4",
                "814e24b17e550876",
                "c39f59dea60f56d1",
                "2b58806b6f09121a",
                "f59bbf4f626bcf5c",
                "b75c7b4c79112549",
                "e9b1bb5b780d46d3",
                "fc50c6a1fb3fe8bf",
                "bdf5009810552081",
                "29b6493e9bfbc918",
                "7e87ec098594ef22",
                "ecef1a26c1ca38ee",
                "1d7b8a7867ba9b07",
                "902a0dd38cfbe169"
            ]
        ]
    },
    {
        "id": "fe5ec7e8aad24089",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 2255,
        "y": 1880,
        "wires": []
    },
    {
        "id": "5146c11390e42ffd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t112.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1820,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "814e24b17e550876",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_Aux\");\n\n\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1820,
        "wires": [
            [
                "5146c11390e42ffd"
            ]
        ]
    },
    {
        "id": "ce25a9fec23a73a2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t113.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1860,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "c39f59dea60f56d1",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_Current\");\n\n\nmsg.payload = check;\n\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1860,
        "wires": [
            [
                "ce25a9fec23a73a2"
            ]
        ]
    },
    {
        "id": "e0abc84b0d60d489",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t114.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1900,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "2b58806b6f09121a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_Power\");\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1900,
        "wires": [
            [
                "e0abc84b0d60d489"
            ]
        ]
    },
    {
        "id": "ff176deba1ff37e0",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t115.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 1940,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "f59bbf4f626bcf5c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_SOC\");\n\n\nmsg.payload = check;\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1940,
        "wires": [
            [
                "ff176deba1ff37e0"
            ]
        ]
    },
    {
        "id": "6a6320290546dee3",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t116.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1980,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "b75c7b4c79112549",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_timetogo\");\n\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1980,
        "wires": [
            [
                "6a6320290546dee3"
            ]
        ]
    },
    {
        "id": "81b33265587dbf1b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t117.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1880,
        "y": 2020,
        "wires": [
            [
                "fe5ec7e8aad24089"
            ]
        ]
    },
    {
        "id": "e9b1bb5b780d46d3",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_consumedAH\");\n\nmsg.payload = check;\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2020,
        "wires": [
            [
                "81b33265587dbf1b"
            ]
        ]
    },
    {
        "id": "609e2ceae72b88be",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "VICTRON VE",
        "info": "",
        "x": 1290,
        "y": 1760,
        "wires": []
    },
    {
        "id": "292be85ea44798e8",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Shunt",
        "info": "",
        "x": 1530,
        "y": 1740,
        "wires": []
    },
    {
        "id": "64c2c06e553a09d7",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Solar",
        "info": "",
        "x": 1530,
        "y": 2060,
        "wires": []
    },
    {
        "id": "61e6e2742445208e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t118.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 2100,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "fc50c6a1fb3fe8bf",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_PanelVolt\");\n\n\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2100,
        "wires": [
            [
                "61e6e2742445208e"
            ]
        ]
    },
    {
        "id": "339e639367fec98b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t119.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2140,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "bdf5009810552081",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_PanelPower\");\n\n\nmsg.payload = check;\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2140,
        "wires": [
            [
                "339e639367fec98b"
            ]
        ]
    },
    {
        "id": "9189ed016cc4753d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t1110.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2180,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "29b6493e9bfbc918",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_BatteryVolt\");\n\n\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 2180,
        "wires": [
            [
                "9189ed016cc4753d"
            ]
        ]
    },
    {
        "id": "17623b9b60203120",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t1114.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2220,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "7e87ec098594ef22",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_solarCurrent\");\n\n\n\nmsg.payload = check;\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 2220,
        "wires": [
            [
                "17623b9b60203120"
            ]
        ]
    },
    {
        "id": "38aa900a2bc369e6",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Inverter",
        "info": "``",
        "x": 1530,
        "y": 2260,
        "wires": []
    },
    {
        "id": "06d052aee5e27a9b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t1112.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2300,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "ecef1a26c1ca38ee",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen ",
        "func": "var check = global.get(\"VE_AC_V\");\n\n\n\nmsg.payload = check;\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 2300,
        "wires": [
            [
                "06d052aee5e27a9b"
            ]
        ]
    },
    {
        "id": "27ccd5beae18ea0f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t1113.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2340,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "1d7b8a7867ba9b07",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_AC_i\");\n\n\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 2340,
        "wires": [
            [
                "27ccd5beae18ea0f"
            ]
        ]
    },
    {
        "id": "9d8524c299c15469",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "txt ändern",
        "func": "\n\nvar buf = [];\n\nmsg.payload = \"t914.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 2380,
        "wires": [
            [
                "3b2529fb9b07db82"
            ]
        ]
    },
    {
        "id": "902a0dd38cfbe169",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "status holen",
        "func": "var check = global.get(\"VE_Vin\");\n\nmsg.payload = check;\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 2380,
        "wires": [
            [
                "9d8524c299c15469"
            ]
        ]
    },
    {
        "id": "3b2529fb9b07db82",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 2235,
        "y": 2220,
        "wires": []
    },
    {
        "id": "6b5ffe5d66f2efe1",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1560,
        "wires": [
            [
                "b619f338e6e76d7d"
            ]
        ]
    },
    {
        "id": "d17978f2067394f5",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1600,
        "wires": [
            [
                "2a7b9127425fb8f0"
            ]
        ]
    },
    {
        "id": "b619f338e6e76d7d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\n\n\n\nmsg.payload = \"t65.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 1560,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "2a7b9127425fb8f0",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = msg.payload;\n\n\n\n\nmsg.payload = \"t67.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3530,
        "y": 1600,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "7b1bbd3fdfa40e07",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3330,
        "y": 1400,
        "wires": [
            [
                "7cefb5db39ed36df"
            ]
        ]
    },
    {
        "id": "c1b9de90986cdc77",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t65.txt,650\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1360,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "7cefb5db39ed36df",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t67.txt,675\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1400,
        "wires": [
            [
                "318fbe388a0de877"
            ]
        ]
    },
    {
        "id": "4b08238202d33fbe",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 420,
        "wires": [
            [
                "bbb429a4ad3e5117"
            ]
        ]
    },
    {
        "id": "bbb429a4ad3e5117",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t49.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 420,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "44ad6c05077e5cff",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 460,
        "wires": [
            [
                "07e7ebf7e6b2ed7e"
            ]
        ]
    },
    {
        "id": "07e7ebf7e6b2ed7e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t410.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 460,
        "wires": [
            [
                "d63dfb1d717d5fdd"
            ]
        ]
    },
    {
        "id": "35c5afc4565c6a72",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name9",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 420,
        "wires": [
            [
                "4b08238202d33fbe"
            ]
        ]
    },
    {
        "id": "da1cc8078ad72558",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/relay_name10",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 2940,
        "y": 460,
        "wires": [
            [
                "44ad6c05077e5cff"
            ]
        ]
    },
    {
        "id": "aba15a11daeb3ef4",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 720,
        "wires": [
            [
                "d0b1bb7d41996673"
            ]
        ]
    },
    {
        "id": "00134fa8e4e69881",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.75",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3170,
        "y": 680,
        "wires": [
            [
                "7d14418b9dd12160"
            ]
        ]
    },
    {
        "id": "7d14418b9dd12160",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t49.txt,300\";\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 680,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "d0b1bb7d41996673",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t410.txt,325\";\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3410,
        "y": 720,
        "wires": [
            [
                "6f601024fa4c4ed8"
            ]
        ]
    },
    {
        "id": "18cb1b613e01ce8c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check page",
        "func": "if(msg.payload[0] == 0xAA)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1140,
        "wires": [
            [
                "06040792df62c94b"
            ]
        ]
    },
    {
        "id": "5ad59a8cb2d528e4",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check button",
        "func": "if(msg.payload[0] == 0xBB)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 620,
        "wires": [
            [
                "8702cd1aeacb9a41",
                "f1bb222926a8070a",
                "9e64aafe0b4b8f6a",
                "1c1ce8a59edcab7b",
                "7e47024029cdbe7d",
                "4c5bc22bba287328",
                "d0d3166113c1f461",
                "b2e221e726d0ae10",
                "143f3e6492cbec07"
            ]
        ]
    },
    {
        "id": "06040792df62c94b",
        "type": "switch",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x02",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x03",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x04",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x05",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x06",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x07",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x08",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0A",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x09",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x11",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x1C",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0E",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 13,
        "x": 450,
        "y": 1140,
        "wires": [
            [
                "3c02b8a5d392df05"
            ],
            [
                "c177a0d86e07afe7"
            ],
            [
                "8626dc87cfb0d59c"
            ],
            [
                "e904a507648b2a9f"
            ],
            [
                "adc2290deb969762"
            ],
            [
                "a36158d356898563"
            ],
            [
                "def09a22fdb9f67b"
            ],
            [
                "df780ae275b5f6ae"
            ],
            [],
            [],
            [
                "ed8560ce664bf200",
                "784e86b63e775ef5"
            ],
            [
                "e8e1df19019c2c5d",
                "e40662fa84d3c966"
            ],
            [
                "5872373e6b7be275"
            ]
        ]
    },
    {
        "id": "a09d2fa4dbaf3703",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check date",
        "func": "if(msg.payload[0] == 0xDD)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 980,
        "wires": [
            [
                "77251e38bc87f3b1"
            ]
        ]
    },
    {
        "id": "bca97bb19473afd2",
        "type": "debug",
        "z": "013c27e6e1e7446d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "77251e38bc87f3b1",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x8, \nl16=>year,\nx8,\nx8,\nb8=>month,\nx8,\nx8,\nx8,\nb8=>day,\nx8,\nx8,\nx8,\nb8=>hour,\nx8,\nx8,\nx8,\nb8=>minute,\nx8,\nx8,\nx8\n",
        "x": 470,
        "y": 980,
        "wires": [
            [
                "f579803e7522cf73"
            ]
        ]
    },
    {
        "id": "f579803e7522cf73",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "",
        "func": "msg.payload = \"\\\"\"+ msg.payload.year + \"-\" + msg.payload.month + \"-\" + msg.payload.day + \" \" + msg.payload.hour + \":\" + msg.payload.minute +\":00\"+\"\\\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            [
                "e48ee7aacdf56dd0"
            ]
        ]
    },
    {
        "id": "654cd8ba8ffc12b5",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 120,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "685c8d7a53556461",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 160,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "bf70d22802a32496",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 200,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "de08ede24754dce6",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 240,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "5ef265fb30f0b3fd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 280,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "19a1a08474a557bc",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 320,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "e69fa12603b2da6f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 360,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "492721c2a2be2e3d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status",
        "func": "var check1 = global.get(\"one\");\nvar check2 = global.get(\"two\");\nvar check3 = global.get(\"three\");\nvar check4 = global.get(\"four\");\nvar check5 = global.get(\"five\");\nvar check6 = global.get(\"six\");\nvar check7 = global.get(\"seven\");\nvar check8 = global.get(\"eight\");\nvar buf = [];\n\n  buf.push(0x03)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 400,
        "wires": [
            [
                "c351aff719180e76"
            ]
        ]
    },
    {
        "id": "f1bb222926a8070a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "reboot",
        "func": "\n\nif(msg.payload[1]==0x19)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 700,
        "wires": [
            [
                "c1e77a8491f00304"
            ]
        ]
    },
    {
        "id": "9e64aafe0b4b8f6a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "shutdown",
        "func": "\nif(msg.payload[1]==0x1A) \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "47ce233dc95832a2"
            ]
        ]
    },
    {
        "id": "8adef63a8cf50849",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch to acces point",
        "mode": "link",
        "links": [
            "f466a3bb3fc1964f"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "47ce233dc95832a2",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display shutdown",
        "links": [
            "22c74477.00184c"
        ],
        "x": 1295,
        "y": 740,
        "wires": []
    },
    {
        "id": "c1e77a8491f00304",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display reboot",
        "links": [
            "ef0e00c6.650d"
        ],
        "x": 1295,
        "y": 700,
        "wires": []
    },
    {
        "id": "1c1ce8a59edcab7b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "access point",
        "func": "if(msg.payload[1]==0x1B)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "8adef63a8cf50849"
            ]
        ]
    },
    {
        "id": "c0425c706dcfc785",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 15,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1040,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "a36158d356898563",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status Level",
        "func": "var level1 = global.get(\"Level1\").toString();\nvar level2 = global.get(\"Level2\").toString();\nvar level3 = global.get(\"Level3\").toString();\nvar level4 = global.get(\"Level4\").toString();\n\n\nmsg.Site = 0x06;\nmsg.Command = 0xff;\nmsg.string = level1 + \"/\" + level2 + \"/\" + level3 + \"/\" + level4\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1200,
        "wires": [
            [
                "a3428b6d72039105"
            ]
        ]
    },
    {
        "id": "a3428b6d72039105",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 15,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1200,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "3c02b8a5d392df05",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status home",
        "func": "msg.payload = Number(global.get(\"heattempsensor\"));\n\nif (msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4 && msg.payload != 5 && msg.payload != 6)\n    msg.payload = \"no sensor\"\n\nif (msg.payload == 1)\n    msg.payload = global.get(\"temp1\");\n\nif (msg.payload == 2)\n    msg.payload = global.get(\"temp2\");\n\nif (msg.payload == 3)\n    msg.payload = global.get(\"temp3\");\n\nif (msg.payload == 4)\n    msg.payload = global.get(\"temp4\");\n\nif (msg.payload == 5)\n    msg.global.get(\"dimmytemp1\")\n\nif (msg.payload == 6)\n    msg.global.get(\"dimmytemp2\")\n\n\nif (global.get(\"temp1\") == \"\" && global.get(\"temp2\") == \"\" && global.get(\"temp3\") == \"\" && global.get(\"temp4\") == \"\" && global.get(\"dimmytemp1\") == \"\" && global.get(\"dimmytemp2\") == \"\") {\n    msg.payload = \"--\"\n}\n\n\nvar SOC = global.get(\"MainBattSoc\");\nif(SOC==undefined)\nSOC=\"--\"\n\n\nmsg.Site = 0x01;\nmsg.Command = 0xff;\nmsg.string = msg.payload +\"/\" + SOC +\"/\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1000,
        "wires": [
            [
                "42f5d7ceb688485b"
            ]
        ]
    },
    {
        "id": "42f5d7ceb688485b",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 15,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1000,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "def09a22fdb9f67b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send Autoterm status",
        "func": "var temp1 = Number(global.get(\"temp1\")) * 100;\nvar temp2 = Number(global.get(\"temp2\")) * 100;\nvar temp3 = Number(global.get(\"temp3\")) * 100;\nvar temp4 = Number(global.get(\"temp4\")) * 100;\n\n\n\nvar temp = global.get(\"heattemp\").toString();\nvar heatpump = global.get(\"heatpump\")*100;\nheatpump = heatpump.toString();\nvar fan = global.get(\"heatfan\").toString();\nvar glow = global.get(\"heatglow\").toString();\nvar volt = global.get(\"heatvolt\")*1000;\nvolt = volt.toString();\nvar status = global.get(\"heatstatus\").toString();\nvar settemp=global.get(\"settemp\").toString();\nvar power = global.get(\"Autotermheatingpower\").toString();\n\n\n\n//////STATUS \n//Autoterm 2D\nif(status == \"standby\")\nstatus=1\nif(status == \"cooling flame sensor\")\nstatus=2\nif(status == \"ventilation\")\nstatus=3\nif(status == \"heating glow plug2\")\nstatus=4\nif(status == \"ignition 1\")\nstatus=5\nif(status == \"ignition 2\")\nstatus=6\nif(status == \"heating\")\nstatus=7\nif(status == \"no ingnition error\")\nstatus=8\nif(status == \"no fuel? retry\")\nstatus=9\nif(status == \"cooling down\")\nstatus=10\nif(status == \"shutting down\")\nstatus=11\n\n//Autoterm 4D\nif (status == \"Heater off\")\n    status = 1\nif (status == \"starting\")\n    status = 5\nif (status == \"Warming UP\")\n    status = 6\nif (status == \"Running\")\n    status = 7\nif (status == \"Shutting Down\")\n    status = 11\n\n\n//////STATUS \n//China Heater\n\n\n//////STATUS \n//Webasto\n\n\n\n\nmsg.Site = 0x07;\nmsg.Command = 0xff;\nmsg.temp1 = temp1;\nmsg.temp2 = temp2;\nmsg.temp3 = temp3;\nmsg.temp4 = temp4;\nmsg.exchangertemp = temp;\nmsg.heatpump = heatpump;\nmsg.fan = fan;\nmsg.glow = glow;\nmsg.volt = volt;\nmsg.settemp=settemp;\nmsg.power=power; \n\nmsg.status = status;\n\nreturn msg;\n\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1240,
        "wires": [
            [
                "74e3ea9026ef1dea"
            ]
        ]
    },
    {
        "id": "74e3ea9026ef1dea",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "site",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "command",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "temp1",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "temp1"
            },
            {
                "name": "temp2",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "temp2"
            },
            {
                "name": "temp3",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "temp3"
            },
            {
                "name": "temp4",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "temp4"
            },
            {
                "name": "exchanger",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "exchangertemp"
            },
            {
                "name": "heatpump",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "heatpump"
            },
            {
                "name": "fan",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "fan"
            },
            {
                "name": "glow",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "glow"
            },
            {
                "name": "volt",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "volt"
            },
            {
                "name": "settemp",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "settemp"
            },
            {
                "name": "power",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "power"
            },
            {
                "name": "status",
                "type": "int16le",
                "length": 1,
                "dataType": "msg",
                "data": "status"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1240,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "7e47024029cdbe7d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "Autoterm Power",
        "func": "\n\n\nif(msg.payload[1]==0x17)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 880,
        "wires": [
            [
                "bd94513f349b3bb6",
                "112a5a38da632e10"
            ]
        ]
    },
    {
        "id": "bd94513f349b3bb6",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x17)\n  buf.push(0xBF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 880,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "b2e221e726d0ae10",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "heater stop",
        "func": "\n\n\nif(msg.payload[1]==0x12)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "4d415fecd916216b",
                "c6090d9c764b972b"
            ]
        ]
    },
    {
        "id": "d0d3166113c1f461",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "heater start",
        "func": "\n\n\nif(msg.payload[1]==0x11)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 920,
        "wires": [
            [
                "5154c3c14fdd8d61",
                "bdc02207fedba353"
            ]
        ]
    },
    {
        "id": "4c5bc22bba287328",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "Autoterm Temp",
        "func": "\n\n\nif(msg.payload[1]==0x18)  \n{\n       return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 840,
        "wires": [
            [
                "aadd7295c2b0743b",
                "4ddbefc0e8b9d5ee"
            ]
        ]
    },
    {
        "id": "5154c3c14fdd8d61",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x11)\n  buf.push(0xBF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 920,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "4d415fecd916216b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x12)\n  buf.push(0xBF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 960,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "aadd7295c2b0743b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x18)\n  buf.push(0xBF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 840,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "bdc02207fedba353",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display heater start",
        "mode": "link",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 1445,
        "y": 760,
        "wires": []
    },
    {
        "id": "c6090d9c764b972b",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display heater stiop",
        "mode": "link",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1445,
        "y": 800,
        "wires": []
    },
    {
        "id": "4ddbefc0e8b9d5ee",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display autoterm start temp",
        "mode": "link",
        "links": [
            "d37ee217044fccae",
            "47595df690855285"
        ],
        "x": 1445,
        "y": 680,
        "wires": []
    },
    {
        "id": "112a5a38da632e10",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display powermode",
        "mode": "link",
        "links": [
            "4fee13e9cef62a8a",
            "38064e3aeee910e3",
            "19329e2e2ff5c04a"
        ],
        "x": 1445,
        "y": 720,
        "wires": []
    },
    {
        "id": "ed8560ce664bf200",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x11)\n  buf.push(0xFF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1380,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "e8e1df19019c2c5d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send ok",
        "func": "\nvar buf = [];\n\n  buf.push(0x1C)\n  buf.push(0xFF)\n  buf.push(0x00)\n  buf.push(0x00)\n  \n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1420,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "adb50cf57e19bc46",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 1",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\nglobal.set(\"dimmer0\",msg.payload);\nmsg.label = global.get(\"Ndimmer0\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2180,
        "wires": [
            [
                "f9c1cd909de58d36",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "92ba7bd13fef7309",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 2",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\n\nglobal.set(\"dimmer1\",msg.payload);\nmsg.label = global.get(\"Ndimmer1\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2220,
        "wires": [
            [
                "a3dd19b5badb07c9",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "2ce20791c4f32267",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 3",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\nglobal.set(\"dimmer2\",msg.payload);\nmsg.label = global.get(\"Ndimmer2\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2260,
        "wires": [
            [
                "e292f68d4bc040e6",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "244570f2fcda6ba4",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 4",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\nglobal.set(\"dimmer3\",msg.payload);\nmsg.label = global.get(\"Ndimmer3\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2300,
        "wires": [
            [
                "df322858b23ce7c7",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "aa0859c155e563af",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 5",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\nglobal.set(\"dimmer4\",msg.payload);\nmsg.label = global.get(\"Ndimmer4\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2340,
        "wires": [
            [
                "bc57e4fa4ee43c5c",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "0aa2016c1762dd28",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 6",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\n\nglobal.set(\"dimmer5\",msg.payload);\nmsg.label = global.get(\"Ndimmer5\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2380,
        "wires": [
            [
                "750c43ab809b527c",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "3d258cfa1cb6bda9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 7",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\nglobal.set(\"dimmer6\",msg.payload);\nmsg.label = global.get(\"Ndimmer6\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2420,
        "wires": [
            [
                "d0c23cf26439ba6f",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "1e973f5bed8d97e9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "split and set global slider 8",
        "func": "\nmsg.payload = msg.payload.sliderval;\n\n\n\nglobal.set(\"dimmer7\",msg.payload);\nmsg.label = global.get(\"Ndimmer7\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2460,
        "wires": [
            [
                "45ccf0c7b6368662",
                "67a720a831b21b94"
            ]
        ]
    },
    {
        "id": "425105082da3d027",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "pekaway display dimmer",
        "links": [
            "8d2726e6672c69f0"
        ],
        "x": 215,
        "y": 2840,
        "wires": [
            [
                "cf06c3732c2b2d88",
                "03a45a1af4625d90",
                "fe98e63ee82022a3",
                "88ae2bc8629e2645",
                "ccd101b1090699e5",
                "f039e194d9fc4109",
                "6c6fdc18e4c8138b",
                "1a597d5cbed1eca0",
                "b14910d36f5c555b"
            ]
        ]
    },
    {
        "id": "5f097e56acf3f702",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\n\n\n\n\nmsg.payload = \"t55.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2740,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "25550cdfeb292cf9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t56.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2780,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "cc9555eae87041ec",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\n\nmsg.payload = \"t57.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2820,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "777f850d42c7aa9d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t58.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2860,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "7a2b2ca3b993065b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\n\nmsg.payload = \"t59.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2900,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "ac9867b5e9eb3d36",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t510.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2940,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "498a802cc754429e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t511.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2980,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "d5557fbba2a356aa",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Edit slider Txt",
        "info": "",
        "x": 690,
        "y": 2720,
        "wires": []
    },
    {
        "id": "09e1599592b84a2a",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1195,
        "y": 3100,
        "wires": []
    },
    {
        "id": "442f59a9750b197c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "change button txt",
        "func": "\n\nvar buf = [];\n\n\nmsg.payload = \"t512.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3020,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "cf06c3732c2b2d88",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer0",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2740,
        "wires": [
            [
                "5f097e56acf3f702"
            ]
        ]
    },
    {
        "id": "03a45a1af4625d90",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer1",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2780,
        "wires": [
            [
                "25550cdfeb292cf9"
            ]
        ]
    },
    {
        "id": "fe98e63ee82022a3",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer2",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2820,
        "wires": [
            [
                "cc9555eae87041ec"
            ]
        ]
    },
    {
        "id": "88ae2bc8629e2645",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer3",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2860,
        "wires": [
            [
                "777f850d42c7aa9d"
            ]
        ]
    },
    {
        "id": "ccd101b1090699e5",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer4",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2900,
        "wires": [
            [
                "7a2b2ca3b993065b"
            ]
        ]
    },
    {
        "id": "f039e194d9fc4109",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2940,
        "wires": [
            [
                "ac9867b5e9eb3d36"
            ]
        ]
    },
    {
        "id": "6c6fdc18e4c8138b",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 2980,
        "wires": [
            [
                "498a802cc754429e"
            ]
        ]
    },
    {
        "id": "1a597d5cbed1eca0",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/Ndimmer7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 3020,
        "wires": [
            [
                "442f59a9750b197c"
            ]
        ]
    },
    {
        "id": "b4857d93d5932c6a",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t55.txt,20\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3060,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "b14910d36f5c555b",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 534,
        "y": 3064,
        "wires": [
            [
                "b4857d93d5932c6a",
                "8209610d70a38a55",
                "d003574eae3d8af4",
                "17ef76bb2cbe8232",
                "16838e1be2c665dc",
                "73506b9f62d3fe55",
                "4a928552545d4117",
                "7d8ce44f30bf0908"
            ]
        ]
    },
    {
        "id": "8209610d70a38a55",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t56.txt,40\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3100,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "d003574eae3d8af4",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t57.txt,60\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3140,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "17ef76bb2cbe8232",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t58.txt,80\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3180,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "16838e1be2c665dc",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t59.txt,100\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3220,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "73506b9f62d3fe55",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t510.txt,120\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3260,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "4a928552545d4117",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t511.txt,140\";\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3300,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "7d8ce44f30bf0908",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "var buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\nmsg.payload = \"wepo t512.txt,160\";\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n  var ascii =str.charCodeAt(i);\n  buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3342,
        "wires": [
            [
                "09e1599592b84a2a"
            ]
        ]
    },
    {
        "id": "f9c1cd909de58d36",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 0",
        "mode": "link",
        "links": [
            "a4c0fd66546e7864"
        ],
        "x": 1225,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a3dd19b5badb07c9",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 1",
        "links": [
            "1db51e9f7fe5ebea"
        ],
        "x": 1225,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e292f68d4bc040e6",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 2",
        "links": [
            "09bf8b5862924eed"
        ],
        "x": 1225,
        "y": 2260,
        "wires": []
    },
    {
        "id": "df322858b23ce7c7",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 3",
        "links": [
            "4896e98db77c2f91"
        ],
        "x": 1225,
        "y": 2300,
        "wires": []
    },
    {
        "id": "bc57e4fa4ee43c5c",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 4",
        "links": [
            "77683cc8a2a2dd71"
        ],
        "x": 1225,
        "y": 2340,
        "wires": []
    },
    {
        "id": "750c43ab809b527c",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 5",
        "links": [
            "2530d817d07d6ef2"
        ],
        "x": 1225,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d0c23cf26439ba6f",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 6",
        "links": [
            "d4e73c36b453526a"
        ],
        "x": 1225,
        "y": 2420,
        "wires": []
    },
    {
        "id": "45ccf0c7b6368662",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display dimmer 7",
        "links": [
            "bd1237489ec8e5f3"
        ],
        "x": 1235,
        "y": 2460,
        "wires": []
    },
    {
        "id": "9fa1a1f3d30c941c",
        "type": "link in",
        "z": "013c27e6e1e7446d",
        "name": "From Init Flow",
        "links": [
            "164524664aa72dda"
        ],
        "x": 175,
        "y": 2240,
        "wires": [
            [
                "c23f8744db46a6d6",
                "db47141b9d94c34f"
            ]
        ]
    },
    {
        "id": "b08feac8dbcee20b",
        "type": "switch",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x02",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x03",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x04",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x05",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x06",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x07",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x08",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x09",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0A",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "bc971c59d8c092a0"
            ],
            [
                "3da58c4af8ac8824"
            ],
            [
                "e0bb8d9e3f318640"
            ],
            [
                "71a14c653d88262c"
            ],
            [
                "dc2c04d4dbdbf07c"
            ],
            [
                "6d76d6b48adacd89"
            ],
            [
                "f31d10f1d5d582f2"
            ],
            [
                "8633c8fdd17c9d48"
            ],
            [
                "6d700682c44e3b13"
            ],
            [
                "68c6fae4c1a7eee7"
            ]
        ]
    },
    {
        "id": "c23f8744db46a6d6",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check Slider",
        "func": "if(msg.payload[0] == 0xCC)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2240,
        "wires": [
            [
                "b08feac8dbcee20b"
            ]
        ]
    },
    {
        "id": "bc971c59d8c092a0",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 2180,
        "wires": [
            [
                "adb50cf57e19bc46"
            ]
        ]
    },
    {
        "id": "3da58c4af8ac8824",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n",
        "x": 770,
        "y": 2220,
        "wires": [
            [
                "92ba7bd13fef7309"
            ]
        ]
    },
    {
        "id": "e0bb8d9e3f318640",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n",
        "x": 770,
        "y": 2260,
        "wires": [
            [
                "2ce20791c4f32267"
            ]
        ]
    },
    {
        "id": "71a14c653d88262c",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 2300,
        "wires": [
            [
                "244570f2fcda6ba4"
            ]
        ]
    },
    {
        "id": "dc2c04d4dbdbf07c",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n\n",
        "x": 770,
        "y": 2340,
        "wires": [
            [
                "aa0859c155e563af"
            ]
        ]
    },
    {
        "id": "6d76d6b48adacd89",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n\n",
        "x": 770,
        "y": 2380,
        "wires": [
            [
                "0aa2016c1762dd28"
            ]
        ]
    },
    {
        "id": "f31d10f1d5d582f2",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 2420,
        "wires": [
            [
                "3d258cfa1cb6bda9"
            ]
        ]
    },
    {
        "id": "8633c8fdd17c9d48",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x16, \nx16, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n\n",
        "x": 770,
        "y": 2460,
        "wires": [
            [
                "1e973f5bed8d97e9"
            ]
        ]
    },
    {
        "id": "5872373e6b7be275",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wpasettings",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 300,
        "y": 1800,
        "wires": [
            [
                "45c91e5f0eceb756",
                "d9d3da1f8407f9dd",
                "902ce9eb822c876b"
            ]
        ]
    },
    {
        "id": "45c91e5f0eceb756",
        "type": "json",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "0ec210590ca00677",
                "699ef46e0b0ab7b2"
            ]
        ]
    },
    {
        "id": "0ec210590ca00677",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "",
        "func": "msg.payload = msg.payload.ssid\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1800,
        "wires": [
            [
                "adf6707b60da6dc0"
            ]
        ]
    },
    {
        "id": "adf6707b60da6dc0",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "format txt",
        "func": "var buf = [];\nmsg.payload = \"t78.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n\nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1800,
        "wires": [
            [
                "61c4457abf78539e"
            ]
        ]
    },
    {
        "id": "61c4457abf78539e",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 965,
        "y": 1860,
        "wires": []
    },
    {
        "id": "699ef46e0b0ab7b2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "",
        "func": "msg.payload = msg.payload.wpa\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1840,
        "wires": [
            [
                "52ddb0d61b6620b2"
            ]
        ]
    },
    {
        "id": "52ddb0d61b6620b2",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "format txt",
        "func": "var buf = [];\nmsg.payload = \"t76.txt=\\\"\"+msg.payload+\"\\\"\"\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1840,
        "wires": [
            [
                "61c4457abf78539e"
            ]
        ]
    },
    {
        "id": "d9d3da1f8407f9dd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "get wifi IP",
        "func": "msg.payload = global.get(\"wifiIP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1880,
        "wires": [
            [
                "a5b053dba95327ed"
            ]
        ]
    },
    {
        "id": "902ce9eb822c876b",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "get eth0 IP",
        "func": "msg.payload = global.get(\"eth0IP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1920,
        "wires": [
            [
                "36b2f607056ab844"
            ]
        ]
    },
    {
        "id": "a5b053dba95327ed",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "format txt",
        "func": "var buf = [];\nmsg.payload = \"t162.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1880,
        "wires": [
            [
                "61c4457abf78539e"
            ]
        ]
    },
    {
        "id": "36b2f607056ab844",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "format txt",
        "func": "var buf = [];\nmsg.payload = \"t164.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n    var ascii =str.charCodeAt(i);\n    buf.push(ascii);\n}\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1920,
        "wires": [
            [
                "61c4457abf78539e"
            ]
        ]
    },
    {
        "id": "6d700682c44e3b13",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x8, \nx8, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 2540,
        "wires": [
            [
                "2ae43df08fec8fad"
            ]
        ]
    },
    {
        "id": "68c6fae4c1a7eee7",
        "type": "binary",
        "z": "013c27e6e1e7446d",
        "name": "",
        "property": "payload",
        "pattern": "x8, \nx8, \nb8 =>sliderval,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 2580,
        "wires": [
            [
                "ddbd2d2fdb03f195"
            ]
        ]
    },
    {
        "id": "2ae43df08fec8fad",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "temp",
        "func": "msg.payload = msg.payload.sliderval;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2540,
        "wires": [
            [
                "117583829b1c4858"
            ]
        ]
    },
    {
        "id": "117583829b1c4858",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display solltemp out",
        "mode": "link",
        "links": [
            "ba62da446374db41"
        ],
        "x": 1225,
        "y": 2540,
        "wires": []
    },
    {
        "id": "ddbd2d2fdb03f195",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "power",
        "func": "msg.payload = msg.payload.sliderval;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2580,
        "wires": [
            [
                "90559203608f86e5"
            ]
        ]
    },
    {
        "id": "90559203608f86e5",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display autoterm powermode out",
        "mode": "link",
        "links": [
            "e6f5d17b430ade7b"
        ],
        "x": 1225,
        "y": 2600,
        "wires": []
    },
    {
        "id": "db47141b9d94c34f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "check button",
        "func": "if(msg.payload[0] == 0xBB)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2520,
        "wires": [
            [
                "ee071bc8993df0e6",
                "b119adad8e06187f",
                "e032d685201ec70d",
                "64c211c9280f0136"
            ]
        ]
    },
    {
        "id": "ee071bc8993df0e6",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "LF BROS ON",
        "func": "if(msg.payload[1]==0x13) {\n       return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2520,
        "wires": [
            [
                "0b799050fd3a928a"
            ]
        ]
    },
    {
        "id": "b119adad8e06187f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "LF BROS OFF",
        "func": "if(msg.payload[1]==0x14) {\n       return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2560,
        "wires": [
            [
                "8beeb580888af3e2"
            ]
        ]
    },
    {
        "id": "e032d685201ec70d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "LF BROS +",
        "func": "if(msg.payload[1]==0x15) {\n       return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2600,
        "wires": [
            [
                "5e03fb428ff125a1"
            ]
        ]
    },
    {
        "id": "64c211c9280f0136",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "LF BROS - ",
        "func": "if(msg.payload[1]==0x16) {\n       return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2640,
        "wires": [
            [
                "783a2821602437f6"
            ]
        ]
    },
    {
        "id": "0b799050fd3a928a",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display lf on",
        "mode": "link",
        "links": [
            "334df8e66cd72bd9"
        ],
        "x": 625,
        "y": 2520,
        "wires": []
    },
    {
        "id": "8beeb580888af3e2",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display lf off",
        "mode": "link",
        "links": [
            "4fc491889de82424"
        ],
        "x": 625,
        "y": 2560,
        "wires": []
    },
    {
        "id": "5e03fb428ff125a1",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display lf +",
        "mode": "link",
        "links": [
            "b081266e1c256fa2"
        ],
        "x": 625,
        "y": 2600,
        "wires": []
    },
    {
        "id": "783a2821602437f6",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "display lf -",
        "mode": "link",
        "links": [],
        "x": 625,
        "y": 2640,
        "wires": []
    },
    {
        "id": "e904a507648b2a9f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status dimmer",
        "func": "var SOC = global.get(\"MainBattSoc\");\nvar AMPS = global.get(\"MainBattAmps\");\nvar VOLT = global.get(\"MainBattVolt\");\n\n\nmsg.Site = 0x04;\nmsg.Command = 0xff;\nmsg.string = global.get(\"dimmer0\") + \"/\" + global.get(\"dimmer1\") +\"/\" + global.get(\"dimmer2\") + \"/\" + global.get(\"dimmer3\")+\"/\" +global.get(\"dimmer4\") + \"/\" + global.get(\"dimmer5\") +\"/\" + global.get(\"dimmer6\") + \"/\" + global.get(\"dimmer7\")\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1120,
        "wires": [
            [
                "e1670cdf75e6226e"
            ]
        ]
    },
    {
        "id": "e1670cdf75e6226e",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 35,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1120,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "66cef88e41d7458f",
        "type": "comment",
        "z": "013c27e6e1e7446d",
        "name": "Temp & Power Slider Heater",
        "info": "",
        "x": 840,
        "y": 2500,
        "wires": []
    },
    {
        "id": "784e86b63e775ef5",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "750",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 1560,
        "wires": [
            [
                "87f76850f70a04b9"
            ]
        ]
    },
    {
        "id": "e40662fa84d3c966",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "delay",
        "timeout": "750",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 1800,
        "wires": [
            [
                "aa2b06bb394c1368"
            ]
        ]
    },
    {
        "id": "72916457e4f725a4",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status dimmer",
        "func": "\n\n\nmsg.Site = 0x04;\nmsg.Command = 0xff;\nmsg.string = global.get(\"dimmer0\") + \"/\" + global.get(\"dimmer1\") +\"/\" + global.get(\"dimmer2\") + \"/\" + global.get(\"dimmer3\")+\"/\" +global.get(\"dimmer4\") + \"/\" + global.get(\"dimmer5\") +\"/\" + global.get(\"dimmer6\") + \"/\" + global.get(\"dimmer7\")\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2500,
        "wires": [
            [
                "a3ccc28e6c18b72b"
            ]
        ]
    },
    {
        "id": "a3ccc28e6c18b72b",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 35,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1650,
        "y": 2500,
        "wires": [
            [
                "b8e17493cd0cab07"
            ]
        ]
    },
    {
        "id": "b8e17493cd0cab07",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1805,
        "y": 2500,
        "wires": []
    },
    {
        "id": "67a720a831b21b94",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "150ms",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1230,
        "y": 2500,
        "wires": [
            [
                "72916457e4f725a4"
            ]
        ]
    },
    {
        "id": "adc2290deb969762",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send status Wrelay",
        "func": "var check1 = global.get(\"Wone\");\nvar check2 = global.get(\"Wtwo\");\nvar check3 = global.get(\"Wthree\");\nvar check4 = global.get(\"Wfour\");\nvar check5 = global.get(\"Wfive\");\nvar check6 = global.get(\"Wsix\");\nvar check7 = global.get(\"Wseven\");\nvar check8 = global.get(\"Weight\");\nvar buf = [];\n\n  buf.push(0x05)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1160,
        "wires": [
            [
                "fde467896321f625"
            ]
        ]
    },
    {
        "id": "ceb0b7a42a9b2bb5",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name5",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3100,
        "y": 2140,
        "wires": [
            [
                "fc9856e4b03ceebb"
            ]
        ]
    },
    {
        "id": "a7234f4ad034b48c",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name6",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3100,
        "y": 2180,
        "wires": [
            [
                "f83aef0ddefc4cf0"
            ]
        ]
    },
    {
        "id": "a919ceaa7cd6fbd8",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name7",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3100,
        "y": 2220,
        "wires": [
            [
                "343f3b228c1c5efd"
            ]
        ]
    },
    {
        "id": "2793fa059e08450d",
        "type": "file in",
        "z": "013c27e6e1e7446d",
        "name": "",
        "filename": "pekaway/wrelay_name8",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3100,
        "y": 2260,
        "wires": [
            [
                "40f0705d2f0de5ac"
            ]
        ]
    },
    {
        "id": "fc9856e4b03ceebb",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\n\n\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\nmsg.payload = \"t86.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2140,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "f83aef0ddefc4cf0",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\nvar buf = [];\n\nvar newStr = msg.payload;\n\n\nmsg.payload = \"t87.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2180,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "343f3b228c1c5efd",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\n\n\nvar buf = [];\n\nvar newStr = msg.payload;\nmsg.payload = \"t88.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2220,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "40f0705d2f0de5ac",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "button txt ändern",
        "func": "\n\n\nvar buf = [];\n\nvar newStr = msg.payload;\n\n\nmsg.payload = \"t89.txt=\\\"\"+newStr+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2260,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "8fb7cf245b2a8b2d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t86.txt,720\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1820,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "be7c4908f9bdaee9",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t87.txt,740\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1860,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "37e716238b48545f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t88.txt,760\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1900,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "7eba2141f92539df",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "save eeprom",
        "func": "\n\nvar buf = [];\noldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\n\n\n\nmsg.payload = \"wepo t89.txt,780\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1940,
        "wires": [
            [
                "4bb2a029a8d55a10"
            ]
        ]
    },
    {
        "id": "731a0542f21fc3fc",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 4",
        "mode": "link",
        "links": [
            "1be6547089f6e149",
            "aa1e33fda110d928"
        ],
        "x": 1955,
        "y": 760,
        "wires": []
    },
    {
        "id": "60bfc3c39cc7ed45",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 3",
        "mode": "link",
        "links": [
            "06d97ee62fa005c1",
            "34f49f08e1a06032"
        ],
        "x": 1955,
        "y": 720,
        "wires": []
    },
    {
        "id": "1c02b06aeb57d07d",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 2",
        "mode": "link",
        "links": [
            "72d54ceabf2571b6",
            "d76c3b78c0f14e69"
        ],
        "x": 1955,
        "y": 680,
        "wires": []
    },
    {
        "id": "a90f9a4da959d640",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 1",
        "mode": "link",
        "links": [
            "694613034a60fe9a",
            "9f1c7c65c2da2d42"
        ],
        "x": 1955,
        "y": 640,
        "wires": []
    },
    {
        "id": "86bf84ac2c740713",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay5",
        "func": "var check = global.get(\"Wfive\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 640,
        "wires": [
            [
                "a90f9a4da959d640"
            ]
        ]
    },
    {
        "id": "416682304310e43d",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay6",
        "func": "var check = global.get(\"Wsix\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 680,
        "wires": [
            [
                "1c02b06aeb57d07d"
            ]
        ]
    },
    {
        "id": "ed7a7902c8ddc395",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay7",
        "func": "var check = global.get(\"Wseven\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 720,
        "wires": [
            [
                "60bfc3c39cc7ed45"
            ]
        ]
    },
    {
        "id": "cf46cb077fde508f",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "globalVariable set Wrelay8",
        "func": "var check = global.get(\"Weight\");\n\nif(check == true) {\n    check=false\n}\n\nelse if(check == false) {\n    check=true\n}\n\nmsg.payload=check\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 760,
        "wires": [
            [
                "731a0542f21fc3fc"
            ]
        ]
    },
    {
        "id": "8a40988dd0ca7485",
        "type": "link out",
        "z": "013c27e6e1e7446d",
        "name": "switch connect 1",
        "mode": "link",
        "links": [
            "afbb8dda.ffe6c"
        ],
        "x": 1955,
        "y": 480,
        "wires": []
    },
    {
        "id": "df780ae275b5f6ae",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "send China Heater status",
        "func": "var temp1 = global.get(\"temp1\").toString();\nvar temp2 = global.get(\"temp2\").toString();\nvar temp3 = global.get(\"temp3\").toString();\nvar temp4 = global.get(\"temp4\").toString();\n\nvar temp = global.get(\"heattemp\").toString();\nvar heatpump = global.get(\"heatpump\").toString();\nvar fan = global.get(\"heatfan\").toString();\nvar glow = global.get(\"heatglow\").toString();\nvar volt = global.get(\"heatvolt\").toString();\nvar status = global.get(\"heatstatus\").toString();\nvar settemp=global.get(\"settemp\").toString();\nvar power = global.get(\"Autotermheatingpower\").toString();\n\nif(temp == \"\")\ntemp=\"wait\";\n\nif(glow == \"\")\nglow=\"wait\";\n\nif(volt == \"\")\nvolt=\"wait\";\n\n\nif(fan == \"\")\nfan=\"wait\";\n\n\nif(status == \"\")\nstatus=\"wait\";\n\n\n\nmsg.Site = 0x07;\nmsg.Command = 0xff;\nmsg.string = temp1 + \"/\" + temp2 + \"/\" + temp3 + \"/\" + temp4 + \"/\" + temp + \"/\" + fan + \"/\" + glow + \"/\" + volt + \"/\"+ heatpump +\"/\" + status+\"/\"+settemp;\n\nreturn msg;\n\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1300,
        "wires": [
            [
                "2d706257fc30be32"
            ]
        ]
    },
    {
        "id": "2d706257fc30be32",
        "type": "buffer-maker",
        "z": "013c27e6e1e7446d",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Site"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "Command"
            },
            {
                "name": "item3",
                "type": "string",
                "length": 50,
                "dataType": "msg",
                "data": "string"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1430,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "c212bc911f540555",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "Connection Test ",
        "func": "if(msg.payload[0] == 0x99)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "8a100f60ffbc970c",
                "d39ddafebdd565a0"
            ]
        ]
    },
    {
        "id": "b6448fe9cfccfb84",
        "type": "ui_text",
        "z": "013c27e6e1e7446d",
        "group": "53df28c11a99d1b9",
        "order": 22,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ConnectionTest Display",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2080,
        "wires": []
    },
    {
        "id": "8a100f60ffbc970c",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "increment counter",
        "func": "msg.payload=flow.get(\"count\")+1;\nflow.set(\"count\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2040,
        "wires": [
            [
                "b6448fe9cfccfb84"
            ]
        ]
    },
    {
        "id": "d39ddafebdd565a0",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 2000,
        "wires": [
            [
                "cf5b2d2fed905b8e"
            ]
        ]
    },
    {
        "id": "cf5b2d2fed905b8e",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "set counter to 1",
        "func": "flow.set(\"count\",1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "1595f8b7506866cb",
        "type": "function",
        "z": "013c27e6e1e7446d",
        "name": "Connection Test ",
        "func": "if(msg.payload[0] == 0x98)\n{\nmsg.payload=msg.payload.length;\nif(msg.payload==50)\nmsg.payload=\"buffer complete\"\nelse\nmsg.payload = \"only\"+ msg.payload + \"byte\"\n\n\nreturn msg;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "b6448fe9cfccfb84"
            ]
        ]
    },
    {
        "id": "143f3e6492cbec07",
        "type": "delay",
        "z": "013c27e6e1e7446d",
        "name": "",
        "pauseType": "rate",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1.5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "0056e27501414fc0"
            ]
        ]
    },
    {
        "id": "527da9bb65765220",
        "type": "inject",
        "z": "013c27e6e1e7446d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1240,
        "y": 1320,
        "wires": [
            [
                "def09a22fdb9f67b"
            ]
        ]
    },
    {
        "id": "46b1fe770c9d3fe9",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 1",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t121.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "0d1a1d674f7a4850"
            ]
        ]
    },
    {
        "id": "0d1a1d674f7a4850",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 220,
        "wires": []
    },
    {
        "id": "b75b1907f9be3b00",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 1",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t122.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 220,
        "wires": [
            [
                "1cfd34777881b5b1"
            ]
        ]
    },
    {
        "id": "1cfd34777881b5b1",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 220,
        "wires": []
    },
    {
        "id": "5f5cba5b6976b0ca",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 2",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t123.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "608d34d4b115eb17"
            ]
        ]
    },
    {
        "id": "608d34d4b115eb17",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 280,
        "wires": []
    },
    {
        "id": "527ce2fedb659160",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 2",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t124.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 280,
        "wires": [
            [
                "f4f583ca6b2af026"
            ]
        ]
    },
    {
        "id": "f4f583ca6b2af026",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 280,
        "wires": []
    },
    {
        "id": "ec28a26edabb9c99",
        "type": "comment",
        "z": "84e1e28dc937c84a",
        "name": "Insert your data here",
        "info": "! as a string !",
        "x": 810,
        "y": 280,
        "wires": []
    },
    {
        "id": "51ab4f15d5ed7eb2",
        "type": "comment",
        "z": "84e1e28dc937c84a",
        "name": "Insert your data here",
        "info": "! as a string !",
        "x": 1470,
        "y": 280,
        "wires": []
    },
    {
        "id": "0c68a332064ae568",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 3",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t125.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "86e0f31e6fdbc23a"
            ]
        ]
    },
    {
        "id": "86e0f31e6fdbc23a",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 340,
        "wires": []
    },
    {
        "id": "62f66e12ad58f1a7",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 3",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t126.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "26a2576ee98dd6d1"
            ]
        ]
    },
    {
        "id": "26a2576ee98dd6d1",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 340,
        "wires": []
    },
    {
        "id": "15888d5438dc7dbd",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 4",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t127.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "0f884c79ae16762e"
            ]
        ]
    },
    {
        "id": "0f884c79ae16762e",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac96baa41371d8ba",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 4",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t128.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 400,
        "wires": [
            [
                "d0c431d073f1019b"
            ]
        ]
    },
    {
        "id": "d0c431d073f1019b",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 400,
        "wires": []
    },
    {
        "id": "9001710423e086b5",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 5",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t129.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "02a2caec8a85b2f9"
            ]
        ]
    },
    {
        "id": "02a2caec8a85b2f9",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 460,
        "wires": []
    },
    {
        "id": "8870563d3f5c620c",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 5",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t1210.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 460,
        "wires": [
            [
                "87b7e5616e13579a"
            ]
        ]
    },
    {
        "id": "87b7e5616e13579a",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 460,
        "wires": []
    },
    {
        "id": "5d88788861f54cf0",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 6",
        "func": "\nvar buf = [];\n\n\n\n\n\nmsg.payload = \"t1211.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 520,
        "wires": [
            [
                "903ff15c38a19791"
            ]
        ]
    },
    {
        "id": "903ff15c38a19791",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 520,
        "wires": []
    },
    {
        "id": "b7f62d6460eb201b",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 6",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1212.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 520,
        "wires": [
            [
                "3d28efc206fcb596"
            ]
        ]
    },
    {
        "id": "3d28efc206fcb596",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 520,
        "wires": []
    },
    {
        "id": "4f401fc863f31656",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 7",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1213.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 580,
        "wires": [
            [
                "8dfe568c52c957c7"
            ]
        ]
    },
    {
        "id": "8dfe568c52c957c7",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 580,
        "wires": []
    },
    {
        "id": "ec5f5e7b99cb19b9",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 7",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1214.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 580,
        "wires": [
            [
                "ec49b648bfada630"
            ]
        ]
    },
    {
        "id": "ec49b648bfada630",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 580,
        "wires": []
    },
    {
        "id": "09975240ba4b6e91",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 8",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1215.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 640,
        "wires": [
            [
                "7e99fdcc4e073173"
            ]
        ]
    },
    {
        "id": "7e99fdcc4e073173",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 640,
        "wires": []
    },
    {
        "id": "365cb51e2be23e06",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 8",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1216.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 640,
        "wires": [
            [
                "71e9b5cac0aa3c6e"
            ]
        ]
    },
    {
        "id": "71e9b5cac0aa3c6e",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 640,
        "wires": []
    },
    {
        "id": "5d8a004f5cfa5c6a",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 9",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1217.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 700,
        "wires": [
            [
                "a095327680acd7ab"
            ]
        ]
    },
    {
        "id": "a095327680acd7ab",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 700,
        "wires": []
    },
    {
        "id": "32369af7ae8b78c5",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 9",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t1218.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 700,
        "wires": [
            [
                "d21dea57e8865efa"
            ]
        ]
    },
    {
        "id": "d21dea57e8865efa",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 700,
        "wires": []
    },
    {
        "id": "198ff721ab9761b3",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 10",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1219.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "1dab675d32ed7602"
            ]
        ]
    },
    {
        "id": "1dab675d32ed7602",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 760,
        "wires": []
    },
    {
        "id": "074f09aea6f62a56",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 10",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1220.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 760,
        "wires": [
            [
                "6d0139fc951e44e0"
            ]
        ]
    },
    {
        "id": "6d0139fc951e44e0",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 760,
        "wires": []
    },
    {
        "id": "e0ccbc789b734451",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 11",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1221.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 820,
        "wires": [
            [
                "7a8947a2d2f6974c"
            ]
        ]
    },
    {
        "id": "7a8947a2d2f6974c",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 820,
        "wires": []
    },
    {
        "id": "81620a885fa3dbb5",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 11",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1222.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 820,
        "wires": [
            [
                "055522f8c321dd52"
            ]
        ]
    },
    {
        "id": "055522f8c321dd52",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 820,
        "wires": []
    },
    {
        "id": "500a550fb4f4a9e0",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 12",
        "func": "\nvar buf = [];\n\n\n\n\n\nmsg.payload = \"t1223.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "06b89eece4e1354c"
            ]
        ]
    },
    {
        "id": "06b89eece4e1354c",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 880,
        "wires": []
    },
    {
        "id": "253529ec36c9ef5e",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 12",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1224.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 880,
        "wires": [
            [
                "dfe344a453d2de83"
            ]
        ]
    },
    {
        "id": "dfe344a453d2de83",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 880,
        "wires": []
    },
    {
        "id": "43dbf5a7fa08b8da",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 13",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1225.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 940,
        "wires": [
            [
                "218555c32011ab6c"
            ]
        ]
    },
    {
        "id": "218555c32011ab6c",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 940,
        "wires": []
    },
    {
        "id": "f6f2d58377730121",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 13",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1226.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 940,
        "wires": [
            [
                "baf61298a49e4b7a"
            ]
        ]
    },
    {
        "id": "baf61298a49e4b7a",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 940,
        "wires": []
    },
    {
        "id": "224a25ec1975e103",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 14",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1227.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "f917e206f7cee819"
            ]
        ]
    },
    {
        "id": "f917e206f7cee819",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c48434554e689ea5",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 14",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t1228.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1000,
        "wires": [
            [
                "7a142723d956ab34"
            ]
        ]
    },
    {
        "id": "7a142723d956ab34",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1000,
        "wires": []
    },
    {
        "id": "dbe2dbe3421b3af9",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 15",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1229.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1060,
        "wires": [
            [
                "f3bfa58fc15b2028"
            ]
        ]
    },
    {
        "id": "f3bfa58fc15b2028",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1060,
        "wires": []
    },
    {
        "id": "911505678fc1b9a1",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 15",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1230.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1060,
        "wires": [
            [
                "151e4fe1770733b9"
            ]
        ]
    },
    {
        "id": "151e4fe1770733b9",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7259f8b8b1c35e4a",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 16",
        "func": "\n\n\n\n\nvar buf = [];\n\nmsg.payload = \"t1231.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1120,
        "wires": [
            [
                "ffa8d4a5880bf8d6"
            ]
        ]
    },
    {
        "id": "ffa8d4a5880bf8d6",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1120,
        "wires": []
    },
    {
        "id": "13f93ad8a88703cb",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 16",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1232.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1120,
        "wires": [
            [
                "e39ea8d66e8f80b1"
            ]
        ]
    },
    {
        "id": "e39ea8d66e8f80b1",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b6d07c5719fe5b59",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 17",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1233.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1180,
        "wires": [
            [
                "65938a4a36d17b7d"
            ]
        ]
    },
    {
        "id": "65938a4a36d17b7d",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7f6198b9a715a325",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 17",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1234.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1180,
        "wires": [
            [
                "650638e67ec48ab9"
            ]
        ]
    },
    {
        "id": "650638e67ec48ab9",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1180,
        "wires": []
    },
    {
        "id": "10693d127c11f594",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 18",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1235.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1240,
        "wires": [
            [
                "27b436fd7c1310e3"
            ]
        ]
    },
    {
        "id": "27b436fd7c1310e3",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3a24c993ca1ff275",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 18",
        "func": "\n\n\n\n\nvar buf = [];\n\nmsg.payload = \"t1236.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1240,
        "wires": [
            [
                "e8fa5f85bb4e73d0"
            ]
        ]
    },
    {
        "id": "e8fa5f85bb4e73d0",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4c8379434ecc5271",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 19",
        "func": "\n\n\n\n\nvar buf = [];\n\nmsg.payload = \"t1237.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1300,
        "wires": [
            [
                "415d7f58c6ceefdd"
            ]
        ]
    },
    {
        "id": "415d7f58c6ceefdd",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e939854dd5d0d700",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 19",
        "func": "\n\n\n\n\nvar buf = [];\n\nmsg.payload = \"t1238.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1300,
        "wires": [
            [
                "ec4e12a907b66de0"
            ]
        ]
    },
    {
        "id": "ec4e12a907b66de0",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1300,
        "wires": []
    },
    {
        "id": "0d124c0d5d576ba8",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 20",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1239.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1360,
        "wires": [
            [
                "09d4d328ae4cf99d"
            ]
        ]
    },
    {
        "id": "09d4d328ae4cf99d",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cad3c28b0a8af362",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 20",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1240.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1360,
        "wires": [
            [
                "cb8d757841880e7a"
            ]
        ]
    },
    {
        "id": "cb8d757841880e7a",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2740101e2e3cc761",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 21",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t1241.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1420,
        "wires": [
            [
                "7be4d4f1afc978fe"
            ]
        ]
    },
    {
        "id": "7be4d4f1afc978fe",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1420,
        "wires": []
    },
    {
        "id": "0d0d32fc70123cce",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 21",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1242.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1420,
        "wires": [
            [
                "ab5070e9fde4cec2"
            ]
        ]
    },
    {
        "id": "ab5070e9fde4cec2",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f28f388807c14472",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 22",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1243.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "597e67cf75901f91"
            ]
        ]
    },
    {
        "id": "597e67cf75901f91",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e463971d7ffdf494",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 22",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1244.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1480,
        "wires": [
            [
                "59771662ecbfaf8b"
            ]
        ]
    },
    {
        "id": "59771662ecbfaf8b",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1480,
        "wires": []
    },
    {
        "id": "64d6b5429bbcf5be",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 23",
        "func": "\nvar buf = [];\n\n\n\n\n\nmsg.payload = \"t1245.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1540,
        "wires": [
            [
                "a87602e6d44a3a5c"
            ]
        ]
    },
    {
        "id": "a87602e6d44a3a5c",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1540,
        "wires": []
    },
    {
        "id": "6add8824e9478c59",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 23",
        "func": "\n\nvar buf = [];\n\n\n\n\nmsg.payload = \"t1246.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1540,
        "wires": [
            [
                "7eb2bd15d95fed6b"
            ]
        ]
    },
    {
        "id": "7eb2bd15d95fed6b",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c5decba732e7d138",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Name 24",
        "func": "\n\n\nvar buf = [];\n\n\n\nmsg.payload = \"t1247.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1600,
        "wires": [
            [
                "793f48577e8757f3"
            ]
        ]
    },
    {
        "id": "793f48577e8757f3",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1175,
        "y": 1600,
        "wires": []
    },
    {
        "id": "a28cdd738b9c2f08",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "Write Value 24",
        "func": "\n\n\n\nvar buf = [];\n\n\nmsg.payload = \"t1248.txt=\\\"\"+msg.payload+\"\\\"\"\n\n\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n var ascii =str.charCodeAt(i);\n buf.push(ascii);\n }\n \n buf.push(255);\n  buf.push(255);\n   buf.push(255);\n \n msg.payload = new Buffer(buf)\n \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1600,
        "wires": [
            [
                "c65fb5fa5ab2e28e"
            ]
        ]
    },
    {
        "id": "c65fb5fa5ab2e28e",
        "type": "link out",
        "z": "84e1e28dc937c84a",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 1835,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6c368c1b45a4d278",
        "type": "trigger",
        "z": "84e1e28dc937c84a",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "c83d0f03536f33e7",
                "a0a59a3af7136e62"
            ]
        ]
    },
    {
        "id": "c83d0f03536f33e7",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "example",
        "func": "msg.payload = global.get(\"gokvalue\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 220,
        "wires": [
            [
                "46b1fe770c9d3fe9"
            ]
        ]
    },
    {
        "id": "a0a59a3af7136e62",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "example",
        "func": "msg.payload = \"0,00\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 220,
        "wires": [
            [
                "b75b1907f9be3b00"
            ]
        ]
    },
    {
        "id": "0a2d359efdc30304",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "check page",
        "func": "if(msg.payload[0] == 0xAA)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "568c5f0ef0c21cc0"
            ]
        ]
    },
    {
        "id": "568c5f0ef0c21cc0",
        "type": "switch",
        "z": "84e1e28dc937c84a",
        "name": "",
        "property": "payload[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x01",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0x0D",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 320,
        "wires": [
            [
                "71dd669140e3d61c"
            ],
            [
                "6c368c1b45a4d278"
            ]
        ]
    },
    {
        "id": "789baf9c18deed97",
        "type": "link in",
        "z": "84e1e28dc937c84a",
        "name": "From Init Flow",
        "links": [
            "164524664aa72dda"
        ],
        "x": 115,
        "y": 320,
        "wires": [
            [
                "0a2d359efdc30304",
                "90f5e6891bcde75b"
            ]
        ]
    },
    {
        "id": "90f5e6891bcde75b",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "check sleep",
        "func": "if(msg.payload[0] == 0x86)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 240,
        "wires": [
            [
                "71dd669140e3d61c"
            ]
        ]
    },
    {
        "id": "71dd669140e3d61c",
        "type": "function",
        "z": "84e1e28dc937c84a",
        "name": "set reset",
        "func": "msg.reset = true; \n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "6c368c1b45a4d278"
            ]
        ]
    },
    {
        "id": "4697133a.aceddc",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "10",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 260,
        "wires": []
    },
    {
        "id": "97ba6cd7.e559d",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "27",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "ca6953ce.b6db4",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "17",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "e8c9636a.4c1bf",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "9",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 320,
        "wires": []
    },
    {
        "id": "53ad6ee2.c6f0e",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "11",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 380,
        "wires": []
    },
    {
        "id": "ed05436f.d7f34",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "5",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 540,
        "wires": []
    },
    {
        "id": "d3abf7df.b7ffb8",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"one\");\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 60,
        "wires": [
            [
                "ca6953ce.b6db4",
                "7ad5169983d2368e"
            ]
        ]
    },
    {
        "id": "1a8f4849.2937e8",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"two\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 120,
        "wires": [
            [
                "97ba6cd7.e559d",
                "b4b738fbd7ad5aff"
            ]
        ]
    },
    {
        "id": "8f7b848d.2f4388",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"three\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 180,
        "wires": [
            [
                "cee3c747.dbc478",
                "8507c66a115490b8"
            ]
        ]
    },
    {
        "id": "75984dc1.63ff64",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"four\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 240,
        "wires": [
            [
                "4697133a.aceddc",
                "b5d0eab215660af2"
            ]
        ]
    },
    {
        "id": "4e621fd.06458e",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"five\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 300,
        "wires": [
            [
                "e8c9636a.4c1bf",
                "241e64303925f345"
            ]
        ]
    },
    {
        "id": "77446e0c.fd30a",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"six\");\nmsg.payload = check;  \nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 360,
        "wires": [
            [
                "53ad6ee2.c6f0e",
                "2ed6fd73969112bc"
            ]
        ]
    },
    {
        "id": "b6b65b8a.71a508",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"seven\");\nvar oldcheck = flow.get(\"bcmgpiocheck\"); \n\nif(oldcheck != check) {\n    flow.set(\"bcmgpiocheck\",check);\n    msg.payload = check;  \n    return msg;\n}\nelse {\n    flow.set(\"bcmgpiocheck\",check);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            [
                "4c9d5ae4.603bc4"
            ]
        ]
    },
    {
        "id": "175b5dae.3ab692",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"eight\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 560,
        "wires": [
            [
                "ed05436f.d7f34",
                "a3c4ea31880b6744"
            ]
        ]
    },
    {
        "id": "355f6d2a.2f1882",
        "type": "trigger",
        "z": "e2902b7e.e22d58",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-350",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "d3abf7df.b7ffb8",
                "1a8f4849.2937e8",
                "8f7b848d.2f4388",
                "75984dc1.63ff64",
                "4e621fd.06458e",
                "77446e0c.fd30a",
                "b6b65b8a.71a508",
                "175b5dae.3ab692",
                "460303c893b9f1dc"
            ]
        ]
    },
    {
        "id": "da709df1.0f085",
        "type": "inject",
        "z": "e2902b7e.e22d58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "355f6d2a.2f1882"
            ]
        ]
    },
    {
        "id": "dacb7f5b.44d74",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1210,
        "y": 700,
        "wires": [
            [
                "575e0839.875e98",
                "3f8eb0095811ce76",
                "6b072cbdf39bdb32"
            ]
        ]
    },
    {
        "id": "c264fb8c.f1e758",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1210,
        "y": 780,
        "wires": [
            [
                "5d4c63f3.64e5cc",
                "3f8eb0095811ce76",
                "c78c564257955279"
            ]
        ]
    },
    {
        "id": "405eccb2.a22934",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1210,
        "y": 860,
        "wires": [
            [
                "772f50fb.034d",
                "3f8eb0095811ce76",
                "948c057927ef953c"
            ]
        ]
    },
    {
        "id": "49d48198.941ac",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1210,
        "y": 940,
        "wires": [
            [
                "307f6235.0808be",
                "3f8eb0095811ce76",
                "f551adef67b211a0"
            ]
        ]
    },
    {
        "id": "16ced63f.7270ba",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1210,
        "y": 1020,
        "wires": [
            [
                "84e71d87.e932b",
                "3f8eb0095811ce76",
                "16a04cee2fe86c0d"
            ]
        ]
    },
    {
        "id": "2351c2f9.7423ee",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1210,
        "y": 1100,
        "wires": [
            [
                "3296f90c.eb22a6",
                "3f8eb0095811ce76",
                "8bb48b46f22cc9a4"
            ]
        ]
    },
    {
        "id": "b842531c.0277e",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "7a15f64.9a20508",
                "3f8eb0095811ce76",
                "5fbc33ef8d4c3264"
            ]
        ]
    },
    {
        "id": "f37320d0.ce86",
        "type": "ui_switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "d9229161.b8548",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1210,
        "y": 1260,
        "wires": [
            [
                "fe61676.936ee98",
                "3f8eb0095811ce76",
                "d808ce1c4dd82dbc"
            ]
        ]
    },
    {
        "id": "575e0839.875e98",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set one",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"one\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"one\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 700,
        "wires": [
            [
                "11c24833.f847b8"
            ]
        ]
    },
    {
        "id": "5d4c63f3.64e5cc",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set two",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"two\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"two\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 780,
        "wires": [
            [
                "893b1d6d.f3097"
            ]
        ]
    },
    {
        "id": "772f50fb.034d",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set three",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"three\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"three\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 860,
        "wires": [
            [
                "c0c96477.8f3118"
            ]
        ]
    },
    {
        "id": "307f6235.0808be",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set four",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"four\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"four\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 940,
        "wires": [
            [
                "e6f5ea3d.aa0598"
            ]
        ]
    },
    {
        "id": "84e71d87.e932b",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set five",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"five\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"five\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1020,
        "wires": [
            [
                "22d3166b.ba4d7a"
            ]
        ]
    },
    {
        "id": "3296f90c.eb22a6",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set six",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"six\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"six\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1100,
        "wires": [
            [
                "fdbe2584.d2b908"
            ]
        ]
    },
    {
        "id": "7a15f64.9a20508",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set seven",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"seven\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"seven\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1180,
        "wires": [
            [
                "7342408f.2fe48"
            ]
        ]
    },
    {
        "id": "fe61676.936ee98",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "globalVariable set eight",
        "func": "var check2 = flow.get(\"Rupdate\");\nif(check2 === true) {\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"eight\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"eight\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1260,
        "wires": [
            [
                "3d012ced.3740b4"
            ]
        ]
    },
    {
        "id": "11c24833.f847b8",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 1",
        "links": [
            "5f7ef225e802d331",
            "b7924671.539088"
        ],
        "x": 1805,
        "y": 700,
        "wires": []
    },
    {
        "id": "e9ffa3ef.cde5d",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 1",
        "links": [
            "1a76dcedc9d4fa5b",
            "720d8c2ff876320d",
            "72a1d2dced5a7e61",
            "a04b3614573af150",
            "f1b2da140f70c6ec",
            "35979598d2e22ffe",
            "f723e65523ef02ca",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 660,
        "wires": [
            [
                "dacb7f5b.44d74"
            ]
        ]
    },
    {
        "id": "e6f5ea3d.aa0598",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 4",
        "links": [
            "816916ec.3e4608",
            "b597242323e2a770"
        ],
        "x": 1805,
        "y": 940,
        "wires": []
    },
    {
        "id": "f14867fc.930ab8",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 4",
        "links": [
            "4324fd44.606924",
            "909c0532.1f7288",
            "9e725df77107f87e",
            "016da090a6a1874c",
            "bee832ef9e0bbec5",
            "ca13b9d3773c45d8",
            "cfc4634bb3ce625f",
            "7b35692bbcc1d3a1",
            "9382dcd5bc8523ac",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 920,
        "wires": [
            [
                "49d48198.941ac"
            ]
        ]
    },
    {
        "id": "22d3166b.ba4d7a",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 5",
        "links": [
            "73311fc8d6eb600e",
            "ac76248e.b6b2e8"
        ],
        "x": 1805,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1d05179e.1f1a78",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 5",
        "links": [
            "4362c0cf.cefd",
            "6a2ed351.5c851c",
            "6aab650ddc6b11ea",
            "9bfb967b8c28f1af",
            "27e4acfea3f8598a",
            "030e0d53716d95a4",
            "12a3e2a3c679d38b",
            "1d2d6981b67a3fb3",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 1000,
        "wires": [
            [
                "16ced63f.7270ba"
            ]
        ]
    },
    {
        "id": "fdbe2584.d2b908",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 6",
        "links": [
            "52e43a6771948438",
            "f14ad670.74af58"
        ],
        "x": 1805,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c9adec52.63ae6",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 6",
        "links": [
            "2cf77f5b731d0a42",
            "650e6b47.48f0c4",
            "a59958ed.2a5098",
            "ec4a5973f77a431b",
            "e0771acc5d3182c3",
            "1c6a8198ae953dda",
            "c2dd512ba1fb2a38",
            "8c517888b048c989",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 1060,
        "wires": [
            [
                "2351c2f9.7423ee"
            ]
        ]
    },
    {
        "id": "7342408f.2fe48",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 7",
        "links": [
            "7aa42e41ebc575e6",
            "f3422c70.abb37"
        ],
        "x": 1805,
        "y": 1180,
        "wires": []
    },
    {
        "id": "38796905.f4b7f6",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 7",
        "links": [
            "3a47e55c.cbdcfa",
            "5011de5da2fad287",
            "b5c706a6.c41498",
            "e3ee8d5acb5308db",
            "cf7080d88a760efb",
            "111743f4760bc3f1",
            "299ab89584395772",
            "b383c8212f7fa6ab",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 1160,
        "wires": [
            [
                "b842531c.0277e"
            ]
        ]
    },
    {
        "id": "3d012ced.3740b4",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 8",
        "links": [
            "628aeaab.316734",
            "98f97f53934b5d8c"
        ],
        "x": 1805,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2840c10.f61294",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 8",
        "links": [
            "3eae3506ca194e43",
            "c481241b.4491e8",
            "d5bf3d8b.ed184",
            "3d0c915e26667220",
            "c51c399bbe263fb6",
            "72352dc2eb449f47",
            "15f6ff0334bd0f29",
            "5bd75b59cbebea5d",
            "cba2269096538077",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 1240,
        "wires": [
            [
                "f37320d0.ce86"
            ]
        ]
    },
    {
        "id": "893b1d6d.f3097",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 2",
        "links": [
            "1f753eec.b5ff61",
            "ca12122251924b01"
        ],
        "x": 1805,
        "y": 780,
        "wires": []
    },
    {
        "id": "7255f9f4.6304d8",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 2",
        "links": [
            "11075381c9dd3e27",
            "44f1ac73f6b1508c",
            "9a86a2839b75c781",
            "c084f41458d81a9b",
            "fca214dfed07cf6a",
            "74c07fa0bf9c5a2e",
            "c34b8236b33847f4",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 740,
        "wires": [
            [
                "c264fb8c.f1e758"
            ]
        ]
    },
    {
        "id": "c0c96477.8f3118",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 3",
        "links": [
            "def5a0d0.84ea7",
            "ec54228c4db0212d"
        ],
        "x": 1805,
        "y": 860,
        "wires": []
    },
    {
        "id": "c698c6e8.416b58",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "switch connect 3",
        "links": [
            "3019641ae8571e9b",
            "4e22062602e704a0",
            "9a2c296bd2939689",
            "d1c38a7c4b408418",
            "fecf8235a3bc93f8",
            "084b703eefb74342",
            "ecb6200b0e4a0766",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1015,
        "y": 820,
        "wires": [
            [
                "405eccb2.a22934"
            ]
        ]
    },
    {
        "id": "1106939.d374b6c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"None\");\nvar check = global.get(\"one\");\nmsg.payload = check;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1100,
        "wires": [
            [
                "dacb7f5b.44d74"
            ]
        ]
    },
    {
        "id": "ed59fe7e.6e7de",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Ntwo\");\nvar check = global.get(\"two\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1140,
        "wires": [
            [
                "c264fb8c.f1e758"
            ]
        ]
    },
    {
        "id": "33f8a1c0.2e891e",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Nthree\");\nvar check = global.get(\"three\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1180,
        "wires": [
            [
                "405eccb2.a22934"
            ]
        ]
    },
    {
        "id": "a88428ec.a1acb8",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Nfour\");\nvar check = global.get(\"four\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1220,
        "wires": [
            [
                "49d48198.941ac"
            ]
        ]
    },
    {
        "id": "d0d9a897.79fef8",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Nfive\");\nvar check = global.get(\"five\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1260,
        "wires": [
            [
                "16ced63f.7270ba"
            ]
        ]
    },
    {
        "id": "ec512528.2ce168",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Nsix\");\nvar check = global.get(\"six\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1300,
        "wires": [
            [
                "2351c2f9.7423ee"
            ]
        ]
    },
    {
        "id": "32e3280.4a153d8",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Neight\");\nvar check = global.get(\"eight\");\nmsg.payload = check;\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1380,
        "wires": [
            [
                "f37320d0.ce86"
            ]
        ]
    },
    {
        "id": "478c01f0.b35c1",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "relayname",
        "links": [
            "961a8b6d41509271",
            "f3b81ce4.96da8",
            "e6727fdacd938dbb",
            "bd58bf973d51b884",
            "1b2826af044f1d0c",
            "8194dc853241eb36"
        ],
        "x": 125,
        "y": 1160,
        "wires": [
            [
                "f042e1e4.10116",
                "917e308c.0bc47",
                "ec512528.2ce168",
                "d0d9a897.79fef8",
                "a88428ec.a1acb8",
                "33f8a1c0.2e891e",
                "ed59fe7e.6e7de",
                "1106939.d374b6c",
                "32e3280.4a153d8",
                "5566af571f84ca1f"
            ]
        ]
    },
    {
        "id": "917e308c.0bc47",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "msg.relayname = global.get(\"Nseven\");\nvar check = global.get(\"seven\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1340,
        "wires": [
            [
                "b842531c.0277e"
            ]
        ]
    },
    {
        "id": "f042e1e4.10116",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "flow.set(\"Rupdate\",true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1420,
        "wires": [
            [
                "9f08c5fc.c93f98"
            ]
        ]
    },
    {
        "id": "9f08c5fc.c93f98",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 1420,
        "wires": [
            [
                "a330e399.52af2"
            ]
        ]
    },
    {
        "id": "a330e399.52af2",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "flow.set(\"Rupdate\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "acb8a318.f8e07",
        "type": "comment",
        "z": "e2902b7e.e22d58",
        "name": "Change relay labels",
        "info": "",
        "x": 250,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cee3c747.dbc478",
        "type": "rpi-gpio out",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pin": "22",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "f8b588d3.973108",
        "type": "exec",
        "z": "e2902b7e.e22d58",
        "command": "sudo python3 pekaway/gpio/gpio27.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1090,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c5fea035.18afc",
        "type": "exec",
        "z": "e2902b7e.e22d58",
        "command": "sudo python3 pekaway/gpio/gpio27off.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1080,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4c9d5ae4.603bc4",
        "type": "switch",
        "z": "e2902b7e.e22d58",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 420,
        "wires": [
            [
                "f8b588d3.973108"
            ],
            [
                "c5fea035.18afc"
            ]
        ]
    },
    {
        "id": "76885cd91edacf81",
        "type": "ui_button",
        "z": "e2902b7e.e22d58",
        "name": "",
        "group": "d9229161.b8548",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "sync",
        "tooltip": "check status again and resync it. ",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 680,
        "wires": [
            [
                "9e9306d658f5144c",
                "d7c782cf6314b7a7",
                "3d9b1443db6c1121",
                "4b1f11515b4e3591",
                "16667b68a02e33cf",
                "0a9c3b5d735b3b4c",
                "7db9695328ceaa14",
                "aaaf92bb13bd2897",
                "ffa557eb1d9d0b92"
            ]
        ]
    },
    {
        "id": "9e9306d658f5144c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay1",
        "func": "var check = global.get(\"one\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 700,
        "wires": [
            [
                "dacb7f5b.44d74"
            ]
        ]
    },
    {
        "id": "d7c782cf6314b7a7",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay2",
        "func": "var check = global.get(\"two\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 780,
        "wires": [
            [
                "c264fb8c.f1e758"
            ]
        ]
    },
    {
        "id": "3d9b1443db6c1121",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay3",
        "func": "var check = global.get(\"three\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 860,
        "wires": [
            [
                "405eccb2.a22934"
            ]
        ]
    },
    {
        "id": "4b1f11515b4e3591",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay4",
        "func": "var check = global.get(\"four\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 940,
        "wires": [
            [
                "49d48198.941ac"
            ]
        ]
    },
    {
        "id": "16667b68a02e33cf",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay5",
        "func": "var check = global.get(\"five\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1020,
        "wires": [
            [
                "16ced63f.7270ba"
            ]
        ]
    },
    {
        "id": "0a9c3b5d735b3b4c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay6",
        "func": "var check = global.get(\"six\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1100,
        "wires": [
            [
                "2351c2f9.7423ee"
            ]
        ]
    },
    {
        "id": "7db9695328ceaa14",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay7",
        "func": "var check = global.get(\"seven\");\n\nmsg.payload = check; \nreturn msg;\n\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1180,
        "wires": [
            [
                "b842531c.0277e"
            ]
        ]
    },
    {
        "id": "aaaf92bb13bd2897",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "status relay8",
        "func": "var check = global.get(\"eight\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1260,
        "wires": [
            [
                "f37320d0.ce86"
            ]
        ]
    },
    {
        "id": "ffa557eb1d9d0b92",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set update true",
        "func": "flow.set(\"Rupdate\",true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 660,
        "wires": [
            [
                "7735e70325a96c06"
            ]
        ]
    },
    {
        "id": "5d5d06a8702c7ced",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set update false",
        "func": "\nflow.set(\"Rupdate\",false);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7735e70325a96c06",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "600ms",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 730,
        "y": 660,
        "wires": [
            [
                "5d5d06a8702c7ced"
            ]
        ]
    },
    {
        "id": "3f8eb0095811ce76",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "save relay status",
        "func": "var check2 = flow.get(\"Rupdate\");\n\nif (check2 != true) {\n    msg.payload = {\n        \"one\":global.get(\"one\"),\n        \"two\":global.get(\"two\"),\n        \"three\":global.get(\"three\"),\n        \"four\":global.get(\"four\"),\n        \"five\":global.get(\"five\"),\n        \"six\":global.get(\"six\"),\n        \"seven\":global.get(\"seven\"),\n        \"eight\":global.get(\"eight\"),\n        \"nine\":global.get(\"nine\"),\n        \"ten\":global.get(\"ten\")\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1300,
        "wires": [
            [
                "ea33014cabf2c836"
            ]
        ]
    },
    {
        "id": "ea33014cabf2c836",
        "type": "file",
        "z": "e2902b7e.e22d58",
        "name": "",
        "filename": "pekaway/relaystatusload",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1760,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad5169983d2368e",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "8",
        "invert": true,
        "x": 1110,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b738fbd7ad5aff",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "9",
        "invert": true,
        "x": 1110,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8507c66a115490b8",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "10",
        "invert": true,
        "x": 1110,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b5d0eab215660af2",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "11",
        "invert": true,
        "x": 1110,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "241e64303925f345",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "12",
        "invert": true,
        "x": 1110,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2ed6fd73969112bc",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "13",
        "invert": true,
        "x": 1110,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d06d12d901c7c070",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "14",
        "invert": true,
        "x": 1110,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a3c4ea31880b6744",
        "type": "mcp23017output",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "15",
        "invert": true,
        "x": 1110,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "460303c893b9f1dc",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "get current state",
        "func": "var check = global.get(\"seven\");\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 500,
        "wires": [
            [
                "d06d12d901c7c070"
            ]
        ]
    },
    {
        "id": "5ea0c06fa7709de5",
        "type": "ui_ui_control",
        "z": "e2902b7e.e22d58",
        "name": "",
        "events": "change",
        "x": 80,
        "y": 1560,
        "wires": [
            [
                "432173cfbd3b53c9"
            ]
        ]
    },
    {
        "id": "432173cfbd3b53c9",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "check tab",
        "func": "if (msg.payload == \"change\" && msg.name == \"Switches\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1560,
        "wires": [
            [
                "9f6f310a35b14c67"
            ]
        ]
    },
    {
        "id": "e6727fdacd938dbb",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "change to relay tab",
        "mode": "link",
        "links": [
            "478c01f0.b35c1",
            "7e47707c.5fe7b"
        ],
        "x": 555,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9f6f310a35b14c67",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1560,
        "wires": [
            [
                "e6727fdacd938dbb"
            ]
        ]
    },
    {
        "id": "7bc2c63e42ab05a7",
        "type": "comment",
        "z": "e2902b7e.e22d58",
        "name": "update relay & wifirelay labels when changing to switches tab",
        "info": "",
        "x": 320,
        "y": 1520,
        "wires": []
    },
    {
        "id": "328142e191ef08b0",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "2",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 60,
        "wires": [
            [
                "938297bf5b7dc49c"
            ]
        ]
    },
    {
        "id": "5c4603d32241727c",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "3",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "5a0ee3e3956500da"
            ]
        ]
    },
    {
        "id": "3d2f91f68bf7f2fe",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "4",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 180,
        "wires": [
            [
                "497745f4fe4e3d6d"
            ]
        ]
    },
    {
        "id": "929c25d98c0770f2",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "5",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 240,
        "wires": [
            [
                "ceb5f568901209ee"
            ]
        ]
    },
    {
        "id": "6b072cbdf39bdb32",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"oneoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"None\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 660,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "745b7417fa854db2"
            ]
        ]
    },
    {
        "id": "745b7417fa854db2",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 660,
        "wires": [
            [
                "abbd303277aa527c"
            ]
        ]
    },
    {
        "id": "abbd303277aa527c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"oneoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 660,
        "wires": [
            [
                "dacb7f5b.44d74"
            ]
        ]
    },
    {
        "id": "c78c564257955279",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"twooffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ntwo\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 740,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "10853a74a8853af2"
            ]
        ]
    },
    {
        "id": "10853a74a8853af2",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 740,
        "wires": [
            [
                "c12e18a92136db46"
            ]
        ]
    },
    {
        "id": "c12e18a92136db46",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"twooffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 740,
        "wires": [
            [
                "c264fb8c.f1e758"
            ]
        ]
    },
    {
        "id": "948c057927ef953c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"threeoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Nthree\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 820,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "774ca146eb3d1f9f"
            ]
        ]
    },
    {
        "id": "774ca146eb3d1f9f",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 820,
        "wires": [
            [
                "9322254df0a50dd0"
            ]
        ]
    },
    {
        "id": "9322254df0a50dd0",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"threeoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 820,
        "wires": [
            [
                "405eccb2.a22934"
            ]
        ]
    },
    {
        "id": "f551adef67b211a0",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"fouroffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Nfour\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 900,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "72e77a114e869c04"
            ]
        ]
    },
    {
        "id": "72e77a114e869c04",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 900,
        "wires": [
            [
                "f31eb22dda87ec25"
            ]
        ]
    },
    {
        "id": "f31eb22dda87ec25",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"fouroffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 900,
        "wires": [
            [
                "49d48198.941ac"
            ]
        ]
    },
    {
        "id": "16a04cee2fe86c0d",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"fiveoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Nfive\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "b7ac58ad17708d99"
            ]
        ]
    },
    {
        "id": "b7ac58ad17708d99",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 980,
        "wires": [
            [
                "28523a58aea84894"
            ]
        ]
    },
    {
        "id": "28523a58aea84894",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"fiveoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 980,
        "wires": [
            [
                "16ced63f.7270ba"
            ]
        ]
    },
    {
        "id": "8bb48b46f22cc9a4",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"sixoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Nsix\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1060,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "b39bc3b9fc585e68"
            ]
        ]
    },
    {
        "id": "b39bc3b9fc585e68",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 1060,
        "wires": [
            [
                "e4ad212b47f86f0d"
            ]
        ]
    },
    {
        "id": "e4ad212b47f86f0d",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"sixoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1060,
        "wires": [
            [
                "2351c2f9.7423ee"
            ]
        ]
    },
    {
        "id": "5fbc33ef8d4c3264",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"sevenoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Nseven\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1140,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "29817dad5c4835e4"
            ]
        ]
    },
    {
        "id": "29817dad5c4835e4",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 1140,
        "wires": [
            [
                "7ef34e21da1f846c"
            ]
        ]
    },
    {
        "id": "7ef34e21da1f846c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"sevenoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1140,
        "wires": [
            [
                "b842531c.0277e"
            ]
        ]
    },
    {
        "id": "d808ce1c4dd82dbc",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "auto off",
        "func": "var offauto = global.get(\"eightoffauto\")\n\nif(flow.get(\"Rupdate\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Neight\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1220,
        "wires": [
            [
                "714b8fe5d32f4ad8"
            ],
            [
                "31e4ebd73479bb42"
            ]
        ]
    },
    {
        "id": "31e4ebd73479bb42",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 1220,
        "wires": [
            [
                "a138645632ac4637"
            ]
        ]
    },
    {
        "id": "a138645632ac4637",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "turn off",
        "func": "if (global.get(\"eightoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1220,
        "wires": [
            [
                "f37320d0.ce86"
            ]
        ]
    },
    {
        "id": "714b8fe5d32f4ad8",
        "type": "ui_toast",
        "z": "e2902b7e.e22d58",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1570,
        "y": 620,
        "wires": []
    },
    {
        "id": "2d030be61cb338ee",
        "type": "link in",
        "z": "e2902b7e.e22d58",
        "name": "relay state init",
        "links": [
            "ea056e6598b5f8c6"
        ],
        "x": 215,
        "y": 780,
        "wires": [
            [
                "d437c8f3d99b5ef5"
            ]
        ]
    },
    {
        "id": "d437c8f3d99b5ef5",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "9e9306d658f5144c",
                "d7c782cf6314b7a7",
                "3d9b1443db6c1121",
                "4b1f11515b4e3591",
                "16667b68a02e33cf",
                "0a9c3b5d735b3b4c",
                "7db9695328ceaa14",
                "aaaf92bb13bd2897"
            ]
        ]
    },
    {
        "id": "5566af571f84ca1f",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "",
        "func": "if (global.get(\"None\") == \"wait\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "3248d18b1cbaf77d"
            ]
        ]
    },
    {
        "id": "3248d18b1cbaf77d",
        "type": "delay",
        "z": "e2902b7e.e22d58",
        "name": "",
        "pauseType": "delay",
        "timeout": "2.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "8194dc853241eb36"
            ]
        ]
    },
    {
        "id": "8194dc853241eb36",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "change to relay tab",
        "mode": "link",
        "links": [
            "478c01f0.b35c1"
        ],
        "x": 735,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9eccd07d38f98616",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "6",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 300,
        "wires": [
            [
                "8a3945dfad305b68"
            ]
        ]
    },
    {
        "id": "940fa1607bec7f0f",
        "type": "mcp23017input",
        "z": "e2902b7e.e22d58",
        "name": "",
        "chip": "4e9949f3b6e19991",
        "bitNum": "7",
        "pullUp": true,
        "invert": true,
        "debounce": 200,
        "onMsg": true,
        "offMsg": true,
        "x": 1340,
        "y": 360,
        "wires": [
            [
                "889842b5f6758c38"
            ]
        ]
    },
    {
        "id": "35979598d2e22ffe",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 1",
        "mode": "link",
        "links": [
            "e9ffa3ef.cde5d"
        ],
        "x": 2365,
        "y": 80,
        "wires": []
    },
    {
        "id": "74c07fa0bf9c5a2e",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 2",
        "mode": "link",
        "links": [
            "7255f9f4.6304d8"
        ],
        "x": 2365,
        "y": 120,
        "wires": []
    },
    {
        "id": "084b703eefb74342",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 3",
        "mode": "link",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 2365,
        "y": 160,
        "wires": []
    },
    {
        "id": "7b35692bbcc1d3a1",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 4",
        "mode": "link",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 2365,
        "y": 200,
        "wires": []
    },
    {
        "id": "1d2d6981b67a3fb3",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 5",
        "mode": "link",
        "links": [
            "1d05179e.1f1a78"
        ],
        "x": 2365,
        "y": 240,
        "wires": []
    },
    {
        "id": "8c517888b048c989",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 6",
        "mode": "link",
        "links": [
            "c9adec52.63ae6"
        ],
        "x": 2365,
        "y": 280,
        "wires": []
    },
    {
        "id": "b383c8212f7fa6ab",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 7",
        "mode": "link",
        "links": [
            "38796905.f4b7f6"
        ],
        "x": 2365,
        "y": 320,
        "wires": []
    },
    {
        "id": "cba2269096538077",
        "type": "link out",
        "z": "e2902b7e.e22d58",
        "name": "PCB pins out 8",
        "mode": "link",
        "links": [
            "2840c10.f61294"
        ],
        "x": 2365,
        "y": 360,
        "wires": []
    },
    {
        "id": "2d4632d766bdec0c",
        "type": "file in",
        "z": "e2902b7e.e22d58",
        "name": "",
        "filename": "filename",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1780,
        "y": 220,
        "wires": [
            [
                "eec78cdf44517648"
            ]
        ]
    },
    {
        "id": "eec78cdf44517648",
        "type": "json",
        "z": "e2902b7e.e22d58",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1940,
        "y": 220,
        "wires": [
            [
                "fbe89c4741142cd0"
            ]
        ]
    },
    {
        "id": "fbe89c4741142cd0",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "check relays to set",
        "func": "var relay1 = null\nvar relay2 = null\nvar relay3 = null\nvar relay4 = null\nvar relay5 = null\nvar relay6 = null\nvar relay7 = null\nvar relay8 = null\n\nrelay1 = (msg.payload.relays.one == true ? msg : null) \nrelay2 = (msg.payload.relays.two == true ? msg : null) \nrelay3 = (msg.payload.relays.three == true ? msg : null) \nrelay4 = (msg.payload.relays.four == true ? msg : null) \nrelay5 = (msg.payload.relays.five == true ? msg : null) \nrelay6 = (msg.payload.relays.six == true ? msg : null) \nrelay7 = (msg.payload.relays.seven == true ? msg : null) \nrelay8 = (msg.payload.relays.eight == true ? msg : null) \n\nif (global.get(\"mcpinput\"+msg.mcpinput+\"_type\") == \"switch\") {\n    msg.payload = msg.mcpinput_status\n    return [ relay1, relay2, relay3, relay4, relay5, relay6, relay7, relay8 ]\n}\nelse if (global.get(\"mcpinput\"+msg.mcpinput+\"_type\") == \"button\") {\n    if (msg.mcpinput_status == false) {\n        return null\n    }\n    else if (msg.mcpinput_status == true) {\n        var global_1 = (global.get(\"one\") == true ? false : true)\n        var global_2 = (global.get(\"two\") == true ? false : true)\n        var global_3 = (global.get(\"three\") == true ? false : true)\n        var global_4 = (global.get(\"four\") == true ? false : true)\n        var global_5 = (global.get(\"five\") == true ? false : true)\n        var global_6 = (global.get(\"six\") == true ? false : true)\n        var global_7 = (global.get(\"seven\") == true ? false : true)\n        var global_8 = (global.get(\"eight\") == true ? false : true)\n        \n        var i = 1\n        while (i <= 8) {\n            if (i == 1) {\n                msg.payload = (global.get(\"one\") == true ? false : true)\n                node.send([relay1, null, null, null, null, null, null, null])\n                i = i+1\n            }\n            else if (i == 2) {\n                msg.payload = (global.get(\"two\") == true ? false : true)\n                node.send([null, relay2, null, null, null, null, null, null])\n                i = i+1\n            }\n            else if (i == 3) {\n                msg.payload = (global.get(\"three\") == true ? false : true)\n                node.send([null, null, relay3, null, null, null, null, null])\n                i = i+1\n            }\n            else if (i == 4) {\n                msg.payload = (global.get(\"four\") == true ? false : true)\n                node.send([null, null, null, relay4, null, null, null, null])\n                i = i+1\n            }\n            else if (i == 5) {\n                msg.payload = (global.get(\"five\") == true ? false : true)\n                node.send([null, null, null, null, relay5, null, null, null])\n                i = i+1\n            }\n            else if (i == 6) {\n                msg.payload = (global.get(\"six\") == true ? false : true)\n                node.send([null, null, null, null, null, relay6, null, null])\n                i = i+1\n            }\n            else if (i == 7) {\n                msg.payload = (global.get(\"seven\") == true ? false : true)\n                node.send([null, null, null, null, null, null, relay7, null])\n                i = i+1\n            }\n            else if (i == 8) {\n                msg.payload = (global.get(\"eight\") == true ? false : true)\n                node.send([null, null, null, null, null, null, null, relay8])\n                i = i+1\n            }\n        }\n            \n    }\n}",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 220,
        "wires": [
            [
                "35979598d2e22ffe"
            ],
            [
                "74c07fa0bf9c5a2e"
            ],
            [
                "084b703eefb74342"
            ],
            [
                "7b35692bbcc1d3a1"
            ],
            [
                "1d2d6981b67a3fb3"
            ],
            [
                "8c517888b048c989"
            ],
            [
                "b383c8212f7fa6ab"
            ],
            [
                "cba2269096538077"
            ]
        ]
    },
    {
        "id": "938297bf5b7dc49c",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 1\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 60,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "5a0ee3e3956500da",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 2\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 120,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "497745f4fe4e3d6d",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 3\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 180,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "ceb5f568901209ee",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 4\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 240,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "8a3945dfad305b68",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 5\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 300,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "889842b5f6758c38",
        "type": "function",
        "z": "e2902b7e.e22d58",
        "name": "set status true/false",
        "func": "msg.mcpinput = 6\nmsg.filename = \"pekaway/mcpinput\"+msg.mcpinput\nmsg.mcpinput_status = msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 360,
        "wires": [
            [
                "2d4632d766bdec0c"
            ]
        ]
    },
    {
        "id": "e87f2d04787231ef",
        "type": "comment",
        "z": "e2902b7e.e22d58",
        "name": "MCP inputs on board",
        "info": "",
        "x": 1820,
        "y": 180,
        "wires": []
    },
    {
        "id": "76541ff7.ab1ae",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 1",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 380,
        "wires": [
            [
                "21ee26df2e861511",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "4148a30219ef856c"
            ]
        ]
    },
    {
        "id": "37ad96a9.a550ea",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 2",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 460,
        "wires": [
            [
                "efc3c9c3bced7230",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "7fda72fb323b9977"
            ]
        ]
    },
    {
        "id": "4763f80d.ed3f48",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 3",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 540,
        "wires": [
            [
                "9b0e524b08572d0c",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "c599388845a50874"
            ]
        ]
    },
    {
        "id": "88dbb3f0.a2ee9",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 4",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "WifiRelay 4",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 620,
        "wires": [
            [
                "e1334c940e639f58",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "5007441d228d9454"
            ]
        ]
    },
    {
        "id": "a0c4bc49.b37ec",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wone\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 40,
        "wires": [
            [
                "720f3eb2d5d29f1f",
                "76541ff7.ab1ae"
            ]
        ]
    },
    {
        "id": "33069269.bbe79e",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wtwo\");  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 80,
        "wires": [
            [
                "0ada939a58d96722",
                "37ad96a9.a550ea"
            ]
        ]
    },
    {
        "id": "b4ab904f.1f437",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wthree\");  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "52b21bef53bdea53",
                "4763f80d.ed3f48"
            ]
        ]
    },
    {
        "id": "97004421.c30ba8",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wfour\"); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 160,
        "wires": [
            [
                "7a848edff594f0af",
                "88dbb3f0.a2ee9"
            ]
        ]
    },
    {
        "id": "c1d85ff.48241a",
        "type": "inject",
        "z": "f75bc952.6d3f78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 220,
        "wires": [
            [
                "8819c793.8583a8"
            ]
        ]
    },
    {
        "id": "27bdb3ee.04bc8c",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 1",
        "links": [
            "67e7dbe48b39e6e4",
            "95cb51d8.07686"
        ],
        "x": 2115,
        "y": 380,
        "wires": []
    },
    {
        "id": "309e32c.0530fce",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 4",
        "links": [
            "52e560227ba2414c",
            "57620f7e.8cf06"
        ],
        "x": 2115,
        "y": 620,
        "wires": []
    },
    {
        "id": "eb22399f.41d3c8",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 2",
        "links": [
            "d6377429.666008",
            "fe0c5890608f9457"
        ],
        "x": 2115,
        "y": 460,
        "wires": []
    },
    {
        "id": "60b06911.d6dea8",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 3",
        "mode": "link",
        "links": [
            "71c6cbf40f8e3403",
            "b7ebdd6f595b53a1"
        ],
        "x": 2115,
        "y": 540,
        "wires": []
    },
    {
        "id": "deae82cc.9a347",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWone\")\nvar check = global.get(\"NWone\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 440,
        "wires": [
            [
                "1161fd45.598293"
            ]
        ]
    },
    {
        "id": "745350c0.79ec",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWtwo\")\nvar check = global.get(\"NWtwo\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 480,
        "wires": [
            [
                "9f46654b.6e7538"
            ]
        ]
    },
    {
        "id": "97fa8d55.1c38d",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWthree\")\nvar check = global.get(\"NWthree\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 520,
        "wires": [
            [
                "e1f5b2df.c2e61"
            ]
        ]
    },
    {
        "id": "6bbc739c.2581fc",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWfour\")\nvar check = global.get(\"NWfour\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 560,
        "wires": [
            [
                "95c813d7.622e3"
            ]
        ]
    },
    {
        "id": "281435a9.7d567a",
        "type": "inject",
        "z": "f75bc952.6d3f78",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "ee278334.46088"
            ]
        ]
    },
    {
        "id": "7e47707c.5fe7b",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "relayname",
        "links": [
            "961a8b6d41509271",
            "d24a3116.8a4af",
            "d3a64b0d.8d56b8",
            "e6727fdacd938dbb"
        ],
        "x": 435,
        "y": 600,
        "wires": [
            [
                "ec84db75.c2e648",
                "6bbc739c.2581fc",
                "97fa8d55.1c38d",
                "745350c0.79ec",
                "deae82cc.9a347",
                "5dd6189c1e3fa4bc",
                "b45597f8130fd3fb",
                "4472c1078ce164fc",
                "bc3f69c6f58f9eb1"
            ]
        ]
    },
    {
        "id": "ec84db75.c2e648",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "set update true",
        "func": "flow.set(\"update\",true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 400,
        "wires": [
            [
                "98f58e14.d3e2f"
            ]
        ]
    },
    {
        "id": "98f58e14.d3e2f",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "600",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "2ba158c0.74ce28"
            ]
        ]
    },
    {
        "id": "2ba158c0.74ce28",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "set update false",
        "func": "flow.set(\"update\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1161fd45.598293",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "76541ff7.ab1ae"
            ]
        ]
    },
    {
        "id": "9f46654b.6e7538",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 480,
        "wires": [
            [
                "37ad96a9.a550ea"
            ]
        ]
    },
    {
        "id": "e1f5b2df.c2e61",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "4763f80d.ed3f48"
            ]
        ]
    },
    {
        "id": "95c813d7.622e3",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "88dbb3f0.a2ee9"
            ]
        ]
    },
    {
        "id": "ee278334.46088",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "ec84db75.c2e648",
                "deae82cc.9a347",
                "745350c0.79ec",
                "97fa8d55.1c38d",
                "6bbc739c.2581fc",
                "5dd6189c1e3fa4bc",
                "b45597f8130fd3fb",
                "4472c1078ce164fc",
                "bc3f69c6f58f9eb1"
            ]
        ]
    },
    {
        "id": "8819c793.8583a8",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "enabled?",
        "func": "if(global.get(\"wifirelay\")===true)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "a0c4bc49.b37ec",
                "33069269.bbe79e",
                "b4ab904f.1f437",
                "97004421.c30ba8",
                "501047b593b02850",
                "8838e86d9597161a",
                "2450a225b06be9f9",
                "059460fc782cf863"
            ]
        ]
    },
    {
        "id": "afbb8dda.ffe6c",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 1",
        "links": [
            "2d8411f3b31d9334",
            "8a40988dd0ca7485",
            "937d5e03dd599a61",
            "98426e64185a14f4",
            "d896b7d25f27d216",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 380,
        "wires": [
            [
                "76541ff7.ab1ae"
            ]
        ]
    },
    {
        "id": "d2ce5044.ef8af",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect  4",
        "links": [
            "4eadf5d2.808f3c",
            "fa0f1d98be9bd11f",
            "236f17a63794e768",
            "8e7f9039e208c418",
            "c247d93c569e0cee",
            "be5d99d7bf514d04",
            "bd685797733cfb8e",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 620,
        "wires": [
            [
                "88dbb3f0.a2ee9"
            ]
        ]
    },
    {
        "id": "33a5d09e.6cc14",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 2",
        "links": [
            "076b4419c39bca29",
            "58a0dd71927444c8",
            "80da336a069ba2df",
            "9028bf45.f220c",
            "bae1aa2b504067f3",
            "3930c9e584af80a2",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 460,
        "wires": [
            [
                "37ad96a9.a550ea"
            ]
        ]
    },
    {
        "id": "428f4d48.86eaf4",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 3",
        "links": [
            "3ffcd69b6d278659",
            "80cd2ca9be046404",
            "c194897c9bfc3b8a",
            "cad82fcbb61f0530",
            "d4164aba427ccf52",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 540,
        "wires": [
            [
                "4763f80d.ed3f48"
            ]
        ]
    },
    {
        "id": "5ce49e3185f26ef1",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 5",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 700,
        "wires": [
            [
                "71e36bd1129b774a",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "829c505570bd4a61"
            ]
        ]
    },
    {
        "id": "6b47e26eed9d0d78",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 6",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 780,
        "wires": [
            [
                "3753ceb5b10a7dfe",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "fed66f9ff8776208"
            ]
        ]
    },
    {
        "id": "8e18a3125e7bef2f",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 7",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 860,
        "wires": [
            [
                "e738c8dab13b0bd1",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "7ae588fbac302eab"
            ]
        ]
    },
    {
        "id": "f9ebdac609b17044",
        "type": "ui_switch",
        "z": "f75bc952.6d3f78",
        "name": "WifiRelay 8",
        "label": "{{relayname}}",
        "tooltip": "",
        "group": "7ac84a4b.f75494",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1750,
        "y": 940,
        "wires": [
            [
                "5f85a38288c97e88",
                "3883f084b00f9733",
                "fb860c240b114fba",
                "5d84f047f69dbdb1"
            ]
        ]
    },
    {
        "id": "df5dc54968f5895e",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 5",
        "links": [
            "694613034a60fe9a",
            "95cb51d8.07686"
        ],
        "x": 2115,
        "y": 700,
        "wires": []
    },
    {
        "id": "84f111f6cb530c4d",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 8",
        "links": [
            "57620f7e.8cf06",
            "aa1e33fda110d928"
        ],
        "x": 2115,
        "y": 940,
        "wires": []
    },
    {
        "id": "114eda8aabd9e2a7",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 6",
        "links": [
            "72d54ceabf2571b6",
            "d6377429.666008"
        ],
        "x": 2115,
        "y": 780,
        "wires": []
    },
    {
        "id": "40212aac63b29d3e",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 7",
        "links": [
            "06d97ee62fa005c1",
            "215a4540.fda2ca",
            "f153f0eaea9bf9d8"
        ],
        "x": 2115,
        "y": 860,
        "wires": []
    },
    {
        "id": "5dd6189c1e3fa4bc",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWfive\")\nvar check = global.get(\"NWfive\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 600,
        "wires": [
            [
                "27b6db9a0cf5c968"
            ]
        ]
    },
    {
        "id": "b45597f8130fd3fb",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWsix\")\nvar check = global.get(\"NWsix\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 640,
        "wires": [
            [
                "d88cdf97965b7af0"
            ]
        ]
    },
    {
        "id": "4472c1078ce164fc",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWseven\")\nvar check = global.get(\"NWseven\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 680,
        "wires": [
            [
                "53d494f41f1d2940"
            ]
        ]
    },
    {
        "id": "bc3f69c6f58f9eb1",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get wifirelay name",
        "func": "msg.relayname = global.get(\"NWeight\")\nvar check = global.get(\"NWeight\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 720,
        "wires": [
            [
                "24a523625efeb288"
            ]
        ]
    },
    {
        "id": "27b6db9a0cf5c968",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1220,
        "y": 600,
        "wires": [
            [
                "5ce49e3185f26ef1"
            ]
        ]
    },
    {
        "id": "d88cdf97965b7af0",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "6b47e26eed9d0d78"
            ]
        ]
    },
    {
        "id": "53d494f41f1d2940",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "8e18a3125e7bef2f"
            ]
        ]
    },
    {
        "id": "24a523625efeb288",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "f9ebdac609b17044"
            ]
        ]
    },
    {
        "id": "9f1c7c65c2da2d42",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 5",
        "links": [
            "3c597d636ed35d64",
            "7cb5ca22f1c184e8",
            "5f2b71b5ac8456b5",
            "5054e40cc2e2aef6",
            "a90f9a4da959d640",
            "bf2e41e184d48192",
            "a03aabc4eaec9b86",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 700,
        "wires": [
            [
                "5ce49e3185f26ef1"
            ]
        ]
    },
    {
        "id": "1be6547089f6e149",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 8",
        "links": [
            "18f278f3256181fc",
            "0bf4c82c6cb860c4",
            "c84eaa263a67ff73",
            "920a196b884fb831",
            "731a0542f21fc3fc",
            "b2c1b6f968d4140c",
            "c8c1fbf9cff26f61",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 940,
        "wires": [
            [
                "f9ebdac609b17044"
            ]
        ]
    },
    {
        "id": "d76c3b78c0f14e69",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 6",
        "links": [
            "3e0f2a0270a8f3df",
            "8c23965172e6d81f",
            "2c97904cbdf55414",
            "05855ba70e3fa2f0",
            "1c02b06aeb57d07d",
            "bc676754f5ac029c",
            "f7f0c4799f9d2a60",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 780,
        "wires": [
            [
                "6b47e26eed9d0d78"
            ]
        ]
    },
    {
        "id": "34f49f08e1a06032",
        "type": "link in",
        "z": "f75bc952.6d3f78",
        "name": "Wswitch connect 7",
        "links": [
            "f4cefc9b8614abd9",
            "c4e1e5d7a9f81b29",
            "7444cdfd898a92d1",
            "399b533032eb1204",
            "1f39288e4b646d46",
            "60bfc3c39cc7ed45",
            "d09d8d62a8430b81",
            "7c5ed1bc3b18ef14",
            "3fe38c2d6edc0c84",
            "0ec85dcb3608a2e8"
        ],
        "x": 1515,
        "y": 860,
        "wires": [
            [
                "8e18a3125e7bef2f"
            ]
        ]
    },
    {
        "id": "501047b593b02850",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wfive\"); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "b33939ea88a8e8b5",
                "5ce49e3185f26ef1"
            ]
        ]
    },
    {
        "id": "8838e86d9597161a",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wsix\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 240,
        "wires": [
            [
                "3e2bc38545285d02",
                "6b47e26eed9d0d78"
            ]
        ]
    },
    {
        "id": "2450a225b06be9f9",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Wseven\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 280,
        "wires": [
            [
                "72eaa982829289af",
                "8e18a3125e7bef2f"
            ]
        ]
    },
    {
        "id": "059460fc782cf863",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "status holen",
        "func": "msg.payload = global.get(\"Weight\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 320,
        "wires": [
            [
                "72114393dc4d761a",
                "f9ebdac609b17044"
            ]
        ]
    },
    {
        "id": "e075d7b422b496e1",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save relay status",
        "func": "var check2 = flow.get(\"update\");\n\nif (check2 != true) {\n    msg.payload = {\n        \"Wone\":global.get(\"Wone\"),\n        \"Wtwo\":global.get(\"Wtwo\"),\n        \"Wthree\":global.get(\"Wthree\"),\n        \"Wfour\":global.get(\"Wfour\"),\n        \"Wfive\":global.get(\"Wfive\"),\n        \"Wsix\":global.get(\"Wsix\"),\n        \"Wseven\":global.get(\"Wseven\"),\n        \"Weight\":global.get(\"Weight\"),\n    }\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 980,
        "wires": [
            [
                "11c0f2b4455263a0"
            ]
        ]
    },
    {
        "id": "11c0f2b4455263a0",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelaystatusload",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2360,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "720f3eb2d5d29f1f",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 1",
        "links": [
            "67e7dbe48b39e6e4"
        ],
        "x": 1635,
        "y": 40,
        "wires": []
    },
    {
        "id": "7a848edff594f0af",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 4",
        "mode": "link",
        "links": [
            "73311fc8d6eb600e"
        ],
        "x": 1635,
        "y": 160,
        "wires": []
    },
    {
        "id": "b33939ea88a8e8b5",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 5",
        "mode": "link",
        "links": [
            "694613034a60fe9a"
        ],
        "x": 1635,
        "y": 200,
        "wires": []
    },
    {
        "id": "3e2bc38545285d02",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 6",
        "links": [
            "72d54ceabf2571b6"
        ],
        "x": 1635,
        "y": 240,
        "wires": []
    },
    {
        "id": "72eaa982829289af",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 7",
        "links": [
            "06d97ee62fa005c1",
            "f153f0eaea9bf9d8"
        ],
        "x": 1635,
        "y": 280,
        "wires": []
    },
    {
        "id": "72114393dc4d761a",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 8",
        "links": [
            "aa1e33fda110d928"
        ],
        "x": 1635,
        "y": 320,
        "wires": []
    },
    {
        "id": "0ada939a58d96722",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 2",
        "mode": "link",
        "links": [
            "fe0c5890608f9457"
        ],
        "x": 1635,
        "y": 80,
        "wires": []
    },
    {
        "id": "52b21bef53bdea53",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "to Mqtt Homebridge 3",
        "mode": "link",
        "links": [
            "b7ebdd6f595b53a1"
        ],
        "x": 1635,
        "y": 120,
        "wires": []
    },
    {
        "id": "1dc2bf9a36c9c85f",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay1",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1000,
        "wires": [
            [
                "292b8e2d01fdefe4"
            ]
        ]
    },
    {
        "id": "b914380aa8afb58a",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay2",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1040,
        "wires": [
            [
                "dc94e372b558955f"
            ]
        ]
    },
    {
        "id": "1077be79d6ab1ca2",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay3",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1080,
        "wires": [
            [
                "6e67e4f516d5baf4"
            ]
        ]
    },
    {
        "id": "10e57f1574a8d0e7",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay4",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1120,
        "wires": [
            [
                "68a790c399f54aac"
            ]
        ]
    },
    {
        "id": "f6dcf9f9a45c58bc",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay5",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1160,
        "wires": [
            [
                "c5a072309023319f"
            ]
        ]
    },
    {
        "id": "381e8a76e6b2aded",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay6",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1200,
        "wires": [
            [
                "e815ea9818a6044b"
            ]
        ]
    },
    {
        "id": "f529d8b6fd407b77",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay7",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1240,
        "wires": [
            [
                "9fded22b7b4ceb09"
            ]
        ]
    },
    {
        "id": "f0a8ca245a4ccf3e",
        "type": "ui_dropdown",
        "z": "f75bc952.6d3f78",
        "name": "",
        "label": "Wrelay8",
        "tooltip": "set wrelay to tasmota or shelly firmware",
        "place": "",
        "group": "7e769fe6b926f5c6",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Tasmota",
                "value": "tasmota",
                "type": "str"
            },
            {
                "label": "Shelly",
                "value": "shelly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 940,
        "y": 1280,
        "wires": [
            [
                "30c0ad4c73843adc"
            ]
        ]
    },
    {
        "id": "b96aec7fab51d983",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay1_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "1dc2bf9a36c9c85f"
            ]
        ]
    },
    {
        "id": "2019caf1df90815d",
        "type": "inject",
        "z": "f75bc952.6d3f78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "16",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "1abb506e1bcaf1da",
                "50e6d4a296ba905c",
                "ccea85902c483940",
                "1249cb6cb36fbd68",
                "e673a77029520e2f",
                "6ec0a4fce6cecbf0",
                "8660bde459069927",
                "e7b363bd32161936"
            ]
        ]
    },
    {
        "id": "292b8e2d01fdefe4",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay1_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1000,
        "wires": [
            [
                "8de13b5cd82bf64e"
            ]
        ]
    },
    {
        "id": "8de13b5cd82bf64e",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay1_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "332d40f4cd92886d",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay2_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "837f77ccadda9fac",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay3_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "e2366d1591f5cdac",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay4_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "cdfb8f1b3ed5defb",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay5_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "e25bf440c2188934",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay6_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "ab96a0afcf144fd7",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay7_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f2c8013a450583b1",
        "type": "file",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay8_firmware",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "dc94e372b558955f",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay2_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1040,
        "wires": [
            [
                "332d40f4cd92886d"
            ]
        ]
    },
    {
        "id": "6e67e4f516d5baf4",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay3_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1080,
        "wires": [
            [
                "837f77ccadda9fac"
            ]
        ]
    },
    {
        "id": "68a790c399f54aac",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay4_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1120,
        "wires": [
            [
                "e2366d1591f5cdac"
            ]
        ]
    },
    {
        "id": "c5a072309023319f",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay5_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1160,
        "wires": [
            [
                "cdfb8f1b3ed5defb"
            ]
        ]
    },
    {
        "id": "e815ea9818a6044b",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay6_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1200,
        "wires": [
            [
                "e25bf440c2188934"
            ]
        ]
    },
    {
        "id": "9fded22b7b4ceb09",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay7_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1240,
        "wires": [
            [
                "ab96a0afcf144fd7"
            ]
        ]
    },
    {
        "id": "30c0ad4c73843adc",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "save state",
        "func": "global.set(\"wrelay8_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1280,
        "wires": [
            [
                "f2c8013a450583b1"
            ]
        ]
    },
    {
        "id": "1abb506e1bcaf1da",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay2_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "95aa4a64114e4a90"
            ]
        ]
    },
    {
        "id": "50e6d4a296ba905c",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay3_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "149bbf9a9fb068f2"
            ]
        ]
    },
    {
        "id": "ccea85902c483940",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay4_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "ca75f6855b36a4af"
            ]
        ]
    },
    {
        "id": "1249cb6cb36fbd68",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay5_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1160,
        "wires": [
            [
                "2391f7e8243d5045"
            ]
        ]
    },
    {
        "id": "e673a77029520e2f",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay6_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "3e12644bb19c1ba9"
            ]
        ]
    },
    {
        "id": "6ec0a4fce6cecbf0",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay7_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "6ad723e58db23b5c"
            ]
        ]
    },
    {
        "id": "8660bde459069927",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay8_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1280,
        "wires": [
            [
                "9d35fc0db1cfc425"
            ]
        ]
    },
    {
        "id": "e7b363bd32161936",
        "type": "file in",
        "z": "f75bc952.6d3f78",
        "name": "",
        "filename": "pekaway/wrelay1_firmware",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "b96aec7fab51d983"
            ]
        ]
    },
    {
        "id": "95aa4a64114e4a90",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay2_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1040,
        "wires": [
            [
                "b914380aa8afb58a"
            ]
        ]
    },
    {
        "id": "149bbf9a9fb068f2",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload }\nglobal.set(\"wrelay3_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "1077be79d6ab1ca2"
            ]
        ]
    },
    {
        "id": "ca75f6855b36a4af",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay4_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1120,
        "wires": [
            [
                "10e57f1574a8d0e7"
            ]
        ]
    },
    {
        "id": "2391f7e8243d5045",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay5_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1160,
        "wires": [
            [
                "f6dcf9f9a45c58bc"
            ]
        ]
    },
    {
        "id": "3e12644bb19c1ba9",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay6_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1200,
        "wires": [
            [
                "381e8a76e6b2aded"
            ]
        ]
    },
    {
        "id": "6ad723e58db23b5c",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay7_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1240,
        "wires": [
            [
                "f529d8b6fd407b77"
            ]
        ]
    },
    {
        "id": "9d35fc0db1cfc425",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "get last state as placeholder",
        "func": "msg.ui_control = { \"place\":msg.payload } \nglobal.set(\"wrelay8_firmware\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "f0a8ca245a4ccf3e"
            ]
        ]
    },
    {
        "id": "45867d3f513cd050",
        "type": "comment",
        "z": "f75bc952.6d3f78",
        "name": "get firmware on boot and save changes into file",
        "info": "",
        "x": 240,
        "y": 960,
        "wires": []
    },
    {
        "id": "5fed52e270c064aa",
        "type": "comment",
        "z": "f75bc952.6d3f78",
        "name": "DON'T pass input through to output!",
        "info": "",
        "x": 960,
        "y": 960,
        "wires": []
    },
    {
        "id": "9b0e524b08572d0c",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wthree\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wthree\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 540,
        "wires": [
            [
                "60b06911.d6dea8"
            ]
        ]
    },
    {
        "id": "21ee26df2e861511",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wone\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wone\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 380,
        "wires": [
            [
                "27bdb3ee.04bc8c"
            ]
        ]
    },
    {
        "id": "efc3c9c3bced7230",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wtwo\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wtwo\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 460,
        "wires": [
            [
                "eb22399f.41d3c8"
            ]
        ]
    },
    {
        "id": "e1334c940e639f58",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wfour\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wfour\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 620,
        "wires": [
            [
                "309e32c.0530fce"
            ]
        ]
    },
    {
        "id": "71e36bd1129b774a",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wfive\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wfive\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 700,
        "wires": [
            [
                "df5dc54968f5895e"
            ]
        ]
    },
    {
        "id": "3753ceb5b10a7dfe",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wsix\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wsix\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 780,
        "wires": [
            [
                "114eda8aabd9e2a7"
            ]
        ]
    },
    {
        "id": "e738c8dab13b0bd1",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Wseven\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Wseven\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 860,
        "wires": [
            [
                "40212aac63b29d3e"
            ]
        ]
    },
    {
        "id": "5f85a38288c97e88",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "globalVariable set",
        "func": "var check2 = flow.get(\"update\");\nif(check2 === true)\n{\n    return null\n}\nelse {\n    if (msg.payload == false) { \n        global.set(\"Weight\", false);\n    }\n    else if (msg.payload == true) {\n        global.set(\"Weight\", true);\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 940,
        "wires": [
            [
                "84f111f6cb530c4d"
            ]
        ]
    },
    {
        "id": "3883f084b00f9733",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1980,
        "y": 980,
        "wires": [
            [
                "e075d7b422b496e1"
            ]
        ]
    },
    {
        "id": "c3650f90a619ea03",
        "type": "comment",
        "z": "f75bc952.6d3f78",
        "name": "get wrelays on boot",
        "info": "",
        "x": 970,
        "y": 180,
        "wires": []
    },
    {
        "id": "fb860c240b114fba",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "send status Wrelay to display",
        "func": "var check1 = global.get(\"Wone\");\nvar check2 = global.get(\"Wtwo\");\nvar check3 = global.get(\"Wthree\");\nvar check4 = global.get(\"Wfour\");\nvar check5 = global.get(\"Wfive\");\nvar check6 = global.get(\"Wsix\");\nvar check7 = global.get(\"Wseven\");\nvar check8 = global.get(\"Weight\");\nvar buf = [];\n\n  buf.push(0x05)\n  buf.push(0xFF)\n  //relay1\n  if(check1 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay2\n  if(check2 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay3\n  if(check3 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay4\n  if(check4 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay5\n  if(check5 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay6\n  if(check6 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay7\n  if(check7 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n    //relay8\n  if(check8 == false)\n  buf.push(0x00)\n  else\n  buf.push(0x01)\n\n\n msg.payload = new Buffer(buf)\n\n\nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1020,
        "wires": [
            [
                "e6fcf7b384f8fa1a"
            ]
        ]
    },
    {
        "id": "e6fcf7b384f8fa1a",
        "type": "link out",
        "z": "f75bc952.6d3f78",
        "name": "switch connect 8",
        "mode": "link",
        "links": [
            "149f7856ccf5def5"
        ],
        "x": 2175,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4148a30219ef856c",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"woneoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWone\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 340,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "96e19e6e48e30801"
            ]
        ]
    },
    {
        "id": "96e19e6e48e30801",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 340,
        "wires": [
            [
                "3603d00d284e6207"
            ]
        ]
    },
    {
        "id": "3603d00d284e6207",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"woneoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 340,
        "wires": [
            [
                "76541ff7.ab1ae"
            ]
        ]
    },
    {
        "id": "cfbb76ac4a79bfd3",
        "type": "ui_toast",
        "z": "f75bc952.6d3f78",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1970,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7fda72fb323b9977",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wtwooffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWtwo\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 420,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "32f4bd38b7dd947c"
            ]
        ]
    },
    {
        "id": "32f4bd38b7dd947c",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 420,
        "wires": [
            [
                "ca174fea6a29978a"
            ]
        ]
    },
    {
        "id": "ca174fea6a29978a",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wtwooffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 420,
        "wires": [
            [
                "37ad96a9.a550ea"
            ]
        ]
    },
    {
        "id": "c599388845a50874",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wthreeoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWthree\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 500,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "efe2d961262a8df3"
            ]
        ]
    },
    {
        "id": "efe2d961262a8df3",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 500,
        "wires": [
            [
                "3b2de9cdbb86301c"
            ]
        ]
    },
    {
        "id": "3b2de9cdbb86301c",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wthreeoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 500,
        "wires": [
            [
                "4763f80d.ed3f48"
            ]
        ]
    },
    {
        "id": "5007441d228d9454",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wfouroffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWfour\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 580,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "ffb9dc8a5f2bb3bb"
            ]
        ]
    },
    {
        "id": "ffb9dc8a5f2bb3bb",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 580,
        "wires": [
            [
                "856aa6a3d2da990d"
            ]
        ]
    },
    {
        "id": "856aa6a3d2da990d",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wfouroffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 580,
        "wires": [
            [
                "88dbb3f0.a2ee9"
            ]
        ]
    },
    {
        "id": "829c505570bd4a61",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wfiveoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWfive\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 660,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "abfca0160a7a1dfa"
            ]
        ]
    },
    {
        "id": "abfca0160a7a1dfa",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 660,
        "wires": [
            [
                "c2e6a879c630ed32"
            ]
        ]
    },
    {
        "id": "c2e6a879c630ed32",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wfiveoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 660,
        "wires": [
            [
                "5ce49e3185f26ef1"
            ]
        ]
    },
    {
        "id": "fed66f9ff8776208",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wsixoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWsix\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 740,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "e3f32994ead4d191"
            ]
        ]
    },
    {
        "id": "e3f32994ead4d191",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 740,
        "wires": [
            [
                "9fe4dd46673216ed"
            ]
        ]
    },
    {
        "id": "9fe4dd46673216ed",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wsixoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 740,
        "wires": [
            [
                "6b47e26eed9d0d78"
            ]
        ]
    },
    {
        "id": "7ae588fbac302eab",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"wsevenoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWseven\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 820,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "beff3b3f8a94f509"
            ]
        ]
    },
    {
        "id": "beff3b3f8a94f509",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 820,
        "wires": [
            [
                "5c96b17a6bef3f87"
            ]
        ]
    },
    {
        "id": "5c96b17a6bef3f87",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"wsevenoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 820,
        "wires": [
            [
                "8e18a3125e7bef2f"
            ]
        ]
    },
    {
        "id": "5d84f047f69dbdb1",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "auto off",
        "func": "var offauto = global.get(\"weightoffauto\")\n\nif(flow.get(\"update\") === true) {\n    return null\n}\n\nif (msg.payload === false) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload === true) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"NWeight\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 900,
        "wires": [
            [
                "cfbb76ac4a79bfd3"
            ],
            [
                "417c94c49c9594fd"
            ]
        ]
    },
    {
        "id": "417c94c49c9594fd",
        "type": "delay",
        "z": "f75bc952.6d3f78",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 900,
        "wires": [
            [
                "e1079dd8df2b2bb0"
            ]
        ]
    },
    {
        "id": "e1079dd8df2b2bb0",
        "type": "function",
        "z": "f75bc952.6d3f78",
        "name": "turn off",
        "func": "if (global.get(\"weightoffauto\") == 0) {\n    return null\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 900,
        "wires": [
            [
                "f9ebdac609b17044"
            ]
        ]
    },
    {
        "id": "9c260c0c01dcecee",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider1",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 440,
        "wires": [
            [
                "6c2a8f64017e95f3",
                "dd9af841e8537f3d",
                "354f1305d10a584d",
                "fe8125f01767e145"
            ]
        ]
    },
    {
        "id": "03b72c51139aa111",
        "type": "mqtt out",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1490,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7aa34d67ea7ecc9b",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "pkw/stat/PekawayMOTA/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 200,
        "wires": [
            [
                "e5a02eab99c6b590",
                "881aa4e4ef6ffa14"
            ]
        ]
    },
    {
        "id": "6c2a8f64017e95f3",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer0\", msg.payload);\nmsg.payload = \"pwm,0,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 440,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "b566912b7da01b3e",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider2",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 640,
        "wires": [
            [
                "da2c0b26d84f2a2d",
                "dd66774b350987e0",
                "0bfb1cd7131cb278",
                "d8b62a68bc265de2"
            ]
        ]
    },
    {
        "id": "457080d6f1a0a58c",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider3",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 800,
        "wires": [
            [
                "caaa10531049fe5d",
                "9e42cdd7cba31cdf",
                "fe6f612a27c5f195",
                "8de1a1aef6c90609"
            ]
        ]
    },
    {
        "id": "5a141498315d3639",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider4",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 960,
        "wires": [
            [
                "f1b82142a16f4543",
                "4a17c943df9897d7",
                "dd8357352639317c",
                "06edc5bd4d89025e"
            ]
        ]
    },
    {
        "id": "dea8372f33e5f952",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider5",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "54b399881ab7d9fa",
                "a1f69b735c441f4d",
                "8a80d7cb80b5b381",
                "569314ac11f42396"
            ]
        ]
    },
    {
        "id": "f0b6f11e944e3076",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider6",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "2a2ecc988fd5ea83",
                "dd33b8ee8534e829",
                "086c230238b039ea",
                "6e8f7f4b3480db6c"
            ]
        ]
    },
    {
        "id": "cbd699c76f36f433",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "slider7",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 770,
        "y": 1440,
        "wires": [
            [
                "1c5e825826a5afb0",
                "7f584139d7a5150d",
                "f74fddb26d9a21e2",
                "0436c052feb5f17b"
            ]
        ]
    },
    {
        "id": "6ef9730e8a65b9d4",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "slider 8",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "b39a769e1a5ab2d0",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 780,
        "y": 1600,
        "wires": [
            [
                "6d6cdcb3f0cdac39",
                "810a5c81ebba92a0",
                "75719df4a47f9cbf"
            ]
        ]
    },
    {
        "id": "da2c0b26d84f2a2d",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer1\", msg.payload);\nmsg.payload = \"pwm,1,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 640,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "caaa10531049fe5d",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer2\", msg.payload);\nmsg.payload = \"pwm,2,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 800,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "f1b82142a16f4543",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer3\", msg.payload);\nmsg.payload = \"pwm,3,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "54b399881ab7d9fa",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer4\", msg.payload);\nmsg.payload = \"pwm,4,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1120,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "2a2ecc988fd5ea83",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer5\", msg.payload);\nmsg.payload = \"pwm,5,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "1c5e825826a5afb0",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set topic & payload",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = parseInt(msg.payload) * 40 * pwm_max;\nglobal.set(\"dimmer6\", msg.payload);\nmsg.payload = \"pwm,6,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1440,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "6d6cdcb3f0cdac39",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "set topic & payload",
        "func": "msg.topic = \"pkw/cmnd/PekawayMOTA/driver15\";\nvar value = parseInt(msg.payload)*40;\nglobal.set(\"dimmer7\", msg.payload);\nmsg.payload = \"pwm,7,\" + value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1600,
        "wires": [
            [
                "03b72c51139aa111"
            ]
        ]
    },
    {
        "id": "5fd066e6350893df",
        "type": "ui_text",
        "z": "0e4ef1e0739bd351",
        "group": "b39a769e1a5ab2d0",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "latest result",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "dc90a07fb4700c47",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 1\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer0\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer0\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 440,
        "wires": [
            [
                "9c260c0c01dcecee"
            ],
            [
                "f59a188f5fb19d20"
            ]
        ]
    },
    {
        "id": "43dd7205c241a3f5",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 1",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "dc90a07fb4700c47"
            ]
        ]
    },
    {
        "id": "4b757023062e257b",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 2",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 640,
        "wires": [
            [
                "37eb738366935ad5"
            ]
        ]
    },
    {
        "id": "f3edfc57b6f71d1a",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 3",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 800,
        "wires": [
            [
                "e041d55d15579fe5"
            ]
        ]
    },
    {
        "id": "e6fe82539969ebf7",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 4 ",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 210,
        "y": 959,
        "wires": [
            [
                "1ec4b3939a4f7266"
            ]
        ]
    },
    {
        "id": "9d53c04cf5bc3125",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 5",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 213,
        "y": 1119,
        "wires": [
            [
                "8da332c8153c7ac2"
            ]
        ]
    },
    {
        "id": "469430488994e4dd",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 6",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 1280,
        "wires": [
            [
                "52afb017e342e15c"
            ]
        ]
    },
    {
        "id": "db0ebf95db08bcd7",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "label": "Dimmer 7",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "9075d1cce589eeb8"
            ]
        ]
    },
    {
        "id": "764650d357180c03",
        "type": "ui_text_input",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "label": "Dimmer 8",
        "tooltip": "",
        "group": "74ee510a9f24426c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 220,
        "y": 1600,
        "wires": [
            [
                "29994d369344757c"
            ]
        ]
    },
    {
        "id": "ee045ba769a41128",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer0 value/name",
        "links": [
            "ee271eb64628fc0a"
        ],
        "x": 255,
        "y": 520,
        "wires": [
            [
                "dc90a07fb4700c47"
            ]
        ]
    },
    {
        "id": "7916894a389bbd36",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer1 value/name",
        "links": [
            "c6b55fd009e69ef0"
        ],
        "x": 255,
        "y": 680,
        "wires": [
            [
                "37eb738366935ad5"
            ]
        ]
    },
    {
        "id": "7fcbf6231d98df8e",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer2 value/name",
        "links": [
            "325d9614f6237827"
        ],
        "x": 255,
        "y": 840,
        "wires": [
            [
                "e041d55d15579fe5"
            ]
        ]
    },
    {
        "id": "264c1e36b77d07f6",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer3 value/name",
        "links": [
            "31f94e298e95c2b4"
        ],
        "x": 255,
        "y": 1000,
        "wires": [
            [
                "1ec4b3939a4f7266"
            ]
        ]
    },
    {
        "id": "d2e1bd3b20beb5d3",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer4 value/name",
        "links": [
            "9d8da021cba66085"
        ],
        "x": 255,
        "y": 1160,
        "wires": [
            [
                "8da332c8153c7ac2"
            ]
        ]
    },
    {
        "id": "1ec7e2b03700d11d",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer5 value/name",
        "links": [
            "3b589471ad93efe2"
        ],
        "x": 255,
        "y": 1320,
        "wires": [
            [
                "52afb017e342e15c"
            ]
        ]
    },
    {
        "id": "344ccfe7251b8276",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer6 value/name",
        "links": [
            "6ce111f8c4860e01"
        ],
        "x": 255,
        "y": 1480,
        "wires": [
            [
                "9075d1cce589eeb8"
            ]
        ]
    },
    {
        "id": "d8546b510132caa3",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "dimmer7 value/name",
        "links": [
            "fa4a585a780c2772"
        ],
        "x": 255,
        "y": 1640,
        "wires": [
            [
                "29994d369344757c"
            ]
        ]
    },
    {
        "id": "f59a188f5fb19d20",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer0",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "dd9af841e8537f3d",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer0",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "dd66774b350987e0",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9e42cdd7cba31cdf",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4a17c943df9897d7",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "a1f69b735c441f4d",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "dd33b8ee8534e829",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7f584139d7a5150d",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "810a5c81ebba92a0",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "filename": "pekaway/dimmer7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 990,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "91dc4fb7d11ea590",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer0/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "fa2d2795788551ac"
            ]
        ]
    },
    {
        "id": "fa2d2795788551ac",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 360,
        "wires": [
            [
                "f25ae684ce928784"
            ]
        ]
    },
    {
        "id": "f25ae684ce928784",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer0\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nif (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer0\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer0\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 360,
        "wires": [
            [
                "dd9af841e8537f3d"
            ],
            [
                "6c2a8f64017e95f3",
                "9c260c0c01dcecee"
            ]
        ]
    },
    {
        "id": "e5a02eab99c6b590",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "pass status to homebridge",
        "func": "if (msg.payload.includes('\"PIN\":0')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer0/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer0/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer0/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":1')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer1/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer1/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer1/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":2')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer2/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer2/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer2/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":3')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer3/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer3/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer3/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":4')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer4/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer4/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer4/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":5')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer5/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer5/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer5/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":6')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer6/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer6/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer6/state\"\n        msg.payload = false\n    }\n    return msg\n}\nif (msg.payload.includes('\"PIN\":7')) {\n    msg.payload = msg.payload.substr(msg.payload.length-6, msg.payload.length-3)\n    msg.payload = msg.payload.replace(/\\:/g,\"\")\n    msg.payload = msg.payload.replace(/\\}/g,\"\")\n    msg.payload = msg.payload.replace(/\\\"/g,\"\")\n    msg.payload = msg.payload.replace(/M/g,\"\")\n    msg.payload = parseInt(msg.payload)/40\n    msg.topic = \"pkw/stat/PekawayMOTA/dimmer7/bri\"\n    node.send(msg)\n    if (msg.payload > 0) {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer7/state\"\n        msg.payload = true\n    }\n    else {\n        msg.topic = \"pkw/stat/PekawayMOTA/dimmer7/state\"\n        msg.payload = false\n    }\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 240,
        "wires": [
            [
                "fe094bacb02b1011"
            ]
        ]
    },
    {
        "id": "fe094bacb02b1011",
        "type": "mqtt out",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "57ebac3a689a8935",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer0/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "f25ae684ce928784"
            ]
        ]
    },
    {
        "id": "f8802d1cacb574d7",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "37eb738366935ad5",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 2\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer1\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer1\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "b566912b7da01b3e"
            ],
            [
                "f8802d1cacb574d7"
            ]
        ]
    },
    {
        "id": "3135a210bcdee366",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer1/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 600,
        "wires": [
            [
                "6d38f291bcfcac44"
            ]
        ]
    },
    {
        "id": "6d38f291bcfcac44",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 600,
        "wires": [
            [
                "23219f21989173ca"
            ]
        ]
    },
    {
        "id": "23219f21989173ca",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer1\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer1\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer1\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 600,
        "wires": [
            [
                "dd66774b350987e0"
            ],
            [
                "b566912b7da01b3e",
                "da2c0b26d84f2a2d"
            ]
        ]
    },
    {
        "id": "69e3d439169d0805",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer1/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "23219f21989173ca"
            ]
        ]
    },
    {
        "id": "0263faba25447470",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 800,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "e041d55d15579fe5",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 3\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer2\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer2\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 800,
        "wires": [
            [
                "457080d6f1a0a58c"
            ],
            [
                "0263faba25447470"
            ]
        ]
    },
    {
        "id": "498454d273a5a6de",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer2/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 760,
        "wires": [
            [
                "585436747c5e37f5"
            ]
        ]
    },
    {
        "id": "585436747c5e37f5",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "a944344cd2ae0f88"
            ]
        ]
    },
    {
        "id": "a944344cd2ae0f88",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer2\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer2\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer2\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 760,
        "wires": [
            [
                "9e42cdd7cba31cdf"
            ],
            [
                "457080d6f1a0a58c",
                "caaa10531049fe5d"
            ]
        ]
    },
    {
        "id": "432fab94679b5adf",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer2/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 720,
        "wires": [
            [
                "a944344cd2ae0f88"
            ]
        ]
    },
    {
        "id": "a6fc3c879c121d63",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1ec4b3939a4f7266",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 4\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer3\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer3\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 960,
        "wires": [
            [
                "5a141498315d3639"
            ],
            [
                "a6fc3c879c121d63"
            ]
        ]
    },
    {
        "id": "6b59f852c0d264ad",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer3/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 920,
        "wires": [
            [
                "de781a1bda1488ba"
            ]
        ]
    },
    {
        "id": "de781a1bda1488ba",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 920,
        "wires": [
            [
                "3f3ddc894cbfad30"
            ]
        ]
    },
    {
        "id": "d40f50b7450a98ea",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer3/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 880,
        "wires": [
            [
                "3f3ddc894cbfad30"
            ]
        ]
    },
    {
        "id": "45d941ecdde18d6e",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8da332c8153c7ac2",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 5\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer4\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer4\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1120,
        "wires": [
            [
                "dea8372f33e5f952"
            ],
            [
                "45d941ecdde18d6e"
            ]
        ]
    },
    {
        "id": "522b9341255ef4f2",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer4/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "3f3771168f9586df"
            ]
        ]
    },
    {
        "id": "3f3771168f9586df",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "9c2b33f73d19526b"
            ]
        ]
    },
    {
        "id": "9c2b33f73d19526b",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer4\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer4\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer4\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1080,
        "wires": [
            [
                "a1f69b735c441f4d"
            ],
            [
                "54b399881ab7d9fa",
                "dea8372f33e5f952"
            ]
        ]
    },
    {
        "id": "f8de837fa6747cf8",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer4/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "9c2b33f73d19526b"
            ]
        ]
    },
    {
        "id": "00eaa3337673ce9d",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "3a85ba3333b068bf",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer5/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "643f4062bbc6ec25"
            ]
        ]
    },
    {
        "id": "643f4062bbc6ec25",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1240,
        "wires": [
            [
                "1bf8d0e5bde8f6ba"
            ]
        ]
    },
    {
        "id": "1bf8d0e5bde8f6ba",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer5\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer5\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer5\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1240,
        "wires": [
            [
                "dd33b8ee8534e829"
            ],
            [
                "f0b6f11e944e3076",
                "2a2ecc988fd5ea83"
            ]
        ]
    },
    {
        "id": "d1c902a897756c25",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer5/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "1bf8d0e5bde8f6ba"
            ]
        ]
    },
    {
        "id": "52afb017e342e15c",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 6\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer5\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer5\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1280,
        "wires": [
            [
                "f0b6f11e944e3076"
            ],
            [
                "00eaa3337673ce9d"
            ]
        ]
    },
    {
        "id": "a0315773dba26480",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/Ndimmer6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "9075d1cce589eeb8",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 7\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer6\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer6\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1440,
        "wires": [
            [
                "cbd699c76f36f433"
            ],
            [
                "a0315773dba26480"
            ]
        ]
    },
    {
        "id": "4fb1a15b57b2c686",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer6/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1400,
        "wires": [
            [
                "5b8dd426ec87e06d"
            ]
        ]
    },
    {
        "id": "5b8dd426ec87e06d",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1400,
        "wires": [
            [
                "2e200ccc32c1927d"
            ]
        ]
    },
    {
        "id": "2e200ccc32c1927d",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer6\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer6\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer6\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "7f584139d7a5150d"
            ],
            [
                "1c5e825826a5afb0",
                "cbd699c76f36f433"
            ]
        ]
    },
    {
        "id": "5961c12e013d082c",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "topic": "home/cmnd/dimmer6/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "2e200ccc32c1927d"
            ]
        ]
    },
    {
        "id": "0da23b97496056a2",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "filename": "pekaway/Ndimmer7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 790,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "47b56cef9a075aab",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "topic": "home/cmnd/dimmer7/driver15",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1560,
        "wires": [
            [
                "6f0cfba7eb106935"
            ]
        ]
    },
    {
        "id": "6f0cfba7eb106935",
        "type": "change",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "true=100/false=0",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "100",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "08773b98bc6f414a"
            ]
        ]
    },
    {
        "id": "08773b98bc6f414a",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer7\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer7\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer7\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1560,
        "wires": [
            [
                "810a5c81ebba92a0"
            ],
            [
                "6ef9730e8a65b9d4",
                "6d6cdcb3f0cdac39"
            ]
        ]
    },
    {
        "id": "1e640728616f7609",
        "type": "mqtt in",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "topic": "home/cmnd/dimmer7/driver15/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1520,
        "wires": [
            [
                "08773b98bc6f414a"
            ]
        ]
    },
    {
        "id": "29994d369344757c",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "set label",
        "func": "var label = (msg.payload.trim() == \"\" ? \"Dimmer 8\" : msg.payload.trim())\nmsg.payload = global.get(\"dimmer7\") -1;\nmsg.label = label;\nglobal.set(\"label\", label);\nnode.send(msg);\nmsg.payload = msg.payload+1;\nnode.send([msg, null]);\nmsg.payload = label;\nglobal.set(\"Ndimmer7\", label)\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1600,
        "wires": [
            [
                "6ef9730e8a65b9d4"
            ],
            [
                "0da23b97496056a2"
            ]
        ]
    },
    {
        "id": "e773960566f210ce",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "return results in txt field and pass through to homebridge",
        "info": "",
        "x": 240,
        "y": 160,
        "wires": []
    },
    {
        "id": "a0b9958b40f371fb",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "get brightness when set in homebridge",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "89ee0e0fe31e5187",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "get on/off when set in homebridge",
        "info": "",
        "x": 180,
        "y": 320,
        "wires": []
    },
    {
        "id": "e7109f047deea9c4",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "get name when set in dashboard/api",
        "info": "",
        "x": 180,
        "y": 400,
        "wires": []
    },
    {
        "id": "39f176e02316ae01",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "get state/name on boot",
        "info": "",
        "x": 200,
        "y": 480,
        "wires": []
    },
    {
        "id": "90a3ed47115ff85c",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "save state",
        "info": "",
        "x": 960,
        "y": 400,
        "wires": []
    },
    {
        "id": "36fc30c1a278d924",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "save name",
        "info": "",
        "x": 740,
        "y": 480,
        "wires": []
    },
    {
        "id": "db6378a901d09300",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "set state in dashboard",
        "info": "",
        "x": 740,
        "y": 400,
        "wires": []
    },
    {
        "id": "9ab427eb6805d30a",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set ping cmd",
        "func": "var debugmode = global.get(\"dimmerdebugmode\")\n\nif (msg.payload == \"false\") {\n    return null\n}\nelse if (debugmode == false) {\n    return null \n}\nelse if (msg.payload == \"true\" && debugmode == true) {\n    if (global.get(\"dimmerwatchdogtargetip\")!= \"Target ip invalid!\") {\n        msg.payload = 'ping ' + global.get(\"dimmerwatchdogtargetip\").trim() + ' -c 3'\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 80,
        "wires": [
            [
                "c4990b328bdbfd2f"
            ]
        ]
    },
    {
        "id": "c4990b328bdbfd2f",
        "type": "exec",
        "z": "0e4ef1e0739bd351",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "6b1b85d735036777"
            ],
            [],
            []
        ]
    },
    {
        "id": "6b1b85d735036777",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set result",
        "func": "if (msg.payload.includes(\"100% packet loss\")) {\n    msg.payload = \"Dimmer target IP unreachable!\"\n    return msg;\n}\nelse {\n    msg.payload = \"watching target ip: \" + global.get(\"dimmerwatchdogtargetip\")\n    return msg\n}\nif (msg.rc.message.includes(\"Command failed\")) {\n    msg.payload = \"Dimmer target IP unreachable!\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 80,
        "wires": [
            [
                "881aa4e4ef6ffa14"
            ]
        ]
    },
    {
        "id": "e3d4d8e4cfe68d0e",
        "type": "inject",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "190",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "672071fdbcc223c1"
            ]
        ]
    },
    {
        "id": "672071fdbcc223c1",
        "type": "file in",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmersettings",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "9ab427eb6805d30a"
            ]
        ]
    },
    {
        "id": "34e883cdeb663b1a",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "Check watchdog dimmer target IP address",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "91150cc0e7055fbc",
        "type": "inject",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "e66d52c74d42ac20"
            ]
        ]
    },
    {
        "id": "e66d52c74d42ac20",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "clear text field on startup",
        "func": "msg.payload = \"\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "881aa4e4ef6ffa14"
            ]
        ]
    },
    {
        "id": "881aa4e4ef6ffa14",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "check debugmode",
        "func": "if (global.get(\"dimmerdebugmode\") == false) {\n    msg.payload = \" \" \n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "5fd066e6350893df"
            ]
        ]
    },
    {
        "id": "a831be4ffcea5f62",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmerdebudmode",
        "links": [
            "c94990f1d952fab0"
        ],
        "x": 475,
        "y": 180,
        "wires": [
            [
                "881aa4e4ef6ffa14"
            ]
        ]
    },
    {
        "id": "c66a52b7774be47b",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer0",
        "links": [
            "c26a4b876c4901c9"
        ],
        "x": 95,
        "y": 440,
        "wires": [
            [
                "43dd7205c241a3f5"
            ]
        ]
    },
    {
        "id": "4086c55304ba32ae",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer1",
        "links": [
            "c9ed3e060355439a"
        ],
        "x": 95,
        "y": 640,
        "wires": [
            [
                "4b757023062e257b"
            ]
        ]
    },
    {
        "id": "d65b3469341a8601",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer2",
        "links": [
            "130f980449b663c9"
        ],
        "x": 95,
        "y": 800,
        "wires": [
            [
                "f3edfc57b6f71d1a"
            ]
        ]
    },
    {
        "id": "38fd2c83faf60559",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer3",
        "links": [
            "b84b7db4506f8198"
        ],
        "x": 95,
        "y": 960,
        "wires": [
            [
                "e6fe82539969ebf7"
            ]
        ]
    },
    {
        "id": "24787a551c032712",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer4",
        "links": [
            "b84c1e8756a08551"
        ],
        "x": 95,
        "y": 1120,
        "wires": [
            [
                "9d53c04cf5bc3125"
            ]
        ]
    },
    {
        "id": "702959d76f03f238",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer5",
        "links": [
            "058bad9790e5e006"
        ],
        "x": 95,
        "y": 1280,
        "wires": [
            [
                "469430488994e4dd"
            ]
        ]
    },
    {
        "id": "32079052da4028df",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "Ndimmer6",
        "links": [
            "cd383f78ea1aa841"
        ],
        "x": 95,
        "y": 1440,
        "wires": [
            [
                "db0ebf95db08bcd7"
            ]
        ]
    },
    {
        "id": "34ce2bd2a0b794e4",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "Ndimmer7",
        "links": [
            "d9a0767fc8e50b76"
        ],
        "x": 95,
        "y": 1600,
        "wires": [
            [
                "764650d357180c03"
            ]
        ]
    },
    {
        "id": "a4c0fd66546e7864",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer0",
        "links": [
            "5c11b83dee20395c",
            "91808d95f9b1141d",
            "dbb87fff6ea8f3e8",
            "f9c1cd909de58d36",
            "d00a0a9ac74bb361"
        ],
        "x": 605,
        "y": 520,
        "wires": [
            [
                "9c260c0c01dcecee",
                "6c2a8f64017e95f3",
                "dd9af841e8537f3d"
            ]
        ]
    },
    {
        "id": "1db51e9f7fe5ebea",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer1",
        "links": [
            "943b6d53caa983d3",
            "128be73c1e6d68d2",
            "3bba049b6f26a410",
            "a3dd19b5badb07c9",
            "9eba5e6e51323f79",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 680,
        "wires": [
            [
                "b566912b7da01b3e",
                "dd66774b350987e0",
                "da2c0b26d84f2a2d"
            ]
        ]
    },
    {
        "id": "09bf8b5862924eed",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer2",
        "links": [
            "d237df5591cd888b",
            "e8c60068e519caef",
            "eec0dda652b1fbb7",
            "e292f68d4bc040e6",
            "64198e9c23b17369",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 840,
        "wires": [
            [
                "457080d6f1a0a58c",
                "9e42cdd7cba31cdf",
                "caaa10531049fe5d"
            ]
        ]
    },
    {
        "id": "4896e98db77c2f91",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer3",
        "links": [
            "59f8057dce575916",
            "b8e75a244feab1d4",
            "ef58558591124d4e",
            "df322858b23ce7c7",
            "c7040dac22c555ec",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 1000,
        "wires": [
            [
                "5a141498315d3639",
                "4a17c943df9897d7",
                "f1b82142a16f4543"
            ]
        ]
    },
    {
        "id": "77683cc8a2a2dd71",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer4",
        "links": [
            "d34f3ab8abe848f6",
            "d436283fe6908fde",
            "d5ef14dfa42604fb",
            "bc57e4fa4ee43c5c",
            "74b52f515245eb5e",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 1160,
        "wires": [
            [
                "dea8372f33e5f952",
                "a1f69b735c441f4d",
                "54b399881ab7d9fa"
            ]
        ]
    },
    {
        "id": "2530d817d07d6ef2",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer5",
        "links": [
            "439c5c6219f2ad26",
            "c89dd7f87ffd430f",
            "8bd30e926d3f1783",
            "750c43ab809b527c",
            "e8b08d280f05a340",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 1320,
        "wires": [
            [
                "dd33b8ee8534e829",
                "2a2ecc988fd5ea83",
                "f0b6f11e944e3076"
            ]
        ]
    },
    {
        "id": "d4e73c36b453526a",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer6",
        "links": [
            "7cbbc3bbc7cca512",
            "228da6a60379150a",
            "6292378aebce9bb0",
            "d0c23cf26439ba6f",
            "2ea5dd729742663c",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 1480,
        "wires": [
            [
                "cbd699c76f36f433",
                "7f584139d7a5150d",
                "1c5e825826a5afb0"
            ]
        ]
    },
    {
        "id": "bd1237489ec8e5f3",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "dimmer7",
        "links": [
            "fa5e454b2672161d",
            "9d719ab8a681ff8d",
            "7a2b0a26731fc40f",
            "45ccf0c7b6368662",
            "ab6fb532c86d1b61",
            "d00a0a9ac74bb361"
        ],
        "x": 635,
        "y": 1640,
        "wires": [
            [
                "6ef9730e8a65b9d4",
                "6d6cdcb3f0cdac39",
                "810a5c81ebba92a0"
            ]
        ]
    },
    {
        "id": "aa291ad2754c7c61",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "get state from api",
        "info": "",
        "x": 580,
        "y": 480,
        "wires": []
    },
    {
        "id": "3f4395684680c0c7",
        "type": "ui_button",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "group": "74ee510a9f24426c",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update Dimmer Names",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1760,
        "wires": [
            [
                "8d2726e6672c69f0"
            ]
        ]
    },
    {
        "id": "8d2726e6672c69f0",
        "type": "link out",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer pekaway display",
        "links": [
            "9aabba67484ba09a",
            "425105082da3d027"
        ],
        "x": 295,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a049e25f2ccf9097",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "update names in pekaway display",
        "info": "",
        "x": 170,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b0d2c0be8bae9de3",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "debug msg mosfetboard",
        "info": "",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "cd66d0f970af0fe9",
        "type": "ui_ui_control",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "events": "change",
        "x": 520,
        "y": 1760,
        "wires": [
            [
                "85b87e5109e16cc7"
            ]
        ]
    },
    {
        "id": "85b87e5109e16cc7",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "check tab",
        "func": "if (msg.payload == \"change\" && msg.name === \"Switches\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1760,
        "wires": [
            [
                "f5a2124f9c3ff250"
            ]
        ]
    },
    {
        "id": "229737f09958d753",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "update dimmer labels when changing to tab \"Switches\"",
        "info": "",
        "x": 660,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f5a2124f9c3ff250",
        "type": "link out",
        "z": "0e4ef1e0739bd351",
        "name": "change tab 1 dimmer names",
        "mode": "link",
        "links": [
            "4c283893c7f0d26d",
            "2218e25211ded319"
        ],
        "x": 815,
        "y": 1760,
        "wires": []
    },
    {
        "id": "0bfb1cd7131cb278",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dtwooffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer1\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 560,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "545757a37f07c6db"
            ]
        ]
    },
    {
        "id": "545757a37f07c6db",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 560,
        "wires": [
            [
                "350cc103d9513627"
            ]
        ]
    },
    {
        "id": "350cc103d9513627",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dtwooffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer1\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "b566912b7da01b3e"
            ]
        ]
    },
    {
        "id": "354f1305d10a584d",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"doneoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n\nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer0\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 320,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "11ca7492470d67a3"
            ]
        ]
    },
    {
        "id": "11ca7492470d67a3",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "77f46d7148f4e9d3"
            ]
        ]
    },
    {
        "id": "77f46d7148f4e9d3",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"doneoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer0\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "9c260c0c01dcecee"
            ]
        ]
    },
    {
        "id": "dd4df6eea9463e7d",
        "type": "ui_toast",
        "z": "0e4ef1e0739bd351",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "auto off",
        "x": 1500,
        "y": 980,
        "wires": []
    },
    {
        "id": "fe6f612a27c5f195",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dthreeoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer2\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "1e6d3c0453de73ea"
            ]
        ]
    },
    {
        "id": "1e6d3c0453de73ea",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "7a824e5117f251eb"
            ]
        ]
    },
    {
        "id": "7a824e5117f251eb",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dthreeoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer2\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "457080d6f1a0a58c"
            ]
        ]
    },
    {
        "id": "dd8357352639317c",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dfouroffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer3\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 880,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "d9ba974a40b153d9"
            ]
        ]
    },
    {
        "id": "d9ba974a40b153d9",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 880,
        "wires": [
            [
                "77268c3ff5d5ab2b"
            ]
        ]
    },
    {
        "id": "77268c3ff5d5ab2b",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dfouroffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer3\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "5a141498315d3639"
            ]
        ]
    },
    {
        "id": "8a80d7cb80b5b381",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dfiveoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer4\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1040,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "33211d3baf3d1e48"
            ]
        ]
    },
    {
        "id": "33211d3baf3d1e48",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 1040,
        "wires": [
            [
                "9934d71668639798"
            ]
        ]
    },
    {
        "id": "9934d71668639798",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dfiveoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer4\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1040,
        "wires": [
            [
                "dea8372f33e5f952"
            ]
        ]
    },
    {
        "id": "086c230238b039ea",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dsixoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer5\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1200,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "29ed9634fd2d2969"
            ]
        ]
    },
    {
        "id": "29ed9634fd2d2969",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 1200,
        "wires": [
            [
                "333fe6f89746b733"
            ]
        ]
    },
    {
        "id": "333fe6f89746b733",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dsixoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer5\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1200,
        "wires": [
            [
                "f0b6f11e944e3076"
            ]
        ]
    },
    {
        "id": "f74fddb26d9a21e2",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "auto off",
        "func": "var offauto = global.get(\"dsevenoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer6\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1360,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "2611d858482c399a"
            ]
        ]
    },
    {
        "id": "2611d858482c399a",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 1360,
        "wires": [
            [
                "10d1782a44749d7b"
            ]
        ]
    },
    {
        "id": "10d1782a44749d7b",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "turn off",
        "func": "if (global.get(\"dsevenoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer6\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1360,
        "wires": [
            [
                "cbd699c76f36f433"
            ]
        ]
    },
    {
        "id": "75719df4a47f9cbf",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "auto off",
        "func": "var offauto = global.get(\"deightoffauto\")\n\nif (global.get(\"hb_sync\") == true) { return null }\n    \nif (msg.payload == 0) {\n    msg.reset = true\n    //msg.payload = \"\"\n    return [null, msg]\n}\n\nelse if (msg.payload >= 0) {\n    msg.reset = true\n    //delete msg.payload\n    node.send([null, msg])\n    \n    if (offauto > 0) {\n        msg.delay = offauto * 60000\n        delete msg.reset\n        msg.payload = global.get(\"Ndimmer7\") +\" will turn off in \" + offauto + \" min\"\n        return [msg, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1520,
        "wires": [
            [
                "dd4df6eea9463e7d"
            ],
            [
                "d7ebecb9a53335fc"
            ]
        ]
    },
    {
        "id": "d7ebecb9a53335fc",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 1520,
        "wires": [
            [
                "4a5ad837ed41b70b"
            ]
        ]
    },
    {
        "id": "4a5ad837ed41b70b",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "d": true,
        "name": "turn off",
        "func": "if (global.get(\"deightoffauto\") == 0) {\n    return null\n}\nmsg.payload = 0;\nmsg.label = global.get(\"Ndimmer7\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1520,
        "wires": [
            [
                "6ef9730e8a65b9d4"
            ]
        ]
    },
    {
        "id": "3f3ddc894cbfad30",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "filter for homebridge/pekaway",
        "func": "var aus = false\nif (msg.payload.includes(\"brightness\")){\n    msg.payload = msg.payload.substr(msg.payload.length-4, msg.payload.length-1);\n    msg.payload = msg.payload.replace(/\\:/g,\"\");\n    msg.payload = msg.payload.replace(/\\\"/g,\"\");\n    global.set(\"dimmer3\", parseInt(msg.payload.replace(/\\}/g,\"\")));\n}\nelse if (msg.payload == \"0\" ) {\n    aus = true;\n}\n\nif (aus == false) {\n    msg.payload = global.get(\"dimmer3\")\n}\nelse if (aus == true) {\n    msg.payload = 0\n}\nvar label = global.get(\"Ndimmer3\");\nmsg.label = label;\nnode.send([null,msg]);\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8efeb6afa4745edd",
        "type": "PCA9685 out",
        "z": "0e4ef1e0739bd351",
        "name": "PCA9865 - 0x055",
        "pca9685": "7b52454628793b62",
        "channel": "",
        "payload": "",
        "unit": "percent",
        "onStep": "0",
        "x": 1990,
        "y": 940,
        "wires": []
    },
    {
        "id": "fe8125f01767e145",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 0\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "d8b62a68bc265de2",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 1\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "8de1a1aef6c90609",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 2\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "06edc5bd4d89025e",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 3\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "569314ac11f42396",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 4\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1160,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "6e8f7f4b3480db6c",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 5\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "0436c052feb5f17b",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set channel for PCA9865",
        "func": "if (msg.hasOwnProperty(\"updatelabel\")) {\n    return null\n}\nmsg.channel = 6\nlet pwm_max = global.get(\"dimmer_maxpercent\") / 100\nlet value = msg.payload * pwm_max\nflow.set(\"pca_value\", value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1480,
        "wires": [
            [
                "7c90db57b55f189d"
            ]
        ]
    },
    {
        "id": "ad5ae2ebb1df3809",
        "type": "exec",
        "z": "0e4ef1e0739bd351",
        "command": "i2cdetect -y 1 | grep -o 55",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check i2c",
        "x": 1640,
        "y": 940,
        "wires": [
            [
                "fbc3353272452008"
            ],
            [],
            []
        ]
    },
    {
        "id": "fbc3353272452008",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "check for 0x055",
        "func": "if (msg.payload.includes(\"55\")) {\n    msg.payload = flow.get(\"pca_value\")\n    return msg\n}\nelse {\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 940,
        "wires": [
            [
                "8efeb6afa4745edd"
            ]
        ]
    },
    {
        "id": "7c90db57b55f189d",
        "type": "delay",
        "z": "0e4ef1e0739bd351",
        "name": "10msg/s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1500,
        "y": 940,
        "wires": [
            [
                "ad5ae2ebb1df3809"
            ]
        ]
    },
    {
        "id": "b9ba78a9983f5ff5",
        "type": "ui_slider",
        "z": "0e4ef1e0739bd351",
        "name": "max pwm",
        "label": "PWM max %",
        "tooltip": "set pwm maximum output as overvoltage protection",
        "group": "74ee510a9f24426c",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "10",
        "max": "100",
        "step": "10",
        "className": "",
        "x": 280,
        "y": 1860,
        "wires": [
            [
                "2a3a6f82800fcbf9"
            ]
        ]
    },
    {
        "id": "2a3a6f82800fcbf9",
        "type": "function",
        "z": "0e4ef1e0739bd351",
        "name": "set global",
        "func": "global.set(\"dimmer_maxpercent\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "57263b4250953e13"
            ]
        ]
    },
    {
        "id": "57263b4250953e13",
        "type": "file",
        "z": "0e4ef1e0739bd351",
        "name": "",
        "filename": "pekaway/dimmer_maxpercent",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "12ca99015ff02121",
        "type": "link in",
        "z": "0e4ef1e0739bd351",
        "name": "dimmer maxpercent",
        "links": [
            "509babed283534d1"
        ],
        "x": 165,
        "y": 1860,
        "wires": [
            [
                "b9ba78a9983f5ff5"
            ]
        ]
    },
    {
        "id": "db36cd88420f19c5",
        "type": "comment",
        "z": "0e4ef1e0739bd351",
        "name": "set max_pwm in % as overvoltage protection",
        "info": "",
        "x": 330,
        "y": 1820,
        "wires": []
    },
    {
        "id": "909a94ea.447b88",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "fc1ae8662133fe4a",
                "88d973764ad2a822"
            ]
        ]
    },
    {
        "id": "1160057d.705eeb",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nb16  =>cell1,\nb16  =>cell2,\nb16  =>cell3,\nb16 =>cell4,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb8 =>temp,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb8 =>voltbatt,\nb16 =>amps,\nb16 =>soc,\nb16 =>maxvolt,\nb16 =>minvolt,\nx16,\nx16,\nb16=>status,\nb16 =>capacity,\nx8,\nx8,\nx8,\nx8,\nx16,\nx16,\nx16,\nx16,\nx16,\nb16=>power,\nx8\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "dbf35eb4.372c5"
            ]
        ]
    },
    {
        "id": "dbf35eb4.372c5",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "//battery\nglobal.set(\"BMSamps\",(msg.payload.amps-30000)/10);\nglobal.set(\"BMScapWH\",msg.payload.capacity)\nglobal.set(\"BMScap\",((msg.payload.capacity/13.4).toFixed(2)));//(msg.payload.voltbatt/10)).toFixed(2));\nglobal.set(\"BMSvolt\",msg.payload.voltbatt/10)\nglobal.set(\"BMStemp\",msg.payload.temp-40);\nglobal.set(\"BMScell1\",msg.payload.cell1);\nglobal.set(\"BMScell2\",msg.payload.cell2);\nglobal.set(\"BMScell3\",msg.payload.cell3);\nglobal.set(\"BMScell4\",msg.payload.cell4);\nglobal.set(\"BMSsoc\",msg.payload.soc/10);\nvar power = (msg.payload.amps-30000) * msg.payload.voltbatt;\npower = power/100;\nglobal.set(\"BMSpower\",power);\nglobal.set(\"maxvolt\",msg.payload.maxvolt);\nglobal.set(\"minvolt\",msg.payload.minvolt);\n\nglobal.set(\"BATTvolt\",msg.payload.voltbatt/10);\nglobal.set(\"BATTamps\",(msg.payload.amps-30000)/10);\nglobal.set(\"BATTsoc\",msg.payload.soc/10);\n\n\nvar BMSmaxvolt = global.get(\"BMSvolt\")\nvar BMSminvolt = global.get(\"BMSvolt\")\nvar BMSmaxcap = global.get(\"BMScapWH\")\n\nif (global.get(\"BMSmaxvolt\") == \"wait\" || global.get(\"BMSmaxvolthighest\") == \"wait\" || BMSmaxvolt > global.get(\"BMSmaxvolthighest\")) {\n    global.set(\"BMSmaxvolthighest\", BMSmaxvolt)\n    global.set(\"BMSmaxvolt\", BMSmaxvolt.toString())\n}\nif (global.get(\"BMSminvolt\") == \"wait\" || global.get(\"BMSminvoltlowest\") == \"wait\" || BMSminvolt < global.get(\"BMSminvoltlowest\")) {\n    global.set(\"BMSminvoltlowest\", BMSminvolt)\n    global.set(\"BMSminvolt\", BMSminvolt.toString())\n}\nif (global.get(\"BMScapWH\") == \"wait\" || global.get(\"BMSmaxcaphighest\") == \"wait\" || BMSmaxcap > global.get(\"BMSmaxcaphighest\")) {\n    global.set(\"BMSmaxcaphighest\", BMSmaxcap)\n    global.set(\"BMSmaxcap\", BMSmaxcap.toString())\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2d26b1aa.1bfd2e",
        "type": "link in",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "ef216a53.2d9e48",
            "b2235f55.a779e",
            "c4c0520c.8248a",
            "5fee87d7.996858",
            "528c91f1.5a81c",
            "1075aabcf05c3d06",
            "75a7f3d3f2d011b8",
            "0d49bdccad387007",
            "1e7fd101697f754f",
            "3a8b9c90549b714b",
            "85448bbe22d17a01",
            "edf12ff1c72dca2a",
            "fefc4df686ce2777",
            "5e3c9230cc132f6c",
            "7d74a95da2ff9101",
            "54b279a4e8344804",
            "98110327a358491b"
        ],
        "x": 195,
        "y": 180,
        "wires": [
            [
                "b75704e7.a0ac68",
                "59270363.64dbac"
            ]
        ]
    },
    {
        "id": "b75704e7.a0ac68",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "check uart setting Bluetooth",
        "func": " if(global.get(\"multiuart1\")==1 || global.get(\"usb1uart\")==1 || global.get(\"usb2uart\")==1 || global.get(\"multiuart2\")==1 || global.get(\"usb3uart\")==1 || global.get(\"usb4uart\")==1) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "1160057d.705eeb"
            ]
        ]
    },
    {
        "id": "b8787c31.feb24",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x8C,\n0x0D,\n0x48,\n0x24,\n0x5F\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 800,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "b7b69ee3.e3d9e",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "set 3,4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "b8787c31.feb24"
            ]
        ]
    },
    {
        "id": "47e8c743.53c8a8",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x8C,\n0x0E,\n0x42,\n0xDF,\n0xD3\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 840,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "ef98e792.5d87d8",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "3,65",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "47e8c743.53c8a8"
            ]
        ]
    },
    {
        "id": "c78c255c.5f7ed8",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x8C,\n0x0F,\n0x3C,\n0x5E,\n0x63\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 880,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "689a57db.a23b48",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "3,9",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "c78c255c.5f7ed8"
            ]
        ]
    },
    {
        "id": "94882666.6e6698",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x07,\n0xD0,\n0x98,\n0x2D\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 920,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "a4cb7818.8a1be8",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "200a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 920,
        "wires": [
            [
                "94882666.6e6698"
            ]
        ]
    },
    {
        "id": "a1cb66e2.966368",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x05,\n0xDC,\n0x99,\n0x48\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "ee240523.f21828",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "150a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 960,
        "wires": [
            [
                "a1cb66e2.966368"
            ]
        ]
    },
    {
        "id": "6a97fad7.8614a4",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x0A,\n0xF0,\n0x9D,\n0x65\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//0E42 ->3650miliVolt ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "dc5bfe55.a971d",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "280a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1000,
        "wires": [
            [
                "6a97fad7.8614a4"
            ]
        ]
    },
    {
        "id": "39c76b7e.898a84",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x0B,\n0xB8,\n0x9C,\n0xC3\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "117aaaba.54c8b5",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "300a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1040,
        "wires": [
            [
                "39c76b7e.898a84"
            ]
        ]
    },
    {
        "id": "f8649162.94241",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x0E,\n0xE8,\n0x9B,\n0x3F\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1080,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "2ad9da00.592eb6",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "100a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "f8649162.94241"
            ]
        ]
    },
    {
        "id": "1f1a5d82.422472",
        "type": "comment",
        "z": "d916bf99.e1981",
        "name": "for testing purposes",
        "info": "https://crccalc.com/\n\nmodus -> bytes used from last to first",
        "x": 190,
        "y": 760,
        "wires": []
    },
    {
        "id": "c988d60.53ee428",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x06,\n0x00,\n0x80,\n0x04,\n0xB0,\n0x98,\n0xF5\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1120,
        "wires": [
            [
                "671af293.bbad7c"
            ]
        ]
    },
    {
        "id": "bfab9f02.7e296",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "120a",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1120,
        "wires": [
            [
                "c988d60.53ee428"
            ]
        ]
    },
    {
        "id": "83de68e.24d3198",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT cell1",
        "func": "const buf = Buffer.from([\n0x0A,\n0x01,\n0x02\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 500,
        "wires": [
            [
                "be115a7f.a2a0e8",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "acabf1ec.89c2d",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT cell2",
        "func": "const buf = Buffer.from([\n0x0A,\n0x02,\n0x02\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 560,
        "wires": [
            [
                "87d806a3.19ebf8",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "c31b79c6.55f7e8",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT cell3",
        "func": "const buf = Buffer.from([\n0x0A,\n0x03,\n0x02\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 600,
        "wires": [
            [
                "d1867774.176088",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "2c199e88.2628e2",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT cell4",
        "func": "const buf = Buffer.from([\n0x0A,\n0x04,\n0x02\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 640,
        "wires": [
            [
                "c4a83726.283398",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "790cb92c.a34708",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT voltage",
        "func": "const buf = Buffer.from([\n0x0A,\n0x0b,\n0x02\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 680,
        "wires": [
            [
                "2b30ae7d.129862",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "be115a7f.a2a0e8",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 800,
        "y": 520,
        "wires": [
            [
                "acabf1ec.89c2d"
            ]
        ]
    },
    {
        "id": "87d806a3.19ebf8",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 560,
        "wires": [
            [
                "c31b79c6.55f7e8"
            ]
        ]
    },
    {
        "id": "d1867774.176088",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 600,
        "wires": [
            [
                "2c199e88.2628e2"
            ]
        ]
    },
    {
        "id": "c4a83726.283398",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "790cb92c.a34708"
            ]
        ]
    },
    {
        "id": "2b30ae7d.129862",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 680,
        "wires": [
            [
                "5d49febd.1d34"
            ]
        ]
    },
    {
        "id": "5d49febd.1d34",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT current",
        "func": "const buf = Buffer.from([\n0x0A,\n0x10,\n0x04\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "60d386ee.e41278",
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "fb5d8560.810798",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "MONIT cap",
        "func": "const buf = Buffer.from([\n0x0A,\n0x12,\n0x04\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 720,
        "wires": [
            [
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "60d386ee.e41278",
        "type": "delay",
        "z": "d916bf99.e1981",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "fb5d8560.810798"
            ]
        ]
    },
    {
        "id": "c473d34b.030b9",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "",
        "func": "flow.set(\"counter\",0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a1bd2fb9.a68c7",
        "type": "inject",
        "z": "d916bf99.e1981",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "c473d34b.030b9"
            ]
        ]
    },
    {
        "id": "a19053c2.c1cfd",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "b16  =>cell1,\nx8",
        "x": 1230,
        "y": 60,
        "wires": [
            [
                "39f3fcd1.9c6264"
            ]
        ]
    },
    {
        "id": "39f3fcd1.9c6264",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "global.set(\"BMScell1\",msg.payload.cell1);\n\nmsg.payload = msg.payload.cell1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 60,
        "wires": [
            [
                "ef686a6f.513ed8",
                "dbc2400a.e71fb"
            ]
        ]
    },
    {
        "id": "f4b78cd9.b4285",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "",
        "func": "var lcounter = flow.get(\"counter\");\n\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar msg5 = {};\nvar msg6 = {};\nvar msg7 = {};\nvar msg8 = {};\n\nif(lcounter == 0) {\n    msg1.payload = msg.payload;\n}\n\nif(lcounter == 1) {\n    msg2.payload = msg.payload;\n}\n\nif(lcounter == 2) {\n    msg3.payload = msg.payload;\n}\n\nif(lcounter == 3) {\n    msg4.payload = msg.payload;\n}\n\nif(lcounter == 4) {\n    msg5.payload = msg.payload;\n}\n\nif(lcounter == 5) {\n    msg6.payload = msg.payload;\n}\n\nif(lcounter == 6) {\n    msg7.payload = msg.payload;\n}\n\nif(lcounter == 7) {\n    msg8.payload = msg.payload;\n}\n\nlcounter++;\nflow.set(\"counter\",lcounter);\n\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "a19053c2.c1cfd"
            ],
            [
                "aaf7f006.46aae"
            ],
            [
                "1127b6d7.e81369"
            ],
            [
                "ad49dd10.5e972"
            ],
            [
                "12148478.79a9fc"
            ],
            [
                "af4b92ae.630aa"
            ],
            [
                "34ff1649.defa8a"
            ],
            []
        ]
    },
    {
        "id": "aaf7f006.46aae",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "b16  =>cell2,\nx8",
        "x": 1230,
        "y": 100,
        "wires": [
            [
                "d0ace65d.98d408"
            ]
        ]
    },
    {
        "id": "d0ace65d.98d408",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "global.set(\"BMScell2\",msg.payload.cell2);\n\nmsg.payload = msg.payload.cell2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "ef686a6f.513ed8",
                "dbc2400a.e71fb"
            ]
        ]
    },
    {
        "id": "1127b6d7.e81369",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "b16  =>cell3,\nx8",
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "346b89ec.8d07b6"
            ]
        ]
    },
    {
        "id": "346b89ec.8d07b6",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "global.set(\"BMScell3\",msg.payload.cell3);\n\nmsg.payload = msg.payload.cell3;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 140,
        "wires": [
            [
                "ef686a6f.513ed8",
                "dbc2400a.e71fb"
            ]
        ]
    },
    {
        "id": "ad49dd10.5e972",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "b16  =>cell4,\nx8",
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "c9afbaa1.519608"
            ]
        ]
    },
    {
        "id": "c9afbaa1.519608",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "global.set(\"BMScell4\",msg.payload.cell4);\n\nmsg.payload = msg.payload.cell4;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 180,
        "wires": [
            [
                "ef686a6f.513ed8",
                "dbc2400a.e71fb"
            ]
        ]
    },
    {
        "id": "59270363.64dbac",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "check uart setting MONIT",
        "func": "if(global.get(\"multiuart1\")==6 || global.get(\"usb1uart\")==6 || global.get(\"usb2uart\")==6 || global.get(\"multiuart2\")==6 || global.get(\"usb3uart\")==6 || global.get(\"usb4uart\")==6) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "f4b78cd9.b4285"
            ]
        ]
    },
    {
        "id": "12148478.79a9fc",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "b16  =>volt,\nx8",
        "x": 1230,
        "y": 220,
        "wires": [
            [
                "259b2cf1.597744"
            ]
        ]
    },
    {
        "id": "259b2cf1.597744",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "global.set(\"BMSvolt\",msg.payload.volt/1000)\nglobal.set(\"BATTvolt\",msg.payload.volt/1000);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "22aea5f.be90d5a",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "//battery\nmsg.payload = msg.payload.amps/1000;\nglobal.set(\"BMSamps\",msg.payload)\nglobal.set(\"BATTamps\",msg.payload);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "af4b92ae.630aa",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\n-b16  =>amps,\nx8",
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "22aea5f.be90d5a"
            ]
        ]
    },
    {
        "id": "bf3d7024.f97f2",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "set global",
        "func": "check1 = msg.payload.capacity/100;\ncheck1 = check1.toFixed(1);\n\nglobal.set(\"BMScap\",check1);\nglobal.set(\"BATTsoc\",check1);\n\nglobal.set(\"BMSpower\",false);\n\n//battery\nmsg.payload = check1;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "34ff1649.defa8a",
        "type": "binary",
        "z": "d916bf99.e1981",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nb24 => capacity, \nx8",
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "bf3d7024.f97f2"
            ]
        ]
    },
    {
        "id": "671af293.bbad7c",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "23e9fe67.b8dcb2",
            "4c62e65d.5152a8",
            "d5a3cb8f.6613a8",
            "9f4aa18c.1a602",
            "29fb2dfab49e293d",
            "081192922b09b82e",
            "f0c750b3fced8334",
            "bb2a109a66b34c73",
            "e1b033b72073b492",
            "1b1168f8607d8205",
            "38cb32c06a098f9e",
            "0b82ac1efa8711d7",
            "a9385a64390be923"
        ],
        "x": 765,
        "y": 820,
        "wires": []
    },
    {
        "id": "ef686a6f.513ed8",
        "type": "smooth",
        "z": "d916bf99.e1981",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "4",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1660,
        "y": 60,
        "wires": [
            [
                "3cfe2d63.bef032"
            ]
        ]
    },
    {
        "id": "dbc2400a.e71fb",
        "type": "smooth",
        "z": "d916bf99.e1981",
        "name": "",
        "property": "payload",
        "action": "min",
        "count": "4",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1660,
        "y": 160,
        "wires": [
            [
                "9b27cf8d.2f715"
            ]
        ]
    },
    {
        "id": "9b27cf8d.2f715",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(3);\nglobal.set(\"minvolt\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3cfe2d63.bef032",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(3);\nglobal.set(\"maxvolt\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fc1ae8662133fe4a",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==1)\n{\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==1)\n{\n        msg.topic=2;\n    return msg;\n}\n\n\nif(global.get(\"usb1uart\")==1)\n{\n        msg.topic=3;\n    return msg;\n}\n\n\nif(global.get(\"usb2uart\")==1)\n{\n        msg.topic=4;\n    return msg;\n}\n\n\nif(global.get(\"usb3uart\")==1)\n{\n        msg.topic=5;\n    return msg;\n}\n\n\nif(global.get(\"usb4uart\")==1)\n{\n        msg.topic=6;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            [
                "ab2a70e0d16e6a5e"
            ]
        ]
    },
    {
        "id": "3c2ccb9ed1c655fb",
        "type": "switch",
        "z": "d916bf99.e1981",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1370,
        "y": 440,
        "wires": [
            [
                "0acbe89a2b17eef1"
            ],
            [
                "0b3dceafe882efaf"
            ],
            [
                "8fb401c872f54966"
            ],
            [
                "1329104c27a59c38"
            ],
            [
                "9dd2ca6c97ca068c"
            ],
            [
                "e1367c6cc58fb2d9"
            ]
        ]
    },
    {
        "id": "0acbe89a2b17eef1",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "bb2a109a66b34c73"
        ],
        "x": 1545,
        "y": 340,
        "wires": []
    },
    {
        "id": "0b3dceafe882efaf",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "0b82ac1efa8711d7"
        ],
        "x": 1545,
        "y": 380,
        "wires": []
    },
    {
        "id": "8fb401c872f54966",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 1545,
        "y": 420,
        "wires": []
    },
    {
        "id": "1329104c27a59c38",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 1545,
        "y": 460,
        "wires": []
    },
    {
        "id": "9dd2ca6c97ca068c",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 1545,
        "y": 500,
        "wires": []
    },
    {
        "id": "e1367c6cc58fb2d9",
        "type": "link out",
        "z": "d916bf99.e1981",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1545,
        "y": 540,
        "wires": []
    },
    {
        "id": "ab2a70e0d16e6a5e",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "status request",
        "func": "const buf = Buffer.from([\n0xD2,\n0x03,\n0x00,\n0x00,\n0x00,\n0x3E,\n0xD7,\n0xB9\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "3c2ccb9ed1c655fb"
            ]
        ]
    },
    {
        "id": "88d973764ad2a822",
        "type": "function",
        "z": "d916bf99.e1981",
        "name": "check uart setting",
        "func": "flow.set(\"counter\",0);\n\nif(global.get(\"multiuart1\")==6) {\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==6) {\n    msg.topic=2;\n    return msg;\n}\n\nif(global.get(\"usb1uart\")==6) {\n    msg.topic=3;\n    return msg;\n}\n\nif(global.get(\"usb2uart\")==6) {\n    msg.topic=4;\n    return msg;\n}\n\nif(global.get(\"usb3uart\")==6) {\n    msg.topic=5;\n    return msg;\n}\n\nif(global.get(\"usb4uart\")==6) {\n    msg.topic=6;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 500,
        "wires": [
            [
                "83de68e.24d3198"
            ]
        ]
    },
    {
        "id": "2dda432f59ac7836",
        "type": "comment",
        "z": "d916bf99.e1981",
        "name": "DALY MONIT",
        "info": "https://crccalc.com/\n\nmodus -> bytes vertauscht erst das letzte \n\n",
        "x": 330,
        "y": 460,
        "wires": []
    },
    {
        "id": "68c4164dbe1ad213",
        "type": "comment",
        "z": "d916bf99.e1981",
        "name": "Daly Bluetooth",
        "info": "https://crccalc.com/\n\nmodus -> bytes vertauscht erst das letzte \n\n",
        "x": 340,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b3b97b1.6de818",
        "type": "ui_time_scheduler",
        "z": "b6cd7d08.34935",
        "group": "4d6141426495610b",
        "name": "",
        "startDay": 0,
        "refresh": 60,
        "devices": [
            "heater timer"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": false,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 2,
        "order": 1,
        "width": "0",
        "height": "0",
        "x": 750,
        "y": 140,
        "wires": [
            [
                "500dcb53.aa8be4"
            ],
            [
                "690de17f.50198"
            ]
        ]
    },
    {
        "id": "ea5a2dfa.55b8d",
        "type": "switch",
        "z": "b6cd7d08.34935",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "4c10aed4e90a4dc5",
                "5512cedcef6cc468"
            ],
            [
                "356b5c202c275946",
                "b4ad41f3.50b6"
            ]
        ]
    },
    {
        "id": "34624a1b.a87556",
        "type": "switch",
        "z": "b6cd7d08.34935",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 1670,
        "y": 300,
        "wires": [
            [
                "465e74df.ffe5dc"
            ],
            [
                "189823aa.9f6a6c"
            ],
            [
                "a1b15bff.4c9678"
            ],
            [
                "564b57df.6e9b08"
            ],
            [
                "1216bfcc.c7794"
            ],
            [
                "d3fd292f.6dc8f8"
            ],
            [
                "7be33174.95ab7"
            ],
            [
                "eb14dc86.2a0cb"
            ],
            [],
            []
        ]
    },
    {
        "id": "9de8f7f3.70a038",
        "type": "file in",
        "z": "b6cd7d08.34935",
        "name": "",
        "filename": "pekaway/savetimer",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "5b3b97b1.6de818"
            ]
        ]
    },
    {
        "id": "2d9011c1.bd074e",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "a3e77227.9bb0d"
            ]
        ]
    },
    {
        "id": "a3e77227.9bb0d",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "9de8f7f3.70a038"
            ]
        ]
    },
    {
        "id": "465e74df.ffe5dc",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"one\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "189823aa.9f6a6c",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"two\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b15bff.4c9678",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"three\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "564b57df.6e9b08",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"four\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1216bfcc.c7794",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"five\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d3fd292f.6dc8f8",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"six\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7be33174.95ab7",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"seven\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "eb14dc86.2a0cb",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"eight\", true);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2dfc457a.e9c54a",
        "type": "ui_switch",
        "z": "b6cd7d08.34935",
        "name": "",
        "label": "Timer Off/On",
        "tooltip": "",
        "group": "4d6141426495610b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "b21062ea.3f207"
            ]
        ]
    },
    {
        "id": "b21062ea.3f207",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "",
        "func": "global.set(\"heattimeronoff\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b4769425.119548",
        "type": "switch",
        "z": "b6cd7d08.34935",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 1670,
        "y": 440,
        "wires": [
            [
                "ed9dd7.d7600228"
            ],
            [
                "9bd0ef2a.d2d7c"
            ],
            [
                "1639c11a.f3c2ef"
            ],
            [
                "d4250ab3.c49fd8"
            ],
            [
                "6fed735c.73c61c"
            ],
            [
                "aa0eb423.e311a8"
            ],
            [
                "cf219215.b54dd"
            ],
            [
                "856ce5c1.0275b8"
            ],
            [],
            []
        ]
    },
    {
        "id": "ed9dd7.d7600228",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"one\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9bd0ef2a.d2d7c",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"two\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1639c11a.f3c2ef",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"three\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d4250ab3.c49fd8",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"four\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "6fed735c.73c61c",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"five\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "aa0eb423.e311a8",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"six\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "cf219215.b54dd",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"seven\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "856ce5c1.0275b8",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "globalVariable set",
        "func": "\nglobal.set(\"eight\", false);\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1970,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "690de17f.50198",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "check timer on/off",
        "func": "var check = global.get(\"heattimeronoff\");\nif(check === true)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 140,
        "wires": [
            [
                "ea5a2dfa.55b8d"
            ]
        ]
    },
    {
        "id": "ad8ca5a.78d6058",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "2dfc457a.e9c54a"
            ]
        ]
    },
    {
        "id": "b4ad41f3.50b6",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 400,
        "wires": [
            [
                "bf97c6b00ba3ecec"
            ]
        ]
    },
    {
        "id": "a431cd5.b84203",
        "type": "comment",
        "z": "b6cd7d08.34935",
        "name": "Timer with connect relays",
        "info": "",
        "x": 230,
        "y": 100,
        "wires": []
    },
    {
        "id": "356b5c202c275946",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "2bd22a1d380636dc",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "\"\"",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "5c6aeef08e518260",
                "8e2cf1affb32e884",
                "3d09a72b0b542224",
                "6d184978e23c3d8f",
                "e1020f2c893d1432",
                "5512cedcef6cc468",
                "689f7af0527c84bb",
                "9f5aa5c71fdca150"
            ]
        ]
    },
    {
        "id": "4c10aed4e90a4dc5",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "2bd22a1d380636dc",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "\"\"",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "8c2f419ba40a5988",
                "5aaf037cba0e1470",
                "357c036bfc1f8f60",
                "b5deeec3b50476e6",
                "a7073406bb997adb",
                "bf97c6b00ba3ecec",
                "6c2b9df588efbd44",
                "4c2ff550cab39384",
                "df953ef470f7b6b5"
            ]
        ]
    },
    {
        "id": "8a3d57c0caabb452",
        "type": "comment",
        "z": "b6cd7d08.34935",
        "name": "Buttons and Temperature",
        "info": "",
        "x": 230,
        "y": 220,
        "wires": []
    },
    {
        "id": "65f0fb14cb2fbb3d",
        "type": "ui_slider",
        "z": "b6cd7d08.34935",
        "name": "",
        "label": "Set Temperatur",
        "tooltip": "please select tempsensor in config",
        "group": "2bd22a1d380636dc",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "12",
        "max": "35",
        "step": 1,
        "className": "",
        "x": 1200,
        "y": 700,
        "wires": [
            [
                "f8d3f1dc.c595b",
                "28ad7f42cfe2b944",
                "6170c7bb5afa2ee0"
            ]
        ]
    },
    {
        "id": "1174fcf84dd5fb9f",
        "type": "file",
        "z": "b6cd7d08.34935",
        "name": "",
        "filename": "pekaway/settemp",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "28ad7f42cfe2b944",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "set global ",
        "func": "msg.topic = Number(msg.payload);\nglobal.set(\"settemp\", msg.topic);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 660,
        "wires": [
            [
                "1174fcf84dd5fb9f"
            ]
        ]
    },
    {
        "id": "498d730f825a09cd",
        "type": "file in",
        "z": "b6cd7d08.34935",
        "name": "",
        "filename": "pekaway/settemp",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 970,
        "y": 660,
        "wires": [
            [
                "65f0fb14cb2fbb3d",
                "28ad7f42cfe2b944"
            ]
        ]
    },
    {
        "id": "58e1147861231c57",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 660,
        "wires": [
            [
                "498d730f825a09cd",
                "334c388fdbc1a546"
            ]
        ]
    },
    {
        "id": "60bf4bd87920e78f",
        "type": "ui_text",
        "z": "b6cd7d08.34935",
        "group": "2bd22a1d380636dc",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Tempsensor: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1290,
        "y": 780,
        "wires": []
    },
    {
        "id": "334c388fdbc1a546",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "get inside tempsensor",
        "func": "msg.payload = global.get(\"heattempsensor\");\n\nif(msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4 && msg.payload != 5 && msg.payload != 6)\nmsg.payload=\"no sensor\"\n\nif(msg.payload == 1)\nmsg.payload = global.get(\"temp1\");\n\nif(msg.payload == 2)\nmsg.payload = global.get(\"temp2\");\n\nif(msg.payload == 3)\nmsg.payload = global.get(\"temp3\");\n\nif(msg.payload == 4)\nmsg.payload = global.get(\"temp4\");\n\nif(msg.payload == 5)\nmsg.global.get(\"dimmytemp1\")\n\nif (msg.payload == 6)\n    msg.global.get(\"dimmytemp2\")\n\n\nif (global.get(\"temp1\") == \"\" && global.get(\"temp2\") == \"\" && global.get(\"temp3\") == \"\" && global.get(\"temp4\") == \"\" && global.get(\"dimmytemp1\") == \"\" && global.get(\"dimmytemp2\") == \"\")\n{\n    msg.payload =\"no TempSensor\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 780,
        "wires": [
            [
                "60bf4bd87920e78f",
                "7bc1539d.3c518c"
            ]
        ]
    },
    {
        "id": "f598506a66563ad0",
        "type": "link in",
        "z": "b6cd7d08.34935",
        "name": "heatertempsensor",
        "links": [
            "2d96e8.2c96e918"
        ],
        "x": 805,
        "y": 740,
        "wires": [
            [
                "334c388fdbc1a546"
            ]
        ]
    },
    {
        "id": "a2a42c0f4d6f393e",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payloadType": "date",
        "x": 750,
        "y": 780,
        "wires": [
            [
                "334c388fdbc1a546"
            ]
        ]
    },
    {
        "id": "eb1e92403a6a4490",
        "type": "link in",
        "z": "b6cd7d08.34935",
        "name": "touch heater Start",
        "links": [
            "026555e3ad71e0cf",
            "9218ac0d4df78330",
            "9b3fc01458c8cf09",
            "bdc02207fedba353",
            "e342e6035235dcf4",
            "e4d6be1f0b1154d3",
            "ef215dab8a56ed9f",
            "ef794877a1b58355",
            "7e4dd6723e584edd"
        ],
        "x": 235,
        "y": 300,
        "wires": [
            [
                "356b5c202c275946"
            ]
        ]
    },
    {
        "id": "8114989ad3d836db",
        "type": "link in",
        "z": "b6cd7d08.34935",
        "name": "touch heater stop",
        "links": [
            "737b0da3.aadc14",
            "25bbb2b2adaf0cf8",
            "5776c022733c4136",
            "8d54b616c7e8feb5",
            "9fb866bf4390d8d3",
            "bd58df4c860a250e",
            "f4c77d50408aeea4",
            "be6c3d30a055ba91",
            "7362857190ef0666",
            "174fb16fd5db99e5",
            "780a0e0968fb8eba",
            "9fae8927d8332b8a",
            "c6090d9c764b972b",
            "21c530bf32661bd8",
            "cd8aee961c1b28ab"
        ],
        "x": 235,
        "y": 420,
        "wires": [
            [
                "4c10aed4e90a4dc5"
            ]
        ]
    },
    {
        "id": "5c6aeef08e518260",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "autoterm start",
        "links": [
            "3ffd20e3.bd23a",
            "4fee13e9cef62a8a",
            "38064e3aeee910e3",
            "19329e2e2ff5c04a"
        ],
        "x": 705,
        "y": 280,
        "wires": []
    },
    {
        "id": "8e2cf1affb32e884",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "webasto start",
        "links": [
            "2df448d30c5fc031",
            "3aec10b81cfcbc6f"
        ],
        "x": 705,
        "y": 320,
        "wires": []
    },
    {
        "id": "3d09a72b0b542224",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "china diesel start",
        "links": [
            "777866f44d62b0d8"
        ],
        "x": 705,
        "y": 360,
        "wires": []
    },
    {
        "id": "8c2f419ba40a5988",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "autoterm stop",
        "links": [
            "98cdb5de.55bcd8",
            "6073c0d66934134f",
            "4da81b1bed60b194",
            "4c1999d33c313348"
        ],
        "x": 705,
        "y": 480,
        "wires": []
    },
    {
        "id": "5aaf037cba0e1470",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "webasto stop",
        "links": [
            "385e6fbc28cf0f96",
            "9fa1b8aab7d6ac39"
        ],
        "x": 705,
        "y": 520,
        "wires": []
    },
    {
        "id": "357c036bfc1f8f60",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "china heater stop",
        "links": [
            "25c3852715792925"
        ],
        "x": 705,
        "y": 560,
        "wires": []
    },
    {
        "id": "941d174a.01c348",
        "type": "ui_template",
        "z": "b6cd7d08.34935",
        "group": "2a7d142135bfa4c0",
        "name": "Nest",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div id=\"thermostat\"></div>\n\n<style>\n\n@import url(http://fonts.googleapis.com/css?family=Open+Sans:300);\n\n#thermostat {\n margin: 0 auto;\n -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n.dial {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.dial.away .dial__ico__leaf {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--target {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--target--half {\n    visibility: hidden;\n}\n.dial.away .dial__lbl--away {\n    opacity: 1;\n}\n.dial .dial__shape {\n    -webkit-transition: fill 0.5s;\n    transition: fill 0.5s;\n}\n.dial path.dial__ico__leaf {\n    fill: #13EB13;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n    pointer-events: none;\n}\n.dial.has-leaf .dial__ico__leaf {\n    display: block;\n    opacity: 1;\n    pointer-events: initial;\n}\n.dial__editableIndicator {\n    fill-rule: evenodd;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n}\n.dial--edit path.dial__editableIndicator {\n    fill: white;\n}\n.dial--edit .dial__editableIndicator {\n    opacity: 1;\n}\n.dial--state--off .dial__shape {\n    fill: #3d3c3c;\n}\n.dial--state--heating .dial__shape {\n    fill: #E36304;\n}\n.dial--state--cooling .dial__shape {\n    fill: #007AF1;\n}\n.dial .dial__ticks path {\n    fill: rgba(255, 255, 255, 0.3);\n}\n.dial .dial__ticks path.active {\n    fill: rgba(255, 255, 255, 0.8);\n}\n.dial text {\n    fill: white;\n    text-anchor: middle;\n    font-family: Helvetica, sans-serif;\n    alignment-baseline: central;\n}\n.dial__lbl--target {\n    font-size: 120px;\n    font-weight: bold;\n}\n.dial__lbl--target--half {\n    font-size: 40px;\n    font-weight: bold;\n    opacity: 0;\n    -webkit-transition: opacity 0.1s;\n    transition: opacity 0.1s;\n}\n.dial__lbl--target--half.shown {\n    opacity: 1;\n    -webkit-transition: opacity 0s;\n    transition: opacity 0s;\n}\n.dial__lbl--ambient {\n    font-size: 22px;\n    font-weight: bold;\n}\n.dial__lbl--away {\n    font-size: 72px;\n    font-weight: bold;\n    opacity: 0;\n    pointer-events: none;\n}\n#controls {\n    font-family: Open Sans;\n    background-color: rgba(255, 255, 255, 0.25);\n    padding: 20px;\n    border-radius: 5px;\n    position: absolute;\n    left: 50%;\n    -webkit-transform: translatex(-50%);\n    transform: translatex(-50%);\n    margin-top: 20px;\n}\n#controls label {\n    text-align: left;\n    display: block;\n}\n#controls label span {\n    display: inline-block;\n    width: 200px;\n    text-align: right;\n    font-size: 0.8em;\n    text-transform: uppercase;\n}\n#controls p {\n    margin: 0;\n    margin-bottom: 1em;\n    padding-bottom: 1em;\n    border-bottom: 2px solid #ccc;\n}\n</style>\n<script>\n    var thermostatDial = (function() {\n\t\n\t/*\n\t * Utility functions\n\t */\n\t\n\t// Create an element with proper SVG namespace, optionally setting its attributes and appending it to another element\n\tfunction createSVGElement(tag,attributes,appendTo) {\n\t\tvar element = document.createElementNS('http://www.w3.org/2000/svg',tag);\n\t\tattr(element,attributes);\n\t\tif (appendTo) {\n\t\t\tappendTo.appendChild(element);\n\t\t}\n\t\treturn element;\n\t}\n\t\n\t// Set attributes for an element\n\tfunction attr(element,attrs) {\n\t\tfor (var i in attrs) {\n\t\t\telement.setAttribute(i,attrs[i]);\n\t\t}\n\t}\n\t\n\t// Rotate a cartesian point about given origin by X degrees\n\tfunction rotatePoint(point, angle, origin) {\n\t\tvar radians = angle * Math.PI/180;\n\t\tvar x = point[0]-origin[0];\n\t\tvar y = point[1]-origin[1];\n\t\tvar x1 = x*Math.cos(radians) - y*Math.sin(radians) + origin[0];\n\t\tvar y1 = x*Math.sin(radians) + y*Math.cos(radians) + origin[1];\n\t\treturn [x1,y1];\n\t}\n\t\n\t// Rotate an array of cartesian points about a given origin by X degrees\n\tfunction rotatePoints(points, angle, origin) {\n\t\treturn points.map(function(point) {\n\t\t\treturn rotatePoint(point, angle, origin);\n\t\t});\n\t}\n\t\n\t// Given an array of points, return an SVG path string representing the shape they define\n\tfunction pointsToPath(points) {\n\t\treturn points.map(function(point, iPoint) {\n\t\t\treturn (iPoint>0?'L':'M') + point[0] + ' ' + point[1];\n\t\t}).join(' ')+'Z';\n\t}\n\t\n\tfunction circleToPath(cx, cy, r) {\n\t\treturn [\n\t\t\t\"M\",cx,\",\",cy,\n\t\t\t\"m\",0-r,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,r*2,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,0-r*2,\",\",0,\n\t\t\t\"z\"\n\t\t].join(' ').replace(/\\s,\\s/g,\",\");\n\t}\n\t\n\tfunction donutPath(cx,cy,rOuter,rInner) {\n\t\treturn circleToPath(cx,cy,rOuter) + \" \" + circleToPath(cx,cy,rInner);\n\t}\n\t\n\t// Restrict a number to a min + max range\n\tfunction restrictToRange(val,min,max) {\n\t\tif (val < min) return min;\n\t\tif (val > max) return max;\n\t\treturn val;\n\t}\n\t\n\t// Round a number to the nearest 0.5\n\tfunction roundHalf(num) {\n\t\treturn Math.round(num*2)/2;\n\t}\n\t\n\tfunction setClass(el, className, state) {\n\t\tel.classList[state ? 'add' : 'remove'](className);\n\t}\n\t\n\t/*\n\t * The \"MEAT\"\n\t */\n\n\treturn function(targetElement, options) {\n\t\tvar self = this;\n\t\t\n\t\t/*\n\t\t * Options\n\t\t */\n\t\toptions = options || {};\n\t\toptions = {\n\t\t\tdiameter: options.diameter || 400,\n\t\t\tminValue: options.minValue || 10, // Minimum value for target temperature\n\t\t\tmaxValue: options.maxValue || 35, // Maximum value for target temperature\n\t\t\tnumTicks: options.numTicks || 200, // Number of tick lines to display around the dial\n\t\t\tonSetTargetTemperature: options.onSetTargetTemperature || function() {}, // Function called when new target temperature set by the dial\n\t\t};\n\t\t\n\t\t/*\n\t\t * Properties - calculated from options in many cases\n\t\t */\n\t\tvar properties = {\n\t\t\ttickDegrees: 300, // Degrees of the dial that should be covered in tick lines\n\t\t\trangeValue: options.maxValue - options.minValue,\n\t\t\tradius: options.diameter/2,\n\t\t\tticksOuterRadius: options.diameter / 30,\n\t\t\tticksInnerRadius: options.diameter / 8,\n\t\t\thvac_states: ['off', 'heating', 'cooling'],\n\t\t\tdragLockAxisDistance: 15,\n\t\t}\n\t\tproperties.lblAmbientPosition = [properties.radius, properties.ticksOuterRadius-(properties.ticksOuterRadius-properties.ticksInnerRadius)/2]\n\t\tproperties.offsetDegrees = 180-(360-properties.tickDegrees)/2;\n\t\t\n\t\t/*\n\t\t * Object state\n\t\t */\n\t\tvar state = {\n\t\t\ttarget_temperature: options.minValue,\n\t\t\tambient_temperature: options.minValue,\n\t\t\thvac_state: properties.hvac_states[0],\n\t\t\thas_leaf: false,\n\t\t\taway: false\n\t\t};\n\t\t\n\t\t/*\n\t\t * Property getter / setters\n\t\t */\n\t\tObject.defineProperty(this,'target_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.target_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.target_temperature = restrictTargetTemperature(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'ambient_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.ambient_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.ambient_temperature = roundHalf(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'hvac_state',{\n\t\t\tget: function() {\n\t\t\t\treturn state.hvac_state;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tif (properties.hvac_states.indexOf(val)>=0) {\n\t\t\t\t\tstate.hvac_state = val;\n\t\t\t\t\trender();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfunction str2bool(strvalue){\n          return (strvalue && typeof strvalue == 'string') ? (strvalue.toLowerCase() == 'true') : (strvalue == true);\n        }\n\t\tObject.defineProperty(this,'has_leaf',{\n\t\t\tget: function() {\n\t\t\t\treturn state.has_leaf;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.has_leaf = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'away',{\n\t\t\tget: function() {\n\t\t\t\treturn state.away;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.away = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\t\n\t\t/*\n\t\t * SVG\n\t\t */\n\t\tvar svg = createSVGElement('svg',{\n\t\t\twidth: '100%', //options.diameter+'px',\n\t\t\theight: '100%', //options.diameter+'px',\n\t\t\tviewBox: '0 0 '+options.diameter+' '+options.diameter,\n\t\t\tclass: 'dial'\n\t\t},targetElement);\n\t\t// CIRCULAR DIAL\n\t\tvar circle = createSVGElement('circle',{\n\t\t\tcx: properties.radius,\n\t\t\tcy: properties.radius,\n\t\t\tr: properties.radius,\n\t\t\tclass: 'dial__shape'\n\t\t},svg);\n\t\t// EDITABLE INDICATOR\n\t\tvar editCircle = createSVGElement('path',{\n\t\t\td: donutPath(properties.radius,properties.radius,properties.radius-4,properties.radius-8),\n\t\t\tclass: 'dial__editableIndicator',\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * Ticks\n\t\t */\n\t\tvar ticks = createSVGElement('g',{\n\t\t\tclass: 'dial__ticks'\t\n\t\t},svg);\n\t\tvar tickPoints = [\n\t\t\t[properties.radius-1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksInnerRadius],\n\t\t\t[properties.radius-1, properties.ticksInnerRadius]\n\t\t];\n\t\tvar tickPointsLarge = [\n\t\t\t[properties.radius-1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksInnerRadius+20],\n\t\t\t[properties.radius-1.5, properties.ticksInnerRadius+20]\n\t\t];\n\t\tvar theta = properties.tickDegrees/options.numTicks;\n\t\tvar tickArray = [];\n\t\tfor (var iTick=0; iTick<options.numTicks; iTick++) {\n\t\t\ttickArray.push(createSVGElement('path',{d:pointsToPath(tickPoints)},ticks));\n\t\t};\n\t\t\n\t\t/*\n\t\t * Labels\n\t\t */\n\t\tvar lblTarget = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--target'\n\t\t},svg);\n\t\tvar lblTarget_text = document.createTextNode('');\n\t\tlblTarget.appendChild(lblTarget_text);\n\t\t//\n\t\tvar lblTargetHalf = createSVGElement('text',{\n\t\t\tx: properties.radius + properties.radius/2.5,\n\t\t\ty: properties.radius - properties.radius/8,\n\t\t\tclass: 'dial__lbl dial__lbl--target--half'\n\t\t},svg);\n\t\tvar lblTargetHalf_text = document.createTextNode('5');\n\t\tlblTargetHalf.appendChild(lblTargetHalf_text);\n\t\t//\n\t\tvar lblAmbient = createSVGElement('text',{\n\t\t\tclass: 'dial__lbl dial__lbl--ambient'\n\t\t},svg);\n\t\tvar lblAmbient_text = document.createTextNode('');\n\t\tlblAmbient.appendChild(lblAmbient_text);\n\t\t//\n\t\tvar lblAway = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--away'\n\t\t},svg);\n\t\tvar lblAway_text = document.createTextNode('AWAY');\n\t\tlblAway.appendChild(lblAway_text);\n\t\t//\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf'\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * LEAF\n\t\t */\n\t\tvar leafScale = properties.radius/5/100;\n\t\tvar leafDef = [\"M\", 3, 84, \"c\", 24, 17, 51, 18, 73, -6, \"C\", 100, 52, 100, 22, 100, 4, \"c\", -13, 15, -37, 9, -70, 19, \"C\", 4, 32, 0, 63, 0, 76, \"c\", 6, -7, 18, -17, 33, -23, 24, -9, 34, -9, 48, -20, -9, 10, -20, 16, -43, 24, \"C\", 22, 63, 8, 78, 3, 84, \"z\"].map(function(x) {\n\t\t\treturn isNaN(x) ? x : x*leafScale;\n\t\t}).join(' ');\n\t\tvar translate = [properties.radius-(leafScale*100*0.5),properties.radius*1.5]\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf',\n\t\t\td: leafDef,\n\t\t\ttransform: 'translate('+translate[0]+','+translate[1]+')'\n\t\t},svg);\n\t\t\t\n\t\t/*\n\t\t * RENDER\n\t\t */\n\t\tfunction render() {\n\t\t\trenderAway();\n\t\t\trenderHvacState();\n\t\t\trenderTicks();\n\t\t\trenderTargetTemperature();\n\t\t\trenderAmbientTemperature();\n\t\t\trenderLeaf();\n\t\t}\n\t\trender();\n\n\t\t/*\n\t\t * RENDER - ticks\n\t\t */\n\t\tfunction renderTicks() {\n\t\t\tvar vMin, vMax;\n\t\t\tif (self.away) {\n\t\t\t\tvMin = self.ambient_temperature;\n\t\t\t\tvMax = vMin;\n\t\t\t} else {\n\t\t\t\tvMin = Math.min(self.ambient_temperature, self.target_temperature);\n\t\t\t\tvMax = Math.max(self.ambient_temperature, self.target_temperature);\n\t\t\t}\n\t\t\tvar min = restrictToRange(Math.round((vMin-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\tvar max = restrictToRange(Math.round((vMax-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\t//\n\t\t\ttickArray.forEach(function(tick,iTick) {\n\t\t\t\tvar isLarge = iTick==min || iTick==max;\n\t\t\t\tvar isActive = iTick >= min && iTick <= max;\n\t\t\t\tattr(tick,{\n\t\t\t\t\td: pointsToPath(rotatePoints(isLarge ? tickPointsLarge: tickPoints,iTick*theta-properties.offsetDegrees,[properties.radius, properties.radius])),\n\t\t\t\t\tclass: isActive ? 'active' : ''\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t/*\n\t\t * RENDER - ambient temperature\n\t\t */\n\t\tfunction renderAmbientTemperature() {\n\t\t\tlblAmbient_text.nodeValue = Math.floor(self.ambient_temperature);\n\t\t\tif (self.ambient_temperature%1!=0) {\n\t\t\t\tlblAmbient_text.nodeValue += '⁵';\n\t\t\t}\n\t\t\tvar peggedValue = restrictToRange(self.ambient_temperature, options.minValue, options.maxValue);\n\t\t\tdegs = properties.tickDegrees * (peggedValue-options.minValue)/properties.rangeValue - properties.offsetDegrees;\n\t\t\tif (peggedValue > self.target_temperature) {\n\t\t\t\tdegs += 8;\n\t\t\t} else {\n\t\t\t\tdegs -= 8;\n\t\t\t}\n\t\t\tvar pos = rotatePoint(properties.lblAmbientPosition,degs,[properties.radius, properties.radius]);\n\t\t\tattr(lblAmbient,{\n\t\t\t\tx: pos[0],\n\t\t\t\ty: pos[1]\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t * RENDER - target temperature\n\t\t */\n\t\tfunction renderTargetTemperature() {\n\t\t\tlblTarget_text.nodeValue = Math.floor(self.target_temperature);\n\t\t\tsetClass(lblTargetHalf,'shown',self.target_temperature%1!=0);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - leaf\n\t\t */\n\t\tfunction renderLeaf() {\n\t\t\tsetClass(svg,'has-leaf',self.has_leaf);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - HVAC state\n\t\t */\n\t\tfunction renderHvacState() {\n\t\t\tArray.prototype.slice.call(svg.classList).forEach(function(c) {\n\t\t\t\tif (c.match(/^dial--state--/)) {\n\t\t\t\t\tsvg.classList.remove(c);\n\t\t\t\t};\n\t\t\t});\n\t\t\tsvg.classList.add('dial--state--'+self.hvac_state);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - away\n\t\t */\n\t\tfunction renderAway() {\n\t\t\tsvg.classList[self.away ? 'add' : 'remove']('away');\n\t\t}\n\t\t\n\t\t/*\n\t\t * Drag to control\n\t\t */\n\t\tvar _drag = {\n\t\t\tinProgress: false,\n\t\t\tstartPoint: null,\n\t\t\tstartTemperature: 0,\n\t\t\tlockAxis: undefined\n\t\t};\n\t\t\n\t\tfunction eventPosition(ev) {\n\t\t\tif (ev.targetTouches && ev.targetTouches.length) {\n\t\t\t\treturn [ev.targetTouches[0].clientX, ev.targetTouches[0].clientY];\n\t\t\t} else {\n\t\t\t\treturn [ev.x, ev.y];\n\t\t\t};\n\t\t}\n\t\t\n\t\tvar startDelay;\n\t\tfunction dragStart(ev) {\n\t\t\tstartDelay = setTimeout(function() {\n\t\t\t\tsetClass(svg, 'dial--edit', true);\n\t\t\t\t_drag.inProgress = true;\n\t\t\t\t_drag.startPoint = eventPosition(ev);\n\t\t\t\t_drag.startTemperature = self.target_temperature || options.minValue;\n\t\t\t\t_drag.lockAxis = undefined;\n\t\t\t},1000);\n\t\t};\n\t\t\n\t\tfunction dragEnd (ev) {\n\t\t\tclearTimeout(startDelay);\n\t\t\tsetClass(svg, 'dial--edit', false);\n\t\t\tif (!_drag.inProgress) return;\n\t\t\t_drag.inProgress = false;\n\t\t\tif (self.target_temperature != _drag.startTemperature) {\n\t\t\t\tif (typeof options.onSetTargetTemperature == 'function') {\n\t\t\t\t\toptions.onSetTargetTemperature(self.target_temperature);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tfunction dragMove(ev) {\n\t\t\tev.preventDefault();\n\t\t\tif (!_drag.inProgress) return;\n\t\t\tvar evPos = eventPosition(ev);\n\t\t\tvar dy = _drag.startPoint[1]-evPos[1];\n\t\t\tvar dx = evPos[0] - _drag.startPoint[0];\n\t\t\tvar dxy;\n\t\t\tif (_drag.lockAxis == 'x') {\n\t\t\t\tdxy = dx;\n\t\t\t} else if (_drag.lockAxis == 'y') {\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dy) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'y';\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dx) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'x';\n\t\t\t\tdxy = dx;\n\t\t\t} else {\n\t\t\t\tdxy = (Math.abs(dy) > Math.abs(dx)) ? dy : dx;\n\t\t\t};\n\t\t\tvar dValue = (dxy*getSizeRatio())/(options.diameter)*properties.rangeValue;\n\t\t\tself.target_temperature = roundHalf(_drag.startTemperature+dValue);\n\t\t}\n\t\t\n\t\tsvg.addEventListener('mousedown',dragStart);\n\t\tsvg.addEventListener('touchstart',dragStart);\n\t\t\n\t\tsvg.addEventListener('mouseup',dragEnd);\n\t\tsvg.addEventListener('mouseleave',dragEnd);\n\t\tsvg.addEventListener('touchend',dragEnd);\n\t\t\n\t\tsvg.addEventListener('mousemove',dragMove);\n\t\tsvg.addEventListener('touchmove',dragMove);\n\t\t//\n\t\t\n\t\t/*\n\t\t * Helper functions\n\t\t */\n\t\tfunction restrictTargetTemperature(t) {\n\t\t\treturn restrictToRange(roundHalf(t),options.minValue,options.maxValue);\n\t\t}\n\t\t\n\t\tfunction angle(point) {\n\t\t\tvar dx = point[0] - properties.radius;\n\t\t\tvar dy = point[1] - properties.radius;\n\t\t\tvar theta = Math.atan(dx/dy) / (Math.PI/180);\n\t\t\tif (point[0]>=properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta - 90;\n\t\t\t} else if (point[0]>=properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta+270;\n\t\t\t}\n\t\t\treturn theta;\n\t\t};\n\t\t\n\t\tfunction getSizeRatio() {\n\t\t\treturn options.diameter / targetElement.clientWidth;\n\t\t}\n\t\t\n\t};\n})();\n\n/* ==== */\nvar initializing = true;\n\n(function(scope) {\n    var nest = new thermostatDial(document.getElementById('thermostat'),{\n    \tonSetTargetTemperature: function(v) {\n    \t    var p = {\n    \t        \"ambient_temperature\":nest.ambient_temperature,\n    \t        \"target_temperature\":v,\n    \t        \"hvac_state\":nest.hvac_state,\n    \t        \"has_leaf\": nest.has_leaf,\n    \t        \"away\":nest.away\n    \t    };\n    \t\tscope.send({topic: \"target_temperature\", payload: p});\n    \t}\n    });\n    \n    scope.$watch('msg', function(data) {\n        if (initializing) {\n            initializing = false;\n            } else {\n            nest.ambient_temperature = data.payload.ambient_temperature || 0;\n            nest.target_temperature = data.payload.target_temperature || 0;\n            nest.hvac_state = data.payload.hvac_state || \"off\";\n            nest.has_leaf = data.payload.has_leaf || false;\n            nest.away = data.payload.away || false;\n        }\n        \n    });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1730,
        "y": 820,
        "wires": [
            [
                "9e88fc65.058ff"
            ]
        ]
    },
    {
        "id": "7bc1539d.3c518c",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "ambient_temperature",
        "func": "msg.topic = 'ambient_temperature';\nglobal.set(\"nest1_ambient_temperature\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 820,
        "wires": [
            [
                "dd0f0b69.bbee28"
            ]
        ]
    },
    {
        "id": "f8d3f1dc.c595b",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "target_temperature",
        "func": "msg.topic = 'target_temperature';\nglobal.set(\"nest1_target_temperature\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 700,
        "wires": [
            [
                "dd0f0b69.bbee28"
            ]
        ]
    },
    {
        "id": "b0b241af.71eba",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "hvac_state",
        "func": "msg.topic = \"hvac_state\";\nglobal.set(\"nest1_hvac_state\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 900,
        "wires": [
            [
                "dd0f0b69.bbee28"
            ]
        ]
    },
    {
        "id": "fab31610.ac3148",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "hvac_state",
        "payload": "off",
        "payloadType": "str",
        "x": 1090,
        "y": 940,
        "wires": [
            [
                "b0b241af.71eba"
            ]
        ]
    },
    {
        "id": "d38502bb.a2c3e",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "hvac_state",
        "payload": "heating",
        "payloadType": "str",
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "b0b241af.71eba"
            ]
        ]
    },
    {
        "id": "4b80260.58428dc",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "hvac_state",
        "payload": "cooling",
        "payloadType": "str",
        "x": 1070,
        "y": 1020,
        "wires": [
            [
                "b0b241af.71eba"
            ]
        ]
    },
    {
        "id": "dd0f0b69.bbee28",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "Data",
        "func": "if (msg.topic == \"target_temperature\") {\n    global.set(\"nest1_target_temperature\",msg.payload);\n}\nmsg.topic = \"update\";\nvar data = {\n    'ambient_temperature': global.get(\"nest1_ambient_temperature\") || 20,\n    'target_temperature': global.get(\"nest1_target_temperature\") || 21,\n    'hvac_state': global.get(\"nest1_hvac_state\") || 'off',\n    'has_leaf': global.get(\"nest1_has_leaf\") || 'false',\n    'away': global.get(\"nest1_away\") || 'false'\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 820,
        "wires": [
            [
                "941d174a.01c348"
            ]
        ]
    },
    {
        "id": "9e88fc65.058ff",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "New setpoint from UI",
        "func": "if (msg.topic == \"target_temperature\") {\n    global.set(\"nest1_target_temperature\",msg.payload.target_temperature);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "6ac1c80c.e83808",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "Load values on node-red startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1230,
        "y": 860,
        "wires": [
            [
                "dd0f0b69.bbee28"
            ]
        ]
    },
    {
        "id": "69b0a346e1f18ec6",
        "type": "comment",
        "z": "b6cd7d08.34935",
        "name": "TEMPERATURE VIEW",
        "info": "",
        "x": 760,
        "y": 860,
        "wires": []
    },
    {
        "id": "6d184978e23c3d8f",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "set heater globalVal on",
        "func": "global.set(\"HeaterToggle\",true);\nflow.set(\"tophyst\",false)\nflow.set(\"bottomhyst\",false)\nflow.set(\"hyststart\",true)\nflow.set(\"oldstatus\",true)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b5deeec3b50476e6",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "set heater globalVal off",
        "func": "global.set(\"HeaterToggle\",false);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9f1c91319ecf0146",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "Check Heater on/off",
        "func": "if( global.get(\"HeaterToggle\") === true )\n{\n    msg.payload=\"heating\";\n    msg.topic = \"hvac_state\";\n}\nelse\n{\n    msg.payload=\"off\";\n    msg.topic = \"hvac_state\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "b0b241af.71eba"
            ]
        ]
    },
    {
        "id": "4a35f559b4690901",
        "type": "inject",
        "z": "b6cd7d08.34935",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payloadType": "date",
        "x": 750,
        "y": 980,
        "wires": [
            [
                "9f1c91319ecf0146"
            ]
        ]
    },
    {
        "id": "e1020f2c893d1432",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 940,
        "wires": [
            [
                "9f1c91319ecf0146"
            ]
        ]
    },
    {
        "id": "a7073406bb997adb",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 900,
        "wires": [
            [
                "9f1c91319ecf0146"
            ]
        ]
    },
    {
        "id": "788088e08e7292d0",
        "type": "link in",
        "z": "b6cd7d08.34935",
        "name": "heater set temp",
        "links": [
            "026555e3ad71e0cf",
            "e342e6035235dcf4",
            "204604583c498134",
            "a5478aaf4daf1591"
        ],
        "x": 1045,
        "y": 700,
        "wires": [
            [
                "65f0fb14cb2fbb3d"
            ]
        ]
    },
    {
        "id": "5512cedcef6cc468",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "get connected relay",
        "func": "msg.payload=global.get(\"heatconnectrelay\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 300,
        "wires": [
            [
                "96d4c4cb45422986"
            ]
        ]
    },
    {
        "id": "bf97c6b00ba3ecec",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "get connected relay",
        "func": "msg.payload=global.get(\"heatconnectrelay\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 440,
        "wires": [
            [
                "0d014a2349bcc90e"
            ]
        ]
    },
    {
        "id": "96d4c4cb45422986",
        "type": "split",
        "z": "b6cd7d08.34935",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 300,
        "wires": [
            [
                "34624a1b.a87556"
            ]
        ]
    },
    {
        "id": "0d014a2349bcc90e",
        "type": "split",
        "z": "b6cd7d08.34935",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 440,
        "wires": [
            [
                "b4769425.119548"
            ]
        ]
    },
    {
        "id": "6c2b9df588efbd44",
        "type": "trigger",
        "z": "b6cd7d08.34935",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "e9309852d4d1c582",
                "4c10aed4e90a4dc5"
            ]
        ]
    },
    {
        "id": "441094683e241bdf",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "reset",
        "func": "\nmsg.reset=true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 90,
        "y": 500,
        "wires": [
            [
                "6c2b9df588efbd44"
            ]
        ]
    },
    {
        "id": "e9309852d4d1c582",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 500,
        "wires": [
            [
                "441094683e241bdf"
            ]
        ]
    },
    {
        "id": "ba62da446374db41",
        "type": "link in",
        "z": "b6cd7d08.34935",
        "name": "HeaterSollTemp",
        "links": [
            "174fb16fd5db99e5",
            "117583829b1c4858"
        ],
        "x": 1045,
        "y": 740,
        "wires": [
            [
                "65f0fb14cb2fbb3d"
            ]
        ]
    },
    {
        "id": "500dcb53.aa8be4",
        "type": "file",
        "z": "b6cd7d08.34935",
        "name": "",
        "filename": "pekaway/savetimer",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 920,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "689f7af0527c84bb",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "check timer on/off",
        "func": "var check = global.get(\"heattimeronoff\");\n\nmsg.payload = \"Attention: Heater-Timer is set, Heater will act according to the timers! Manual Start/Stop will be overrriden!\"\n\nif(check === true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "6337e5982e12f4a6"
            ]
        ]
    },
    {
        "id": "6337e5982e12f4a6",
        "type": "ui_toast",
        "z": "b6cd7d08.34935",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9f5aa5c71fdca150",
        "type": "trigger",
        "z": "b6cd7d08.34935",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 950,
        "y": 1060,
        "wires": [
            [
                "7e02bb7764c543cb"
            ]
        ]
    },
    {
        "id": "f8a9b2341db30a2b",
        "type": "comment",
        "z": "b6cd7d08.34935",
        "name": "Hysterese Check",
        "info": "",
        "x": 460,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7e02bb7764c543cb",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "get inside tempsensor",
        "func": "if (global.get(\"hysteresis\") == false) {\n    return null\n}\n\nmsg.payload = global.get(\"heattempsensor\");\n\nif(msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4)\nmsg.payload=\"no sensor\"\n\nif(msg.payload == 1)\nmsg.payload = global.get(\"temp1\");\n\nif(msg.payload == 2)\nmsg.payload = global.get(\"temp2\");\n\nif(msg.payload == 3)\nmsg.payload = global.get(\"temp3\");\n\nif(msg.payload == 4)\nmsg.payload = global.get(\"temp4\");\n\nif(global.get(\"temp1\") == \"\" && global.get(\"temp2\") == \"\" &&global.get(\"temp3\") == \"\" && global.get(\"temp4\") == \"\")\n{\n    msg.payload =\"no TempSensor\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1060,
        "wires": [
            [
                "6bdde55840e63aaf"
            ]
        ]
    },
    {
        "id": "6bdde55840e63aaf",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "check hysteresis",
        "func": "var hyst = global.get(\"hysteresis\");\nvar settemp = global.get(\"settemp\");\nvar temp =Number(msg.payload);\n\n\n\n//top point\nif((settemp+hyst)<= temp )\n{\nflow.set(\"tophyst\",true)\nflow.set(\"bottomhyst\",false)\nflow.set(\"hyststart\",false)\n}\n\n\n//bottom point\nif((settemp-hyst)>= temp && flow.get(\"hyststart\")==false)\n{\nflow.set(\"tophyst\",false)\nflow.set(\"bottomhyst\",true)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1060,
        "wires": [
            [
                "e22aabf7c2710f99"
            ]
        ]
    },
    {
        "id": "e22aabf7c2710f99",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "switch on/off",
        "func": "var top = flow.get(\"tophyst\");\n\nif(top == true)\nmsg.payload = false; \n\nif(top == false)\nmsg.payload = true; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1060,
        "wires": [
            [
                "4a99f4f3dd2ab9f2"
            ]
        ]
    },
    {
        "id": "4a99f4f3dd2ab9f2",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "change?",
        "func": "var oldstatus = flow.get(\"oldstatus\"); \nif(msg.payload != oldstatus)\n{\n    flow.set(\"oldstatus\",msg.payload); \n    return msg;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1060,
        "wires": [
            [
                "463a2a21d6db0ed8"
            ]
        ]
    },
    {
        "id": "463a2a21d6db0ed8",
        "type": "switch",
        "z": "b6cd7d08.34935",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1850,
        "y": 1060,
        "wires": [
            [
                "9b3fc01458c8cf09"
            ],
            [
                "9fae8927d8332b8a",
                "36db7746bfc6449c"
            ]
        ]
    },
    {
        "id": "9b3fc01458c8cf09",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "hyst-timer start",
        "mode": "link",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 1975,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9fae8927d8332b8a",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "hyst timer off",
        "mode": "link",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1975,
        "y": 1060,
        "wires": []
    },
    {
        "id": "de017432cf865f01",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "check Heatertoggle false",
        "func": "if(global.get(\"HeaterToggle\") == false) {\n    msg.reset=true;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "9f5aa5c71fdca150"
            ]
        ]
    },
    {
        "id": "4c2ff550cab39384",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "25",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 1060,
        "wires": [
            [
                "de017432cf865f01"
            ]
        ]
    },
    {
        "id": "2f7f98c2133c3722",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "set Heatertoggle true",
        "func": "global.set(\"HeaterToggle\", true);\nmsg.payload = global.get(\"HeaterToggle\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "36db7746bfc6449c",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2050,
        "y": 1100,
        "wires": [
            [
                "2f7f98c2133c3722"
            ]
        ]
    },
    {
        "id": "6170c7bb5afa2ee0",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "Update Autoterm",
        "mode": "link",
        "links": [
            "d4f5fa9c86e1dffc"
        ],
        "x": 1335,
        "y": 740,
        "wires": []
    },
    {
        "id": "b8e3ecee0b573c95",
        "type": "ui_slider",
        "z": "b6cd7d08.34935",
        "name": "",
        "label": "Set Runtime (min)",
        "tooltip": "set a runtime in min (max 600)",
        "group": "2bd22a1d380636dc",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "600",
        "step": "20",
        "className": "",
        "x": 450,
        "y": 1140,
        "wires": [
            [
                "be0516f5cab3eb3e",
                "2a218bb3d3288432"
            ]
        ]
    },
    {
        "id": "e258c939e86e4b99",
        "type": "countdown",
        "z": "b6cd7d08.34935",
        "name": "",
        "topic": "",
        "payloadTimerStart": "true",
        "payloadTimerStartType": "bool",
        "payloadTimerStop": "false",
        "payloadTimerStopType": "bool",
        "timer": 30,
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "minuteCounter": false,
        "x": 910,
        "y": 1140,
        "wires": [
            [
                "9c31f6ddfb094bea"
            ],
            [
                "9c31f6ddfb094bea",
                "14c0b5ae132daa0a"
            ]
        ]
    },
    {
        "id": "be0516f5cab3eb3e",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "set Topic to Control",
        "func": "if (msg.payload == 0) {\n    msg.payload = \"cancel\"\n    msg.topic = \"control\"\n    return msg\n}\nelse {\n    msg.payload = Number(msg.payload*60)\n    msg.topic=\"control\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1140,
        "wires": [
            [
                "e258c939e86e4b99",
                "c4866e1a5477f481"
            ]
        ]
    },
    {
        "id": "9c31f6ddfb094bea",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "turn heater off",
        "func": "if(msg.payload==false)\n{\nmsg.payload=\"Off\";\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1140,
        "wires": [
            [
                "4c10aed4e90a4dc5"
            ]
        ]
    },
    {
        "id": "a3bc533422d7b201",
        "type": "ui_text",
        "z": "b6cd7d08.34935",
        "group": "2bd22a1d380636dc",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "remaining time:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1300,
        "y": 1180,
        "wires": []
    },
    {
        "id": "14c0b5ae132daa0a",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "remaining time",
        "func": "if (msg.payload == -1 || msg.payload == -0) {\n    return null\n}\n\nif (msg.payload == \"cancel\") {\n    msg.payload = \" \"\n    return msg\n}\nelse {\n    msg.payload = msg.payload/60;\n    msg.payload = msg.payload.toFixed(0);\n    msg.payload = msg.payload + \"min\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1180,
        "wires": [
            [
                "a3bc533422d7b201"
            ]
        ]
    },
    {
        "id": "2a218bb3d3288432",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "e258c939e86e4b99"
            ]
        ]
    },
    {
        "id": "8af79106108d6249",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 1,
        "width": "3",
        "height": "2",
        "passthru": false,
        "label": "On",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "on",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1260,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "080e681788bd8398",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "filter commands",
        "func": "if (msg.payload == \"on\") {\n    msg.payload = \"b\"\n    global.set(\"maxxair\", true)\n    global.set(\"maxxair_lid\", \"open\")\n}\nelse if (msg.payload == \"off\") {\n    msg.payload = \"a\"\n    global.set(\"maxxair\", false)\n    global.set(\"maxxair_lid\", \"close\")\n}\nelse if (msg.payload == \"open\") {\n    msg.payload = \"d\"\n    global.set(\"maxxair_lid\", \"open\")\n}\nelse if (msg.payload == \"close\") {\n    msg.payload = \"a\"\n    global.set(\"maxxair\", false)\n    //msg.payload = \"c\"\n    global.set(\"maxxair_lid\", \"close\")\n}\nelse if (msg.payload == \"in\") {\n    msg.payload = \"f\"\n    global.set(\"maxxair_direction\", \"in\")\n}\nelse if (msg.payload == \"out\") {\n    msg.payload = \"e\"\n    global.set(\"maxxair_direction\", \"out\")\n}\nelse if (msg.payload == 1) {\n    msg.payload = \"0\"\n    global.set(\"maxxair_speed\", 10)\n}\nelse if (msg.payload == 2) {\n    msg.payload = \"1\"\n    global.set(\"maxxair_speed\", 20)\n}\nelse if (msg.payload == 3) {\n    msg.payload = \"2\"\n    global.set(\"maxxair_speed\", 30)\n}\nelse if (msg.payload == 4) {\n    msg.payload = \"3\"\n    global.set(\"maxxair_speed\", 40)\n}\nelse if (msg.payload == 5) {\n    msg.payload = \"4\"\n    global.set(\"maxxair_speed\", 50)\n}\nelse if (msg.payload == 6) {\n    msg.payload = \"5\"\n    global.set(\"maxxair_speed\", 60)\n}\nelse if (msg.payload == 7) {\n    msg.payload = \"6\"\n    global.set(\"maxxair_speed\", 70)\n}\nelse if (msg.payload == 8) {\n    msg.payload = \"7\"\n    global.set(\"maxxair_speed\", 80)\n}\nelse if (msg.payload == 9) {\n    msg.payload = \"8\"\n    global.set(\"maxxair_speed\", 90)\n}\nelse if (msg.payload == 10) {\n    msg.payload = \"9\"\n    global.set(\"maxxair_speed\", 100)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1300,
        "wires": [
            [
                "7d6ea3fe6beaf3ba",
                "9e18aeadb5fa422c"
            ]
        ]
    },
    {
        "id": "8702063255977846",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 2,
        "width": "3",
        "height": "2",
        "passthru": false,
        "label": "Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "off",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1300,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "27076aefceb7ca3d",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "maxxfan on/off",
        "mode": "link",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 974,
        "y": 1269,
        "wires": []
    },
    {
        "id": "44e7b0c37ef1a392",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "open",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1340,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "f01c7d69ce4ee6b2",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "close",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1380,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "c0564d2fee99bdff",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "In",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "in",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1420,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "0dc1dc5e48f5c773",
        "type": "ui_button",
        "z": "b6cd7d08.34935",
        "name": "",
        "group": "7a4cccdc02082fbb",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "out",
        "payloadType": "str",
        "topic": "maxxair",
        "topicType": "msg",
        "x": 210,
        "y": 1460,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "a0c11aceb7452753",
        "type": "ui_slider",
        "z": "b6cd7d08.34935",
        "name": "",
        "label": "speed",
        "tooltip": "",
        "group": "7a4cccdc02082fbb",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "maxxair",
        "topicType": "msg",
        "min": "1",
        "max": 10,
        "step": 1,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "080e681788bd8398"
            ]
        ]
    },
    {
        "id": "7d6ea3fe6beaf3ba",
        "type": "function",
        "z": "b6cd7d08.34935",
        "d": true,
        "name": "",
        "func": "msg.payload = global.get(\"maxxair\")\nnode.send([msg, null, null])\nmsg.payload = global.get(\"maxxair_lid\")\nnode.send([null, msg, null])\nmsg.payload = global.get(\"maxxair_direction\")\nnode.send([null, null, msg])",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "dd397f67ce5d21fd",
        "type": "comment",
        "z": "b6cd7d08.34935",
        "name": "MaxxAir Fan Controller",
        "info": "",
        "x": 440,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1140e78f8a3923c0",
        "type": "switch",
        "z": "b6cd7d08.34935",
        "name": "ROUTER",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 840,
        "y": 1300,
        "wires": [
            [
                "27076aefceb7ca3d"
            ],
            [
                "0cc59064c3a278d6"
            ],
            [
                "3b407df01a5b9435"
            ],
            [
                "42589028751521b8"
            ]
        ]
    },
    {
        "id": "9e18aeadb5fa422c",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "check uart settings",
        "func": "if (global.get(\"usb1uart\") == \"9\") {\n    msg.topic=1;\n    return msg;\n}\nif (global.get(\"usb2uart\") == \"9\") {\n    msg.topic=2;\n    return msg;\n}\nif (global.get(\"usb3uart\") == \"9\") {\n    msg.topic=3;\n    return msg;\n}\nif (global.get(\"usb4uart\") == \"9\"){\n    msg.topic=4;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1300,
        "wires": [
            [
                "1140e78f8a3923c0"
            ]
        ]
    },
    {
        "id": "0cc59064c3a278d6",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "maxxfan on/off",
        "mode": "link",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 974,
        "y": 1289,
        "wires": []
    },
    {
        "id": "3b407df01a5b9435",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "maxxfan on/off",
        "mode": "link",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 974,
        "y": 1309,
        "wires": []
    },
    {
        "id": "42589028751521b8",
        "type": "link out",
        "z": "b6cd7d08.34935",
        "name": "maxxfan on/off",
        "mode": "link",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 974,
        "y": 1329,
        "wires": []
    },
    {
        "id": "df953ef470f7b6b5",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "stop countdown",
        "func": "msg.payload = \"cancel\"\nmsg.topic = \"control\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "e258c939e86e4b99",
                "cec20f1d4df6a5aa"
            ]
        ]
    },
    {
        "id": "cec20f1d4df6a5aa",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "3a6f6d04dbcf7cc9",
                "14c0b5ae132daa0a"
            ]
        ]
    },
    {
        "id": "3a6f6d04dbcf7cc9",
        "type": "function",
        "z": "b6cd7d08.34935",
        "name": "stop countdown",
        "func": "msg.payload = 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1140,
        "wires": [
            [
                "b8e3ecee0b573c95"
            ]
        ]
    },
    {
        "id": "c4866e1a5477f481",
        "type": "delay",
        "z": "b6cd7d08.34935",
        "name": "400ms",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 1180,
        "wires": [
            [
                "14c0b5ae132daa0a"
            ]
        ]
    },
    {
        "id": "d7916b962011a683",
        "type": "ui_button",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start Ventilation",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "9",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 360,
        "wires": [
            [
                "6f15dee618f4da3f"
            ]
        ]
    },
    {
        "id": "38064e3aeee910e3",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm start ",
        "links": [
            "112a5a38da632e10",
            "154d5b5924605df3",
            "5c6aeef08e518260",
            "2385d9ef230b01a6"
        ],
        "x": 185,
        "y": 580,
        "wires": [
            [
                "ae8f0a52c274b5af",
                "fae420fb8fed2a87"
            ]
        ]
    },
    {
        "id": "0422f9d6c34fec81",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm in",
        "links": [
            "50d29d7d19a7715c",
            "0ac0c3e95fde0d46",
            "c197b973a4cfba98",
            "b82276bd581d6801",
            "df2d1e216890ab1e",
            "51a6a2320386c92b",
            "68309d30d74db678",
            "364010e3c3bb676b"
        ],
        "x": 245,
        "y": 1060,
        "wires": [
            [
                "2f2d85c42b3a26f8"
            ]
        ]
    },
    {
        "id": "f7a0113fc9fc8bc5",
        "type": "binary",
        "z": "60d59772.e5b728",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nb8 => USEworktime,\nb8 => worktime,\nb8 => tempsource,\nb8 => temperatur,\nb8 => waitmode,\nb8 => level\n\n",
        "x": 790,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "07348d3c0e4be906",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check settings?",
        "func": "if(msg.payload[4] == 0x02)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1100,
        "wires": [
            [
                "f7a0113fc9fc8bc5"
            ]
        ]
    },
    {
        "id": "e03b86846149e618",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check Version?",
        "func": "if(msg.payload[4] == 0x06)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "04c0e9323d0f1c18"
            ]
        ]
    },
    {
        "id": "6c561084bee22a4b",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check Version?",
        "func": "if(msg.payload[4] == 0x0F)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1140,
        "wires": [
            [
                "9e0f03c4623a4715"
            ]
        ]
    },
    {
        "id": "9e0f03c4623a4715",
        "type": "binary",
        "z": "60d59772.e5b728",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nb8 => statuscode1,\nb8 => statuscode2,\nx8,\nb8 => internaltemp,\nb8 => externaltemp,\nx8,\nb8 => voltage, \nx8, \nb8 => heatertemp,\nx8,\nx8,\nb8 => fanrpmset,\nb8 => fanrpmactual,\nx8,\nb8 => frequencyfuelpump,\nx8,\nx8,\nx8,\nx8\n\n",
        "x": 790,
        "y": 1140,
        "wires": [
            [
                "351647c07cb3a903",
                "bdb052ad99538189",
                "5b4cba8cb821d4b3",
                "37ee133fbfaf722a",
                "021a056131f91323"
            ]
        ]
    },
    {
        "id": "c94e1e0190bc31e0",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Ventilation SET",
        "func": "\n\nmsg.payload = \"AA03040023FFFF0\"+ msg.payload + \"FF\";\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 360,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "6f15dee618f4da3f",
        "type": "ui_slider",
        "z": "60d59772.e5b728",
        "name": "",
        "label": "Ventilation ",
        "tooltip": "",
        "group": "4373a7f49bda8706",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "10",
        "step": 1,
        "className": "",
        "x": 910,
        "y": 360,
        "wires": [
            [
                "deac05d95d3f4fd4",
                "6d7aee2ebc2f8e7e"
            ]
        ]
    },
    {
        "id": "351647c07cb3a903",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\n\nif(msg.payload.statuscode1 == 0 && msg.payload.statuscode2==1 )\nmsg.payload = \"standby\";\n\n\nif(msg.payload.statuscode1 == 1 && msg.payload.statuscode2==0 )\nmsg.payload = \"cooling flame sensor\";\n\n\n\nif(msg.payload.statuscode1 == 1 && msg.payload.statuscode2==1 )\nmsg.payload = \"ventilation\";\n\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==0 )\nmsg.payload = \"heating glow plug2\";\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==1 )\nmsg.payload = \"heating glow plug1\";\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==2 )\nmsg.payload = \"ignition 1\";\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==3 )\nmsg.payload = \"igintion 2\";\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==4 )\nmsg.payload = \"heating\";\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==5)\nmsg.payload = \"no ingnition error\";\n\n\nif(msg.payload.statuscode1 == 2 && msg.payload.statuscode2==6 )\nmsg.payload = \"no fuel? retry\";\n\n\nif(msg.payload.statuscode1 == 3 && msg.payload.statuscode2==0 )\nmsg.payload = \"heating\";\n\n\nif(msg.payload.statuscode1 == 3 && msg.payload.statuscode2==35 )\nmsg.payload = \"only FAN\";\n\n\nif(msg.payload.statuscode1 == 3 && msg.payload.statuscode2==4 )\nmsg.payload = \"cooling down\";\n\n\nif(msg.payload.statuscode1 == 4 && msg.payload.statuscode2==0 )\nmsg.payload = \"shutting down\";\n\n\n\nglobal.set(\"heatstatus\", msg.payload);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1000,
        "wires": [
            [
                "d30bdf52c5d579d1"
            ]
        ]
    },
    {
        "id": "bdb052ad99538189",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\nmsg.payload = msg.payload.voltage/10;\nif(msg.payload > 17)\nmsg.payload=0;\nglobal.set(\"heatvolt\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1040,
        "wires": [
            [
                "32440c1becbff081"
            ]
        ]
    },
    {
        "id": "32440c1becbff081",
        "type": "ui_gauge",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": 0,
        "max": "16",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1360,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4cac01281cc2e4c4",
        "type": "ui_gauge",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Fuelpump",
        "label": "hz",
        "format": "{{value}}",
        "min": 0,
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "3c36e64fd498eaa3",
        "type": "ui_gauge",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 5,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Fan",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "6000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1350,
        "y": 1120,
        "wires": []
    },
    {
        "id": "025fa159475a4941",
        "type": "ui_gauge",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 6,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Heatertemp",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "350",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1370,
        "y": 1160,
        "wires": []
    },
    {
        "id": "37ee133fbfaf722a",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\nmsg.payload = msg.payload.frequencyfuelpump/100;\n\nglobal.set(\"heatpump\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1080,
        "wires": [
            [
                "4cac01281cc2e4c4"
            ]
        ]
    },
    {
        "id": "5b4cba8cb821d4b3",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\nmsg.payload = msg.payload.fanrpmactual*60;\n\n\nglobal.set(\"heatfan\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1120,
        "wires": [
            [
                "3c36e64fd498eaa3"
            ]
        ]
    },
    {
        "id": "021a056131f91323",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\nmsg.payload = msg.payload.heatertemp-15;\n\nglobal.set(\"heattemp\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1160,
        "wires": [
            [
                "025fa159475a4941"
            ]
        ]
    },
    {
        "id": "763684db24e0d87c",
        "type": "ui_slider",
        "z": "60d59772.e5b728",
        "name": "",
        "label": "Heatingpower",
        "tooltip": "",
        "group": "4373a7f49bda8706",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "10",
        "step": 1,
        "className": "",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "a4adc9cb34249934",
                "29fbf033dae97291",
                "a9e13e851566a2b1"
            ]
        ]
    },
    {
        "id": "deb95d2937eb6268",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heating power",
        "func": "flow.set(\"heatingpower\",msg.payload);\nglobal.set(\"Autotermheatingpower\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "04c0e9323d0f1c18",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\nvar version = \"\";\n\nversion = + (parseInt(msg.payload[5])).toString()\nversion= version + \".\";\nversion = version + (parseInt(msg.payload[6])).toString();\nversion= version + \".\";\nversion = version + (parseInt(msg.payload[7])).toString();\nversion= version  + \".\";\nversion = version + (parseInt(msg.payload[8])).toString();\n\n\nmsg.payload = version; \n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1060,
        "wires": [
            [
                "74c4d2d1d1c4821e"
            ]
        ]
    },
    {
        "id": "74c4d2d1d1c4821e",
        "type": "ui_text",
        "z": "60d59772.e5b728",
        "group": "4373a7f49bda8706",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 1060,
        "wires": []
    },
    {
        "id": "49042e15a5a9b19d",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set ventilation 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "6f15dee618f4da3f"
            ]
        ]
    },
    {
        "id": "116963a93c08c684",
        "type": "ui_button",
        "z": "60d59772.e5b728",
        "name": "",
        "group": "4373a7f49bda8706",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start TempMode",
        "tooltip": "heater tries to hold set temp without going off. Only works with tempsensor configured.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "9",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 320,
        "y": 780,
        "wires": [
            [
                "8d2fb7cf152c8e6a"
            ]
        ]
    },
    {
        "id": "4c1999d33c313348",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm stop",
        "links": [
            "8c2f419ba40a5988"
        ],
        "x": 385,
        "y": 440,
        "wires": [
            [
                "49042e15a5a9b19d",
                "64df864a3608f55a",
                "566b5d6b1b6623fa"
            ]
        ]
    },
    {
        "id": "0c51e6151f7f10f2",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "send request frames 2D",
        "info": "",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "0bc08b96133beba0",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "turn off 4D and 2D",
        "func": "const buf = Buffer.from([\n0xAA,\n0x03,\n0x00,\n0x00,\n0x03,\n0x5D,\n0x7C\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 440,
        "wires": [
            [
                "c6ccf22d606e0af1"
            ]
        ]
    },
    {
        "id": "be43dc5d4e5c4444",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "ventilation",
        "info": "",
        "x": 360,
        "y": 320,
        "wires": []
    },
    {
        "id": "c3d6b061f583647e",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "OFF",
        "info": "",
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "bbedb5646f840486",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "2D",
        "info": "",
        "x": 350,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8d2fb7cf152c8e6a",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check sensor",
        "func": "msg.payload = global.get(\"heattempsensor\");\n\nvar usb1 = parseInt(global.get(\"usb1uart\"));\nvar usb2 = parseInt(global.get(\"usb2uart\"));\nvar usb3 = parseInt(global.get(\"usb3uart\"));\nvar usb4 = parseInt(global.get(\"usb4uart\"));\n\nif (usb1 != 5 && usb2 != 5 && usb3 != 5 && usb4 != 5 && usb1 != 8 && usb2 != 8 && usb3 != 8 && usb4 != 8) {\n    return null\n}\n\nif (msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4 && msg.payload != 5 && msg.payload != 6)\n    msg.payload = \"no sensor\"\n\nif (msg.payload == 1)\n    msg.payload = global.get(\"temp1\");\n\nif (msg.payload == 2)\n    msg.payload = global.get(\"temp2\");\n\nif (msg.payload == 3)\n    msg.payload = global.get(\"temp3\");\n\nif (msg.payload == 4)\n    msg.payload = global.get(\"temp4\");\n\nif (msg.payload == 5)\n    msg.global.get(\"dimmytemp1\")\n\nif (msg.payload == 6)\n    msg.global.get(\"dimmytemp2\")\n\n\nif (global.get(\"temp1\") == \"\" && global.get(\"temp2\") == \"\" && global.get(\"temp3\") == \"\" && global.get(\"temp4\") == \"\" && global.get(\"dimmytemp1\") == \"\" && global.get(\"dimmytemp2\") == \"\") {\n    msg.payload = \"no TempSensor\"\n}\n\nif(msg.payload === \"no TempSensor\")\n{\n msg.payload =\"TempMode not available, no InsideTempSensor set\";\n return [msg,null];\n}\nelse\n{\n msg.topic=\"setpoint\";\n return [null,msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 780,
        "wires": [
            [
                "eb77e429282bfa2e"
            ],
            [
                "c2daa1b39ca72aa9",
                "89d216b654608f0d"
            ]
        ]
    },
    {
        "id": "eb77e429282bfa2e",
        "type": "ui_toast",
        "z": "60d59772.e5b728",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "0bbb658736c30665",
        "type": "switch",
        "z": "60d59772.e5b728",
        "name": "ROUTER",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "896c9f755289f08b"
            ],
            [
                "0e3b61ab13c7f0c9"
            ],
            [
                "cacdb6449f6027b2"
            ],
            [
                "48645088c99ca6d3"
            ],
            [
                "fcb3a99d4e807dd9"
            ],
            [
                "31920bccd53dd51a"
            ]
        ]
    },
    {
        "id": "896c9f755289f08b",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "bb2a109a66b34c73"
        ],
        "x": 1485,
        "y": 20,
        "wires": []
    },
    {
        "id": "0e3b61ab13c7f0c9",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "0b82ac1efa8711d7"
        ],
        "x": 1485,
        "y": 60,
        "wires": []
    },
    {
        "id": "cacdb6449f6027b2",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 1485,
        "y": 100,
        "wires": []
    },
    {
        "id": "48645088c99ca6d3",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 1485,
        "y": 140,
        "wires": []
    },
    {
        "id": "fcb3a99d4e807dd9",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 1485,
        "y": 180,
        "wires": []
    },
    {
        "id": "31920bccd53dd51a",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1485,
        "y": 220,
        "wires": []
    },
    {
        "id": "e6f5d17b430ade7b",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "HeatingPower",
        "links": [
            "90559203608f86e5"
        ],
        "x": 585,
        "y": 520,
        "wires": [
            [
                "763684db24e0d87c"
            ]
        ]
    },
    {
        "id": "47595df690855285",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm temp mode in",
        "links": [
            "4ddbefc0e8b9d5ee"
        ],
        "x": 185,
        "y": 780,
        "wires": [
            [
                "116963a93c08c684"
            ]
        ]
    },
    {
        "id": "c6b72f7e0baafb98",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm in",
        "links": [
            "364010e3c3bb676b",
            "51a6a2320386c92b",
            "68309d30d74db678",
            "df2d1e216890ab1e"
        ],
        "x": 245,
        "y": 1220,
        "wires": [
            [
                "3dd3a75f15f4f1c7"
            ]
        ]
    },
    {
        "id": "8d0ec10b537878a1",
        "type": "inject",
        "z": "60d59772.e5b728",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "6",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "a9a2161ef3f917f0"
            ]
        ]
    },
    {
        "id": "a9a2161ef3f917f0",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart\")==8 || global.get(\"usb1uart\")==8 || global.get(\"usb2uart\")==8 || global.get(\"usb3uart\")==8 || global.get(\"usb4uart\")==8) \nreturn msg\n\nif (global.get(\"multiuart\") == 5 || global.get(\"usb1uart\") == 5 || global.get(\"usb2uart\") == 5 || global.get(\"usb3uart\") == 5 || global.get(\"usb4uart\") == 5)\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "a808ac379ce54eaa",
                "38667d6808c63f59"
            ]
        ]
    },
    {
        "id": "0b20476b375f76f3",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "request Status",
        "func": "const buf = Buffer.from([\n0xAA,\n0x03,\n0x00,\n0x00,\n0x0f,\n0x58,\n0x7C\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "977a82ac99b9dc58"
            ]
        ]
    },
    {
        "id": "652a027755346655",
        "type": "binary",
        "z": "60d59772.e5b728",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nb8 => Stautus,\nb8 => Status2,\nb8 => error,\nb8 => heaterTemp,\nb8 => externTemp,\nx8,\nb8 => batteryVoltage,\nb16 => flameTempK,\nx8,\nx8\n\n\n",
        "x": 790,
        "y": 1220,
        "wires": [
            [
                "3ed3ef18c5c6608c",
                "ee3da3bce51c2832"
            ]
        ]
    },
    {
        "id": "c2ac75af186a138a",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check Status?",
        "func": "if(msg.payload[4] == 0x0F)\nreturn msg;\n\n /*\n\n Status:\nController asks for heater status, polls this one periodically.\n\nC >> H aa 03 00 00 0f | 58 7c\nH >> C aa 04 0a 00 0f | 00 01 00 1a 7f 00 7b 01 2b 00 | 50 ad\n                        s1 s2 er ht et    bv ft ft\ns1: Status\n00: Heater off\n01: Starting\n02: Warming up\n03: Running\n04: Shutting down\ner: Heater errors\nht: Heater temperature (as single byte in °C)\net: External temperature (as single byte in °C, 7f when disconnected)\nbv: Battery voltage (as voltage * 10)\nft: Heater flame temperature (as two bytes, big endian, in Kelvin)\n\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1220,
        "wires": [
            [
                "652a027755346655"
            ]
        ]
    },
    {
        "id": "38667d6808c63f59",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "request settings",
        "func": "const buf = Buffer.from([\n0xAA,\n0x03,\n0x00,\n0x00,\n0x02,\n0x9d,\n0xbd\n]);\n\nmsg.payload = buf;\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 120,
        "wires": [
            [
                "977a82ac99b9dc58"
            ]
        ]
    },
    {
        "id": "a808ac379ce54eaa",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "079867967e6f10db",
                "0b20476b375f76f3"
            ]
        ]
    },
    {
        "id": "cc928dd74ab23fcb",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check Seetings?",
        "func": "if(msg.payload[4] == 0x02)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "e09d18a1b25b8511"
            ]
        ]
    },
    {
        "id": "e09d18a1b25b8511",
        "type": "binary",
        "z": "60d59772.e5b728",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb8 => Mode,\nb8 => TempSetpoint,\nb8 => Ventilation,\nb8 => Powerlevel,\nx8,\nx8\n\n\n",
        "x": 790,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3ed3ef18c5c6608c",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\n\nif (msg.payload.Stautus == 0)\nmsg.payload=\"Heater off\"\n\n\nif (msg.payload.Stautus == 1)\n    msg.payload = \"starting\"\n\n\nif (msg.payload.Stautus == 2)\n    msg.payload = \"Warming UP\"\n\n\nif (msg.payload.Stautus == 3)\n    msg.payload = \"Running\"\n\nif (msg.payload.Stautus == 4)\n    msg.payload = \"Shutting Down\"\n\n\n\n\n\nglobal.set(\"heatstatus\", msg.payload);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1200,
        "wires": [
            [
                "d30bdf52c5d579d1"
            ]
        ]
    },
    {
        "id": "58e7d2b72a006aee",
        "type": "inject",
        "z": "60d59772.e5b728",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "a03faeade0ff0c61",
                "9ab0120df096d0fb"
            ]
        ]
    },
    {
        "id": "a03faeade0ff0c61",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "init prepare",
        "func": "\n\n\nmsg.payload = \"1b\";\nreturn msg\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1460,
        "wires": [
            [
                "2a1f7c14a0c4ac78"
            ]
        ]
    },
    {
        "id": "2a1f7c14a0c4ac78",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "buffer it",
        "func": "var buf = Buffer.from(msg.payload,\"hex\");\n\nmsg.payload=buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1500,
        "wires": [
            [
                "3f9db573bfed27be"
            ]
        ]
    },
    {
        "id": "a60c5c0b224a058c",
        "type": "inject",
        "z": "60d59772.e5b728",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 1500,
        "wires": [
            [
                "27a1ddbe70e21e86"
            ]
        ]
    },
    {
        "id": "27a1ddbe70e21e86",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "init  start",
        "func": "\n\n\nmsg.payload = \"aa0300001c\";\nreturn msg\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1500,
        "wires": [
            [
                "3d1a51a35062fbaf"
            ]
        ]
    },
    {
        "id": "3f9db573bfed27be",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "autoterm out",
        "mode": "link",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1225,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4cb3aa39e7df5dbb",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "autoterm in",
        "links": [
            "50d29d7d19a7715c",
            "0ac0c3e95fde0d46",
            "c197b973a4cfba98",
            "b82276bd581d6801",
            "df2d1e216890ab1e",
            "51a6a2320386c92b",
            "68309d30d74db678",
            "364010e3c3bb676b"
        ],
        "x": 215,
        "y": 1560,
        "wires": [
            [
                "466506367d98a436",
                "b30ad7ff889c2ca2"
            ]
        ]
    },
    {
        "id": "466506367d98a436",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Ini1 Stage 1",
        "func": "if (msg.payload[1] == 0x00 && msg.payload[4] == 0x1c )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1560,
        "wires": [
            [
                "71aaad1d2d6ada62"
            ]
        ]
    },
    {
        "id": "84683510613e691a",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "Init ** not needed",
        "info": "Initialization:\nThese messages are used after connecting the controller to the heater. They probably contain information about the type of heater and controller.\n\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  1b\nC >> H  aa 03 00 00 1c | 95 3d\nH >> P  aa 00 00 00 1c | d1 3d\nC >> H  aa 03 00 00 04 | 9f 3d\nH >> P  aa 04 05 00 04 | 12 9e 00 15 80 | 05 3d\nC >> H  aa 03 00 00 06 | 5e bc\nH >> P  aa 04 05 00 06 | 03 01 0e 02 03 | 62 c1\nC >> H  aa 03 00 00 06 | 5e bc\nH >> P  aa 04 05 00 06 | 03 01 0e 02 03 | 62 c1",
        "x": 380,
        "y": 1380,
        "wires": []
    },
    {
        "id": "bf26c1f3f19e93ae",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "init  ans1",
        "func": "\n\n\nmsg.payload = \"aa03000004\";\nreturn msg\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1560,
        "wires": [
            [
                "55c6b7faab977834"
            ]
        ]
    },
    {
        "id": "55c6b7faab977834",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "CRC16-modbus",
        "func": "var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                window.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            //crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1560,
        "wires": [
            [
                "3f9db573bfed27be",
                "2a1f7c14a0c4ac78"
            ]
        ]
    },
    {
        "id": "b30ad7ff889c2ca2",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Ini1 Stage 2",
        "func": "if (msg.payload[1] == 0x04 && msg.payload[4] == 0x04 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1620,
        "wires": [
            [
                "860f2ba8798845dd"
            ]
        ]
    },
    {
        "id": "bb93e94c590f3ab1",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "init  ans2",
        "func": "\n\n\nmsg.payload = \"aa03000006\";\nreturn msg\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1620,
        "wires": [
            [
                "08489d447c50928e"
            ]
        ]
    },
    {
        "id": "08489d447c50928e",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "CRC16-modbus",
        "func": "var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                window.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            //crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1620,
        "wires": [
            [
                "3f9db573bfed27be",
                "98e0c40fab5fcc84",
                "2a1f7c14a0c4ac78"
            ]
        ]
    },
    {
        "id": "71aaad1d2d6ada62",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 1560,
        "wires": [
            [
                "bf26c1f3f19e93ae"
            ]
        ]
    },
    {
        "id": "860f2ba8798845dd",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 1620,
        "wires": [
            [
                "bb93e94c590f3ab1"
            ]
        ]
    },
    {
        "id": "98e0c40fab5fcc84",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set  flow Init true",
        "func": "flow.set(\"Init_4D\",true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "9ab0120df096d0fb",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set  flow Init false",
        "func": "flow.set(\"Init_4D\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "3d1a51a35062fbaf",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "CRC16-modbus",
        "func": "var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                window.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            //crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1500,
        "wires": [
            [
                "2a1f7c14a0c4ac78"
            ]
        ]
    },
    {
        "id": "b0d8a12ae55e3cfe",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Check Diagnose",
        "func": "if(msg.payload[2] == 0x48)\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1300,
        "wires": [
            [
                "49334be5809f0581"
            ]
        ]
    },
    {
        "id": "49334be5809f0581",
        "type": "binary",
        "z": "60d59772.e5b728",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\n\nb8 => Mode,\nb8 => TempSetpoint,\nb8 => Ventilation,\nb8 => Powerlevel,\nx8,\nx8\n\n\n",
        "x": 790,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "2620ce54b4017f09",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "Diagnostic mode",
        "info": "Diagnostic mode:\nPC sends this message to turn on the diagnostic mode on the heater.\n\nPC >> H   aa 03 01 00 07 | 01 | 1d 9e\n H >> PC  aa 04 01 00 07 | 01 | dd 2b\nAfter the diagnostic mode is switched on, the heater periodically sends messages that contain a lot of information.\n\n H >> PC  aa 02 48 00 01 | 000100000000049200000400000000000000012a012b00027f19007a00350244032803ff026201f8016b003d003403ff0000200000040f05000000000000000003ff000062000000 | 51 06\n H >> PC  aa 02 48 00 01 | 000100000000049300000500000000000000012a012b00027f19007a00350244032803ff026301f9016a003d003403ff0000200000040f05000000000000000003ff000062000000 | 80 e6\n H >> PC  aa 02 48 00 01 | 000100000000049400000600000000000000012a012b00027f19007a00350244032803ff026201f9016a003d003403ff0000200000040f05000000000000000003ff000062000000 | b3 58\n H >> PC  aa 02 48 00 01 | 000200000000056700000760600000000000012a012afe007f19007500350228032803ff026301f6016c003c003403fe0000200000040f0500000000000000000074000062000000 | 56 69\n H >> PC  aa 02 48 00 01 | 000200000000056800000860610000000000012a012a00fe7f1900750035022a032a03ff026301fd016a003c003403ff0000200000040f0500000000000000000074000063000000 | 53 39\n H >> PC  aa 02 48 00 01 | 000200000000056900000960600000000000012a012afefe7f19007500350228032903ff026301f8016b003c003403fe0000200000040f0500000000000000000074000063000000 | 05 ab\n                           s1s2        c1c1  c2c2drmr          ctctftft    etht  bv\ns1: Status 1\ns2: Status 2\n00: Heater off\n01: Starting\n02: Warming up\n03: Running\n04: Shutting down\nc1: Counter 1\nc2: Counter 2\ndr: Defined RPM\nmr: Measured RPM\nct: Heater chamber temperature (as two bytes, big endian, in Kelvin)\nft: Flame temperature (as two bytes, big endian, in Kelvin)\net: External temperature (as single byte in °C, 7f when disconnected)\nht: Heater temperature (as single byte in °C)\nbv: Battery voltage (as voltage * 10)\nDiagnostic mode could be switch off with this message.\n\nPC >> H   aa 03 01 00 07 | 00 | dd 5f\n H >> PC  aa 04 01 00 07 | 00 | 1d ea",
        "x": 600,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d30bdf52c5d579d1",
        "type": "ui_text",
        "z": "60d59772.e5b728",
        "group": "4373a7f49bda8706",
        "order": 8,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "079867967e6f10db",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 220,
        "wires": [
            [
                "334a9651700e023d"
            ]
        ]
    },
    {
        "id": "334a9651700e023d",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Send Temperature Value to Heater",
        "func": "msg.payload = Number(global.get(\"heattempsensor\"));\n\nvar ctemp;\n\nif (msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4 && msg.payload != 5 && msg.payload != 6) {\n   msg.info = \"no Sensor\";\n}\n\nif (msg.payload == 1)\n    msg.payload = global.get(\"temp1\");\n\nif (msg.payload == 2)\n    msg.payload = global.get(\"temp2\");\n\nif (msg.payload == 3)\n    msg.payload = global.get(\"temp3\");\n\nif (msg.payload == 4)\n    msg.payload = global.get(\"temp4\");\n\nif (msg.payload == 5)\n    msg.payload = global.get(\"dimmytemp1\");\n\nif (msg.payload == 6)\n    msg.payload = global.get(\"dimmytemp2\");\n\nif(msg.info == \"no Sensor\")\nmsg.payload =10;\n\n\n\nctemp=toHex(Number(msg.payload).toFixed(0));\nmsg.ctemp=ctemp;\n\n\n\nmsg.payload = \"AA03010011\"+ctemp;\nreturn msg\n\nfunction toHex(d) {\n    return (\"0\" + (Number(d).toString(16))).slice(-2).toUpperCase()\n}\n\n/*\nSent Temp from controller to heater\nC >> H  aa 03 01 00 11 | 1a | 76 d0\nH >> C  aa 04 01 00 11 | 1a | b6 65\n                         ct\n\n\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 220,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "f1111024389fe685",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "send request frames 4D",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "a7d7ecf121d5e9c3",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "CRC16-modbus",
        "func": "var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                msg.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            //crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 260,
        "wires": [
            [
                "fe0a4dde655d4f3a"
            ]
        ]
    },
    {
        "id": "fe0a4dde655d4f3a",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "buffer it",
        "func": "var buf = Buffer.from(msg.payload,\"hex\");\n\nmsg.payload=buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 260,
        "wires": [
            [
                "977a82ac99b9dc58"
            ]
        ]
    },
    {
        "id": "977a82ac99b9dc58",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check uart setting",
        "func": "\nif (global.get(\"multiuart1\") == \"5\" || global.get(\"multiuart1\") == \"8\")\n{\n    msg.topic=1;\n    return msg;\n}\n\nif (global.get(\"multiuart2\") == \"5\" || global.get(\"multiuart2\") == \"8\")\n{\n        msg.topic=2;\n    return msg;\n}\n\n\nif (global.get(\"usb1uart\") == \"5\" || global.get(\"usb1uart\") == \"8\" )\n{\n        msg.topic=3;\n    return msg;\n}\n\n\nif (global.get(\"usb2uart\") == \"5\" || global.get(\"usb2uart\") == \"8\")\n{\n        msg.topic=4;\n    return msg;\n}\n\n\nif (global.get(\"usb3uart\") == \"5\" || global.get(\"usb3uart\") == \"8\")\n{\n        msg.topic=5;\n    return msg;\n}\n\n\nif (global.get(\"usb4uart\") == \"5\" || global.get(\"usb4uart\") == \"8\")\n{\n        msg.topic=6;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "0bbb658736c30665"
            ]
        ]
    },
    {
        "id": "fe6f94e2504703d5",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "REQUESTS",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "a145621555b05a15",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "2D",
        "info": "",
        "x": 1250,
        "y": 320,
        "wires": []
    },
    {
        "id": "7395b56d6488cd38",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "4D",
        "info": "",
        "x": 1250,
        "y": 280,
        "wires": []
    },
    {
        "id": "bf9c71c4a427d9d9",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "UART    ------  2D = 5        -------   4D = 8",
        "info": "",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "64df864a3608f55a",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 440,
        "wires": [
            [
                "0bc08b96133beba0"
            ]
        ]
    },
    {
        "id": "49944a3aef9cc52f",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "TO ROUTER",
        "links": [
            "c6ccf22d606e0af1"
        ],
        "x": 925,
        "y": 100,
        "wires": [
            [
                "977a82ac99b9dc58"
            ]
        ]
    },
    {
        "id": "c6ccf22d606e0af1",
        "type": "link out",
        "z": "60d59772.e5b728",
        "name": "TO ROUTER",
        "mode": "link",
        "links": [
            "49944a3aef9cc52f"
        ],
        "x": 1065,
        "y": 440,
        "wires": []
    },
    {
        "id": "5e2a2d889444c27e",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "STATUS RECEIVE",
        "info": "",
        "x": 270,
        "y": 980,
        "wires": []
    },
    {
        "id": "bb6a87829a823f4e",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "Start Tempmode",
        "info": "",
        "x": 300,
        "y": 700,
        "wires": []
    },
    {
        "id": "2e16c2eaa080a0dc",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "Start Powermode",
        "info": "",
        "x": 340,
        "y": 620,
        "wires": []
    },
    {
        "id": "566b5d6b1b6623fa",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heating zero",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 480,
        "wires": [
            [
                "763684db24e0d87c"
            ]
        ]
    },
    {
        "id": "7fde441379a42d43",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "2D",
        "info": "",
        "x": 1370,
        "y": 560,
        "wires": []
    },
    {
        "id": "e560ebf3d934e6e3",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "4D",
        "info": "",
        "x": 1370,
        "y": 520,
        "wires": []
    },
    {
        "id": "f043fc467a6662d5",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heating power",
        "func": "\n\nvar heatingpower = flow.get(\"heatingpower\");\n\nmsg.payload = \"AA03060001FFFF04FF020\" + heatingpower;\nreturn msg\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 600,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "c2daa1b39ca72aa9",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Start tempmode",
        "func": "\n\nvar settemp = Number(global.get(\"settemp\"));\n\nsettemp = toHex(settemp)\n\n\n\nmsg.payload = \"AA03060001FFFF02\" + settemp +\"02FF\";\nreturn msg\n\n\n\n\nfunction toHex(d) {\n    return (\"0\" + (Number(d).toString(16))).slice(-2).toUpperCase()\n}\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 780,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "cdbf471a58700f46",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "4D",
        "info": "",
        "x": 320,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2f2d85c42b3a26f8",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart\")==5 || global.get(\"usb1uart\")==5 || global.get(\"usb2uart\")==5 || global.get(\"usb3uart\")==5 || global.get(\"usb4uart\")==5) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "07348d3c0e4be906",
                "e03b86846149e618",
                "6c561084bee22a4b"
            ]
        ]
    },
    {
        "id": "3dd3a75f15f4f1c7",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart\")==8 || global.get(\"usb1uart\")==8 || global.get(\"usb2uart\")==8 || global.get(\"usb3uart\")==8 || global.get(\"usb4uart\")==8) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "c2ac75af186a138a",
                "cc928dd74ab23fcb",
                "b0d8a12ae55e3cfe"
            ]
        ]
    },
    {
        "id": "deac05d95d3f4fd4",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "scale to 0-9",
        "func": "if(msg.payload == 0)\n{\nreturn msg;\n}\n\nmsg.payload = msg.payload -1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "c94e1e0190bc31e0"
            ]
        ]
    },
    {
        "id": "a4adc9cb34249934",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "scale to 0-9",
        "func": "if(msg.payload == 0)\n{\nreturn msg;\n}\n\nmsg.payload = msg.payload -1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            [
                "deb95d2937eb6268",
                "1672e02d0f573214",
                "11663b62dbb93f61"
            ]
        ]
    },
    {
        "id": "ee3da3bce51c2832",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "",
        "func": "\n\nmsg.payload= msg.payload.batteryVoltage/10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1240,
        "wires": [
            [
                "32440c1becbff081"
            ]
        ]
    },
    {
        "id": "d4f5fa9c86e1dffc",
        "type": "link in",
        "z": "60d59772.e5b728",
        "name": "Update Tempmode Autoterm",
        "links": [
            "6170c7bb5afa2ee0"
        ],
        "x": 185,
        "y": 900,
        "wires": [
            [
                "d1743bc5f1be98a3"
            ]
        ]
    },
    {
        "id": "053777ecdb891161",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "Update TempMode",
        "info": "",
        "x": 310,
        "y": 840,
        "wires": []
    },
    {
        "id": "d1743bc5f1be98a3",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check sensor",
        "func": "msg.payload = global.get(\"heattempsensor\");\n\nvar usb1 = parseInt(global.get(\"usb1uart\"));\nvar usb2 = parseInt(global.get(\"usb2uart\"));\nvar usb3 = parseInt(global.get(\"usb3uart\"));\nvar usb4 = parseInt(global.get(\"usb4uart\"));\n\nif (usb1 != 5 && usb2 != 5 && usb3 != 5 && usb4 != 5 && usb1 != 8 && usb2 != 8 && usb3 != 8 && usb4 != 8) {\n    return null\n}\n\nif (msg.payload != 1 && msg.payload != 2 && msg.payload != 3 && msg.payload != 4 && msg.payload != 5 && msg.payload != 6)\n    msg.payload = \"no sensor\"\n\nif (msg.payload == 1)\n    msg.payload = global.get(\"temp1\");\n\nif (msg.payload == 2)\n    msg.payload = global.get(\"temp2\");\n\nif (msg.payload == 3)\n    msg.payload = global.get(\"temp3\");\n\nif (msg.payload == 4)\n    msg.payload = global.get(\"temp4\");\n\nif (msg.payload == 5)\n    msg.global.get(\"dimmytemp1\")\n\nif (msg.payload == 6)\n    msg.global.get(\"dimmytemp2\")\n\n\nif (global.get(\"temp1\") == \"\" && global.get(\"temp2\") == \"\" && global.get(\"temp3\") == \"\" && global.get(\"temp4\") == \"\" && global.get(\"dimmytemp1\") == \"\" && global.get(\"dimmytemp2\") == \"\") {\n    msg.payload = \"no TempSensor\"\n}\n\nif(msg.payload === \"no TempSensor\")\n{\n msg.payload =\"TempMode not available, no InsideTempSensor set\";\n return [msg,null];\n}\nelse\n{\n msg.topic=\"setpoint\";\n return [null,msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 900,
        "wires": [
            [
                "2bb4aef62bb59f64"
            ],
            [
                "02c9dd05c7704329"
            ]
        ]
    },
    {
        "id": "2bb4aef62bb59f64",
        "type": "ui_toast",
        "z": "60d59772.e5b728",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "02c9dd05c7704329",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Start tempmode",
        "func": "\n\nvar settemp = Number(global.get(\"settemp\"));\n\nsettemp = toHex(settemp)\n\n\n\nmsg.payload = \"AA03060002FFFF02\" + settemp +\"02FF\";\nreturn msg\n\n\n\n\nfunction toHex(d) {\n    return (\"0\" + (Number(d).toString(16))).slice(-2).toUpperCase()\n}\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 922,
        "y": 906,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "14a1c85b333eff65",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "4D",
        "info": "",
        "x": 910,
        "y": 860,
        "wires": []
    },
    {
        "id": "e5e7a610eadb446d",
        "type": "comment",
        "z": "60d59772.e5b728",
        "name": "2D",
        "info": "",
        "x": 910,
        "y": 820,
        "wires": []
    },
    {
        "id": "e2c2cb390b6e2fa6",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "update heating power",
        "func": "\n\nvar heatingpower = flow.get(\"heatingpower\");\n\nmsg.payload = \"AA03060002FFFF04FF020\" + heatingpower;\nreturn msg\n\nreturn msg\n\n/*\nD2 is the read command from the machine address,\n03 is the read command, \n02 is the length of the read data, \n0001 means to read the value of the first register, that is, the host command is discharged\nFC56 is the CRC check code.\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 640,
        "wires": [
            [
                "a7d7ecf121d5e9c3"
            ]
        ]
    },
    {
        "id": "1672e02d0f573214",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "e2c2cb390b6e2fa6"
            ]
        ]
    },
    {
        "id": "89d216b654608f0d",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heater globalVal on",
        "func": "global.set(\"HeaterToggle\",true);\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "11663b62dbb93f61",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "check if heater is on",
        "func": "if(global.get(\"HeaterToggle\")==true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 600,
        "wires": [
            [
                "f043fc467a6662d5"
            ]
        ]
    },
    {
        "id": "ae8f0a52c274b5af",
        "type": "delay",
        "z": "60d59772.e5b728",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 580,
        "wires": [
            [
                "8d5b1aa6fa3e9749",
                "152167ac5cdea411"
            ]
        ]
    },
    {
        "id": "6d7aee2ebc2f8e7e",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "stopp if 0",
        "func": "if(msg.payload == 0)\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 400,
        "wires": [
            [
                "0bc08b96133beba0"
            ]
        ]
    },
    {
        "id": "29fbf033dae97291",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "stopp if 0",
        "func": "if(msg.payload == 0)\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 480,
        "wires": [
            [
                "0bc08b96133beba0"
            ]
        ]
    },
    {
        "id": "a9e13e851566a2b1",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heatingpower global",
        "func": "global.set(\"heatingpower\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "fae420fb8fed2a87",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "set heater globalVal on",
        "func": "global.set(\"HeaterToggle\",true);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "8d5b1aa6fa3e9749",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "start from display",
        "func": "if(msg.payload[0]=0xbb)\n{\nmsg.payload = global.get(\"heatingpower\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 620,
        "wires": [
            [
                "11663b62dbb93f61"
            ]
        ]
    },
    {
        "id": "152167ac5cdea411",
        "type": "function",
        "z": "60d59772.e5b728",
        "name": "Set heating 10",
        "func": "msg.payload = 10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 580,
        "wires": [
            [
                "763684db24e0d87c"
            ]
        ]
    },
    {
        "id": "a9621b6836834708",
        "type": "binary",
        "z": "4d1927ff20ab983a",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nb8=>runstate,\nb8=>onoff,\nb16=>heatervolt,\nb16=>fanrpm,\nb16=>fanvolt,\nb16=>exchangertemp,\nb16=>glowplugvolt,\nb16=>glowplugamp,\nb8=>pumpfreq,\nb8=>error,\nx8,\nx8,\nx8\n",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "85e17b9bbee12cff",
                "748382c20d67abe5",
                "34630964e7d80b9d",
                "964f8e7fded72a65",
                "64f8a6e9c22a5c81",
                "42b6f24ae3fdfa16",
                "bd5fce9873b67e29"
            ]
        ]
    },
    {
        "id": "acc7f8a159a5bb8a",
        "type": "inject",
        "z": "4d1927ff20ab983a",
        "name": "test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "1f81300aa43a204c"
            ]
        ]
    },
    {
        "id": "1f81300aa43a204c",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "status",
        "func": "const buf = Buffer.from([\n 0x76,\n 0x16,\n 0x00,\n 0x00,\n 0x1B,\n 0x0E,\n 0x36,\n 0x05,\n 0xDC,\n 0x10,\n 0xCC,\n 0x78,\n 0x01,\n 0xCD,\n 0x08,\n 0x23,\n 0x05,\n 0x00,\n 0xEB,\n 0x47,\n 0x00,\n 0x64,\n 0xC7,\n 0x40\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "3ec0e33e42336eb4"
            ]
        ]
    },
    {
        "id": "f195df1fdd01b724",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "on",
        "func": "const buf = Buffer.from([\n 0x76,\n 0x16,\n 0xA0,\n 0x00,\n 0x1B,\n 0x0E,\n 0x36,\n 0x05,\n 0xDC,\n 0x10,\n 0xCC,\n 0x78,\n 0x01,\n 0xCD,\n 0x08,\n 0x23,\n 0x05,\n 0x00,\n 0xEB,\n 0x47,\n 0x00,\n 0x64,\n 0x7E,\n 0xD8\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "3ec0e33e42336eb4",
                "ed7af7daa89018cc"
            ]
        ]
    },
    {
        "id": "2e20c105ee14f2f8",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "off",
        "func": "const buf = Buffer.from([\n 0x76,\n 0x16,\n 0x05,\n 0x00,\n 0x1B,\n 0x0E,\n 0x36,\n 0x05,\n 0xDC,\n 0x10,\n 0xCC,\n 0x78,\n 0x01,\n 0xCD,\n 0x08,\n 0x23,\n 0x05,\n 0x00,\n 0xEB,\n 0x47,\n 0x00,\n 0x64,\n 0x92,\n 0x8C\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "3ec0e33e42336eb4"
            ]
        ]
    },
    {
        "id": "c5500d038d1ac322",
        "type": "ui_gauge",
        "z": "4d1927ff20ab983a",
        "name": "",
        "group": "eb1c4820.31d898",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Glowplug",
        "label": "amps",
        "format": "{{value}}",
        "min": 0,
        "max": "12",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1180,
        "y": 460,
        "wires": []
    },
    {
        "id": "3ae7bd2525298709",
        "type": "ui_gauge",
        "z": "4d1927ff20ab983a",
        "name": "",
        "group": "eb1c4820.31d898",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "exchangertemp",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1199.000114440918,
        "y": 502.0000629425049,
        "wires": []
    },
    {
        "id": "5224569aaae46417",
        "type": "ui_gauge",
        "z": "4d1927ff20ab983a",
        "name": "",
        "group": "eb1c4820.31d898",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Fan RPM",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "3500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1180,
        "y": 540,
        "wires": []
    },
    {
        "id": "8a3b41f143687aaf",
        "type": "ui_text",
        "z": "4d1927ff20ab983a",
        "group": "eb1c4820.31d898",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "runstate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 580,
        "wires": []
    },
    {
        "id": "fc46636bd8c58042",
        "type": "ui_text",
        "z": "4d1927ff20ab983a",
        "group": "eb1c4820.31d898",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1170,
        "y": 620,
        "wires": []
    },
    {
        "id": "ede694c3690b7d59",
        "type": "ui_gauge",
        "z": "4d1927ff20ab983a",
        "name": "",
        "group": "eb1c4820.31d898",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Pump Freq",
        "label": "Hz",
        "format": "{{value}}",
        "min": 0,
        "max": "5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1190,
        "y": 420,
        "wires": []
    },
    {
        "id": "85e17b9bbee12cff",
        "type": "change",
        "z": "4d1927ff20ab983a",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "start",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "glow plug pre heat",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "failed ignition",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Ignited",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "running",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "skipped",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "7",
                "fromt": "num",
                "to": "stopping run glow re-heat",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.runstate",
                "pt": "msg",
                "from": "8",
                "fromt": "num",
                "to": "cooldown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 580,
        "wires": [
            [
                "c5bc6d900b0abf03"
            ]
        ]
    },
    {
        "id": "c5bc6d900b0abf03",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.runstate;\nglobal.set(\"heatstatus\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 580,
        "wires": [
            [
                "8a3b41f143687aaf"
            ]
        ]
    },
    {
        "id": "748382c20d67abe5",
        "type": "change",
        "z": "4d1927ff20ab983a",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "no error",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "no error ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "voltage to low",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "voltage to high",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Ignition plug failure",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Pump Failure ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "too hot",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "7",
                "fromt": "num",
                "to": "motor failure",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "8",
                "fromt": "num",
                "to": "no error but off",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "9",
                "fromt": "str",
                "to": "Fire is extinguished",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.error",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "tempsensor failure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 620,
        "wires": [
            [
                "3c8490d0952b2b95"
            ]
        ]
    },
    {
        "id": "3c8490d0952b2b95",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.error;\nglobal.set(\"heaterror\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 620,
        "wires": [
            [
                "fc46636bd8c58042"
            ]
        ]
    },
    {
        "id": "34630964e7d80b9d",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.pumpfreq/10;\nif(msg.payload > -1 && msg.payload <10) {\n    global.set(\"heatpump\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 420,
        "wires": [
            [
                "ede694c3690b7d59"
            ]
        ]
    },
    {
        "id": "964f8e7fded72a65",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.glowplugamp/100;\nif(msg.payload > -1 && msg.payload <30) {\n    global.set(\"heatglow\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 460,
        "wires": [
            [
                "c5500d038d1ac322"
            ]
        ]
    },
    {
        "id": "64f8a6e9c22a5c81",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.exchangertemp;\nif(msg.payload > -1 && msg.payload <250) {\n    global.set(\"heattemp\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 992.0001068115234,
        "y": 502.0000648498535,
        "wires": [
            [
                "3ae7bd2525298709"
            ]
        ]
    },
    {
        "id": "42b6f24ae3fdfa16",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.fanrpm;\nif(msg.payload > -1 && msg.payload <8500) {\n    global.set(\"heatfan\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "5224569aaae46417"
            ]
        ]
    },
    {
        "id": "71df81ca5edec468",
        "type": "ui_gauge",
        "z": "4d1927ff20ab983a",
        "name": "",
        "group": "eb1c4820.31d898",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Battery Volt",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "16",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1190,
        "y": 380,
        "wires": []
    },
    {
        "id": "bd5fce9873b67e29",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "filter",
        "func": "msg.payload = msg.payload.heatervolt/10;\nif(msg.payload > 5 && msg.payload <20) {\n    global.set(\"heatvolt\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 380,
        "wires": [
            [
                "71df81ca5edec468"
            ]
        ]
    },
    {
        "id": "60d2221cb6b5fd01",
        "type": "link in",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect China Heater",
        "links": [
            "5fee87d7.996858",
            "7dce0b76.302e94",
            "0d49bdccad387007",
            "f00df4684db66661",
            "edf12ff1c72dca2a",
            "b0a97d8edfb5a3e8",
            "7d74a95da2ff9101",
            "fd978acdbf61cb68"
        ],
        "x": 215,
        "y": 380,
        "wires": [
            [
                "d720853fb7952a91"
            ]
        ]
    },
    {
        "id": "8be4c021b7896504",
        "type": "comment",
        "z": "4d1927ff20ab983a",
        "name": "CHINA HEATER",
        "info": "",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "d720853fb7952a91",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "check uart setting",
        "func": "if(global.get(\"usb1uart\")==4 || global.get(\"usb2uart\")==4 && msg.payload.length >=10 && msg.payload[0] == 0x76) \nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "a9621b6836834708"
            ]
        ]
    },
    {
        "id": "777866f44d62b0d8",
        "type": "link in",
        "z": "4d1927ff20ab983a",
        "name": "china heater start",
        "links": [
            "3d09a72b0b542224"
        ],
        "x": 395,
        "y": 80,
        "wires": [
            [
                "f195df1fdd01b724"
            ]
        ]
    },
    {
        "id": "25c3852715792925",
        "type": "link in",
        "z": "4d1927ff20ab983a",
        "name": "china heater stop",
        "links": [
            "357c036bfc1f8f60"
        ],
        "x": 395,
        "y": 120,
        "wires": [
            [
                "2e20c105ee14f2f8"
            ]
        ]
    },
    {
        "id": "6e57363062cbee1a",
        "type": "exec",
        "z": "4d1927ff20ab983a",
        "command": "sudo usbreset /dev/bus/usb/001/002",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reset usb",
        "x": 1140,
        "y": 40,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3f0467c2cdbc1710",
        "type": "delay",
        "z": "4d1927ff20ab983a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 40,
        "wires": [
            [
                "6e57363062cbee1a",
                "6726e31a5d83c0a8"
            ]
        ]
    },
    {
        "id": "3ec0e33e42336eb4",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==4) {\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==4) {\n    msg.topic=2;\n    return msg;\n}\n\nif(global.get(\"usb1uart\")==4) {\n    msg.topic=3;\n    return msg;\n}\n\nif(global.get(\"usb2uart\")==4) {\n    msg.topic=4;\n    return msg;\n}\n\nif(global.get(\"usb3uart\")==4) {\n    msg.topic=5;\n    return msg;\n}\n\nif(global.get(\"usb4uart\")==4) {\n    msg.topic=6;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 160,
        "wires": [
            [
                "9138d2bec3dd6888"
            ]
        ]
    },
    {
        "id": "9138d2bec3dd6888",
        "type": "switch",
        "z": "4d1927ff20ab983a",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 970,
        "y": 160,
        "wires": [
            [
                "6d5917dc04d190a0"
            ],
            [
                "8ffe8216ce4b58e9"
            ],
            [
                "3f2d0d99422ba676"
            ],
            [
                "f6b7d9ea69e00d2b"
            ],
            [
                "876eb65067c7e2f1"
            ],
            [
                "8879f99ded5a9057"
            ]
        ]
    },
    {
        "id": "6d5917dc04d190a0",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "bb2a109a66b34c73"
        ],
        "x": 1165,
        "y": 80,
        "wires": []
    },
    {
        "id": "8ffe8216ce4b58e9",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "0b82ac1efa8711d7"
        ],
        "x": 1165,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f2d0d99422ba676",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 1165,
        "y": 160,
        "wires": []
    },
    {
        "id": "f6b7d9ea69e00d2b",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 1165,
        "y": 200,
        "wires": []
    },
    {
        "id": "876eb65067c7e2f1",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 1165,
        "y": 240,
        "wires": []
    },
    {
        "id": "8879f99ded5a9057",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1165,
        "y": 280,
        "wires": []
    },
    {
        "id": "ed7af7daa89018cc",
        "type": "function",
        "z": "4d1927ff20ab983a",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==4)\n{\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==4)\n{\n        msg.topic=2;\n    return msg;\n}\n\n\nif(global.get(\"usb1uart\")==4)\n{\n        msg.topic=3;\n    return msg;\n}\n\n\nif(global.get(\"usb2uart\")==4)\n{\n        msg.topic=4;\n    return msg;\n}\n\n\nif(global.get(\"usb3uart\")==4)\n{\n        msg.topic=5;\n    return msg;\n}\n\n\nif(global.get(\"usb4uart\")==4)\n{\n        msg.topic=6;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 60,
        "wires": [
            [
                "3f0467c2cdbc1710"
            ]
        ]
    },
    {
        "id": "ad88f10fd1f2d787",
        "type": "link out",
        "z": "4d1927ff20ab983a",
        "name": "usb reset",
        "mode": "link",
        "links": [
            "51858671e39c9f96",
            "8eb597b7ad8580fb",
            "bf2cea84191ef3d2",
            "c5f0c4372a081cd7"
        ],
        "x": 1075,
        "y": 80,
        "wires": []
    },
    {
        "id": "6726e31a5d83c0a8",
        "type": "delay",
        "z": "4d1927ff20ab983a",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 80,
        "wires": [
            [
                "ad88f10fd1f2d787"
            ]
        ]
    },
    {
        "id": "1737b3172927d92a",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 7,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Temperatur",
        "label": "°C",
        "format": "{{value}}",
        "min": "-20",
        "max": "105",
        "colors": [
            "#0004e6",
            "#00d62e",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "85",
        "x": 1310,
        "y": 140,
        "wires": []
    },
    {
        "id": "4eb02cb4c1754a15",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 8,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Glühstift",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1300,
        "y": 280,
        "wires": []
    },
    {
        "id": "9cf0d97736d25aaf",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 9,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Brennluftgebläse",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "a0ad85ec597bea4e",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 10,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Dieselpumpe",
        "label": "Hertz",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "0d0bee16916f7c60",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 13,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Umwälzpumpe",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1320,
        "y": 360,
        "wires": []
    },
    {
        "id": "f6e8882a6da5bc37",
        "type": "ui_gauge",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "group": "d2c3df97.cf732",
        "order": 6,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Spannung",
        "label": "Volt",
        "format": "{{value}}",
        "min": "5",
        "max": "15",
        "colors": [
            "#f3ff0f",
            "#00b80c",
            "#ca3838"
        ],
        "seg1": "9",
        "seg2": "13",
        "x": 1300,
        "y": 100,
        "wires": []
    },
    {
        "id": "634cf50f64721a70",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "temp",
        "func": "msg.payload = msg.payload.temp-50;\n\n\nglobal.set(\"heattemp\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "1737b3172927d92a"
            ]
        ]
    },
    {
        "id": "94ea8fc746d56e91",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "spannung",
        "func": "msg.payload = msg.payload.volts/1000;\n\nglobal.set(\"heatvolt\",msg.payload);\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 100,
        "wires": [
            [
                "f6e8882a6da5bc37"
            ]
        ]
    },
    {
        "id": "a6aa42e3ef7437b1",
        "type": "switch",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "property": "payload[8]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 240,
        "wires": [
            [
                "a01c390faddd1eee"
            ],
            [
                "c717ed245c9fbf29"
            ],
            [
                "439f68456c7b77f1"
            ]
        ],
        "info": "schauen um welche werte es sich \nhandelt: \n\nalles kommt aus der anfrage 50 \ndh. das dritte byte muss sein 50\n\n\n05 sensoren\n1 byte temp(-50)\n2 byte volt in mili\n1 byte flammendetektor\n2 byte heating power\n2 glühkerze wiederstand mili ohm\n\n15: sensoren 2\n\n     byte0: Glow plug power in percent *2\n\n     byte1: Fuel pump pulse frequency in Hz *2\n\n     byte2: Combustion air fan in percent*2\n\n     byte3:\n\n     byte4: Circulation pump percent*2\n\n\n\n07 status\n\nsiehe unten \n\n\n\n#define QUERY_STATE\t0x07\n\n#define\t\tOP_STATE\t0\n\n#define\t\tOP_STATE_N\t1\n\n#define\t\tDEV_STATE\t2\n\n\n\n/* 3 more unknown bytes */\n\n#define WB_STATE_BO\t0x00 /* Burn out */\n\n#define\tWB_STATE_DEACT1\t0x01 /* Deactivation */\n\n#define\tWB_STATE_BOADR\t0x02 /* Burn out ADR (has something to due with hazardous substances transportation) */\n\n#define\tWB_STATE_BORAMP\t0x03 /* Burn out Ramp */\n\n#define\tWB_STATE_OFF\t0x04 /* Off state */\n\n#define\tWB_STATE_CPL\t0x05 /* Combustion process part load */\n\n#define\tWB_STATE_CFL\t0x06 /* Combustion process full load */\n\n#define\tWB_STATE_FS\t0x07 /* Fuel supply */\n\n#define\tWB_STATE_CAFS\t0x08 /* Combustion air fan start */\n\n#define\tWB_STATE_FSI\t0x09 /* Fuel supply interruption */\n\n#define\tWB_STATE_DIAG\t0x0a /* Diagnostic state */\n\n#define\tWB_STATE_FPI\t0x0b /* Fuel pump interruption */\n\n#define\tWB_STATE_EMF\t0x0c /* EMF measurement */\n\n#define\tWB_STATE_DEB\t0x0d /* Debounce */\n\n#define\tWB_STATE_DEACTE\t0x0e /* Deactivation */\n\n#define\tWB_STATE_FDI\t0x0f /* Flame detector interrogation */\n\n#define\tWB_STATE_FDC\t0x10 /* Flame detector cooling */\n\n#define\tWB_STATE_FDM\t0x11 /* Flame detector measuring phase */\n\n#define\tWB_STATE_FDMZ\t0x12 /* Flame detector measuring phase ZUE */\n\n#define\tWB_STATE_FAN\t0x13 /* Fan start up */\n\n#define\tWB_STATE_GPRAMP\t0x14 /* Glow plug ramp */\n\n#define\tWB_STATE_LOCK\t0x15 /* Heater interlock */\n\n#define\tWB_STATE_INIT\t0x16 /* Initialization   */\n\n#define\tWB_STATE_BUBLE\t0x17 /* Fuel bubble compensation */\n\n#define\tWB_STATE_FANC\t0x18 /* Fan cold start-up */\n\n#define\tWB_STATE_COLDR\t0x19 /* Cold start enrichment */\n\n#define\tWB_STATE_COOL\t0x1a /* Cooling */\n\n#define\tWB_STATE_LCHGUP\t0x1b /* Load change PL-FL */\n\n#define\tWB_STATE_VENT\t0x1c /* Ventilation */\n\n#define\tWB_STATE_LCHGDN\t0x1d /* Load change FL-PL */\n\n#define\tWB_STATE_NINIT\t0x1e /* New initialization */\n\n#define\tWB_STATE_CTRL\t0x1f /* Controlled operation */\n\n#define\tWB_STATE_CIDDLE\t0x20 /* Control iddle period */\n\n#define\tWB_STATE_SSTART\t0x21 /* Soft start */\n\n#define\tWB_STATE_STIME\t0x22 /* Savety time */\n\n#define\tWB_STATE_PURGE\t0x23 /* Purge */\n\n#define\tWB_STATE_START\t0x24 /* Start */\n\n#define\tWB_STATE_STAB\t0x25 /* Stabilization */\n\n#define\tWB_STATE_SRAMP\t0x26 /* Start ramp    */\n\n#define\tWB_STATE_OOP\t0x27 /* Out of power  */\n\n#define\tWB_STATE_LOCK2\t0x28 /* Interlock     */\n\n#define WB_STATE_LOCKADR\t0x29 /* Interlock ADR (Australian design rules) */\n\n#define\tWB_STATE_STABT\t0x2a /* Stabilization time */\n\n#define\tWB_STATE_CHGCTRL\t0x2b /* Change to controlled operation */\n\n#define\tWB_STATE_DECIS\t0x2c /* Decision state */\n\n#define\tWB_STATE_PSFS\t0x2d /* Prestart fuel supply */\n\n#define\tWB_STATE_GLOW\t0x2e /* Glowing */\n\n#define\tWB_STATE_GLOWP\t0x2f /* Glowing power control */\n\n#define\tWB_STATE_DELAY\t0x30 /* Delay lowering */\n\n#define\tWB_STATE_SLUG\t0x31 /* Sluggish fan start */\n\n#define\tWB_STATE_AGLOW\t0x32 /* Additional glowing */\n\n#define\tWB_STATE_IGNI\t0x33 /* Ignition interruption */\n\n#define\tWB_STATE_IGN\t0x34 /* Ignition */\n\n#define\tWB_STATE_IGNII\t0x35 /* Intermittent glowing */\n\n#define\tWB_STATE_APMON\t0x36 /* Application monitoring */\n\n#define\tWB_STATE_LOCKS\t0x37 /* Interlock save to memory */\n\n#define\tWB_STATE_LOCKD\t0x38 /* Heater interlock deactivation */\n\n#define\tWB_STATE_OUTCTL\t0x39 /* Output control */\n\n#define\tWB_STATE_CPCTL\t0x3a /* Circulating pump control */\n\n#define\tWB_STATE_INITUC\t0x3b /* Initialization uP */\n\n#define\tWB_STATE_SLINT\t0x3c /* Stray light interrogation */\n\n#define\tWB_STATE_PRES\t0x3d /* Prestart */\n\n#define\tWB_STATE_PREIGN\t0x3e /* Pre-ignition */\n\n#define\tWB_STATE_FIGN\t0x3f /* Flame ignition */\n\n#define\tWB_STATE_FSTAB\t0x40 /* Flame stabilization */\n\n#define\tWB_STATE_PH\t0x41 /* Combustion process parking heating */\n\n#define\tWB_STATE_SH\t0x42 /* Combustion process suppl. heating  */\n\n#define\tWB_STATE_PHFAIL\t0x43 /* Combustion failure failure heating */\n\n#define\tWB_STATE_SHFAIL\t0x44 /* Combustion failure suppl. heating  */\n\n#define\tWB_STATE_OFFR\t0x45 /* Heater off after run */\n\n#define\tWB_STATE_CID\t0x46 /* Control iddle after run */\n\n#define\tWB_STATE_ARFAIL\t0x47 /* After-run due to failure */\n\n#define\tWB_STATE_ARTCTL\t0x48 /* Time-controlled after-run due to failure */\n\n#define\tWB_STATE_LOCKCP\t0x49 /* Interlock circulation pump */\n\n#define\tWB_STATE_CIDPH\t0x4a /* Control iddle after parking heating */\n\n#define\tWB_STATE_CIDSH\t0x4b /* Control iddle after suppl. heating  */\n\n#define\tWB_STATE_CIDHCP\t0x4c /* Control iddle period suppl. heating with circulation pump */\n\n#define\tWB_STATE_CPNOH\t0x4d /* Circulation pump without heating function */\n\n#define\tWB_STATE_OV\t0x4e /* Waiting loop overvoltage */\n\n#define\tWB_STATE_MFAULT\t0x4f /* Fault memory update */\n\n#define\tWB_STATE_WLOOP\t0x50 /* Waiting loop */\n\n#define\tWB_STATE_CTEST\t0x51 /* Component test */\n\n#define\tWB_STATE_BOOST\t0x52 /* Boost */\n\n#define\tWB_STATE_COOL2\t0x53 /* Cooling */\n\n#define\tWB_STATE_LOCKP\t0x54 /* Heater interlock permanent */\n\n#define\tWB_STATE_FANIDL\t0x55 /* Fan iddle */\n\n#define\tWB_STATE_BA\t0x56 /* Break away */\n\n#define\tWB_STATE_TINT\t0x57 /* Temperature interrogation */\n\n#define\tWB_STATE_PREUV\t0x58 /* Prestart undervoltage */\n\n#define\tWB_STATE_AINT\t0x59 /* Accident interrogation */\n\n#define\tWB_STATE_ARSV\t0x5a /* After-run solenoid valve */\n\n#define\tWB_STATE_MFLTSV\t0x5b /* Fault memory update solenoid valve */\n\n#define\tWB_STATE_TCARSV\t0x5c /* Timer-controlled after-run solenoid valve */\n\n#define\tWB_STATE_SA\t0x5d /* Startup attempt */\n\n#define\tWB_STATE_PREEXT\t0x5e /* Prestart extension */\n\n#define\tWB_STATE_COMBP\t0x5f /* Combustion process */\n\n#define\tWB_STATE_TIARUV\t0x60 /* Timer-controlled after-run due to undervoltage */\n\n#define\tWB_STATE_MFLTSW\t0x61 /* Fault memory update prior switch off */\n\n#define\tWB_STATE_RAMPFL\t0x62 /* Ramp full load */\n"
    },
    {
        "id": "439f68456c7b77f1",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "func": "msg.payload = msg.payload[9];\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 400,
        "wires": [
            [
                "3a8138836a784f3c"
            ]
        ]
    },
    {
        "id": "368351f85f4f9006",
        "type": "ui_text",
        "z": "b8917b97d5ee0c66",
        "group": "d2c3df97.cf732",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1290,
        "y": 400,
        "wires": []
    },
    {
        "id": "3a8138836a784f3c",
        "type": "change",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "46",
                "fromt": "num",
                "to": "glowing",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "7",
                "fromt": "num",
                "to": "fuelpump",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "burn out",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "26",
                "fromt": "num",
                "to": "cooling down",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "12",
                "fromt": "num",
                "to": "Fan cold start-up",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "combustion porcess part load",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "combustion porcess full load",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "29",
                "fromt": "num",
                "to": "load change -> FL to PL",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "17",
                "fromt": "num",
                "to": "flame detection",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "20",
                "fromt": "num",
                "to": "glow plug ramp",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "16",
                "fromt": "num",
                "to": "famle sensor cooling",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "46",
                "fromt": "num",
                "to": "control iddle after run",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "160",
                "fromt": "str",
                "to": "locked",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "368351f85f4f9006",
                "336c33d3398e9f9e"
            ]
        ],
        "info": "\r\n      0x00 Burn out\r\n      0x01 Deactivation\r\n      0x02 Burn out ADR (has something to due with hazardous substances transpotation)\r\n      0x03 Burn out Ramp\r\n      0x04 Off state\r\n      0x05 Combustion process part load\r\n      0x06 Combustion process full load\r\n      0x07 Fuel supply\r\n      0x08 Combustion air fan start\r\n      0x09 Fuel supply interruption\r\n      0x0a Diagnostic state\r\n      0x0b Fuel pump interruption\r\n      0x0c EMF measurement\r\n      0x0d Debounce\r\n      0x0e Deactivation\r\n      0x0f Flame detector interrogation\r\n      0x10 Flame detector cooling\r\n      0x11 Flame detector measuring phase\r\n      0x12 Flame detector measuring phase ZUE\r\n      0x13 Fan start up\r\n      0x14 Glow plug ramp\r\n      0x15 Heater interlock\r\n      0x16 Initialization\r\n      0x17 Fuel bubble compensation\r\n      0x18 Fan cold start-up\r\n      0x19 Cold start enrichment\r\n      0x1a Cooling\r\n      0x1b Load change PL-FL\r\n      0x1c Ventilation\r\n      0x1d Load change FL-PL\r\n      0x1e New initialization\r\n      0x1f Controlled operation\r\n      0x20 Control iddle period\r\n      0x21 Soft start\r\n      0x22 Savety time\r\n      0x23 Purge\r\n      0x24 Start\r\n      0x25 Stabilization\r\n      0x26 Start ramp\r\n      0x27 Out of power\r\n      0x28 Interlock\r\n      0x29 Interlock ADR (Australian design rules)\r\n      0x2a Stabilization time\r\n      0x2b Change to controlled operation\r\n      0x2c Decision state\r\n      0x2d Prestart fuel supply\r\n      0x2e Glowing\r\n      0x2f Glowing power control\r\n      0x30 Delay lowering\r\n      0x31 Sluggish fan start\r\n      0x32 Additional glowing\r\n      0x33 Ignition interruption\r\n      0x34 Ignition\r\n      0x35 Intermittent glowing\r\n      0x36 Application monitoring\r\n      0x37 Interlock save to memory\r\n      0x38 Heater interlock deactivation\r\n      0x39 Output control\r\n      0x3a Circulating pump control\r\n      0x3b Initialization uP\r\n      0x3c Stray light interrogation\r\n      0x3d Prestart\r\n      0x3e Pre-ignition\r\n      0x3f Flame ignition\r\n      0x40 Flame stabilization\r\n      0x41 Combustion process parking heating\r\n      0x42 Combustion process suppl. heating\r\n      0x43 Combustion failure failure heating\r\n      0x44 Combustion failure suppl. heating\r\n      0x45 Heater off after run\r\n      0x46 Control iddle after run\r\n      0x47 After-run due to failure\r\n      0x48 Time-controlled after-run due to failure\r\n      0x49 Interlock circulation pump\r\n      0x4a Control iddle after parking heating\r\n      0x4b Control iddle after suppl. heating\r\n      0x4c Control iddle period suppl. heating with circulation pump\r\n      0x4d Circulation pump without heating function\r\n      0x4e Waiting loop overvoltage\r\n      0x4f Fault memory update\r\n      0x50 Waiting loop\r\n      0x51 Component test\r\n      0x52 Boost\r\n      0x53 Cooling\r\n      0x54 Heater interlock permanent\r\n      0x55 Fan iddle\r\n      0x56 Break away\r\n      0x57 Temperature interrogation\r\n      0x58 Prestart undervoltage\r\n      0x59 Accident interrogation\r\n      0x5a After-run solenoid valve\r\n      0x5b Fault memory update solenoid valve\r\n      0x5c Timer-controlled after-run solenoid valve\r\n      0x5d Startup attempt\r\n      0x5e Prestart extension\r\n      0x5f Combustion process\r\n      0x60 Timer-controlled after-run due to undervoltage\r\n      0x61 Fault memory update prior switch off\r\n      0x62 Ramp full load"
    },
    {
        "id": "80c68714aaff8705",
        "type": "comment",
        "z": "b8917b97d5ee0c66",
        "name": "To Heater",
        "info": "",
        "x": 180,
        "y": 500,
        "wires": []
    },
    {
        "id": "3b7ec4f150a0ce30",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "glow",
        "func": "msg.payload = msg.payload.glow/2;\n\n\nglobal.set(\"heatglow\",msg.payload/10);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 280,
        "wires": [
            [
                "4eb02cb4c1754a15"
            ]
        ]
    },
    {
        "id": "9e34a48a06becea4",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "fan",
        "func": "msg.payload = msg.payload.fan/2;\n\n\nglobal.set(\"heatfan\",msg.payload);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "9cf0d97736d25aaf"
            ]
        ]
    },
    {
        "id": "c95aa03d251348d2",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "waterpump",
        "func": "msg.payload = msg.payload.waterpump/2;\n\n\nglobal.set(\"heatwpump\",msg.payload);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 360,
        "wires": [
            [
                "0d0bee16916f7c60"
            ]
        ]
    },
    {
        "id": "5883159b4a82f9ca",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "fuelpump",
        "func": "msg.payload = msg.payload.fuelpumpfreq/2;\nmsg.payload = msg.payload/10;\n\nglobal.set(\"heatpump\",msg.payload);\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 240,
        "wires": [
            [
                "a0ad85ec597bea4e"
            ]
        ]
    },
    {
        "id": "a01c390faddd1eee",
        "type": "binary",
        "z": "b8917b97d5ee0c66",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb8 => temp,\nb16 => volts,\nx8,\nx8,\nx8\n\n",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "634cf50f64721a70",
                "94ea8fc746d56e91"
            ]
        ]
    },
    {
        "id": "c717ed245c9fbf29",
        "type": "binary",
        "z": "b8917b97d5ee0c66",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb8 => glow,\nb8 => fuelpumpfreq,\nb8 => fan,\nb8,\nb8 => waterpump,\nx8\n\n\n",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "3b7ec4f150a0ce30",
                "9e34a48a06becea4",
                "c95aa03d251348d2",
                "5883159b4a82f9ca"
            ]
        ]
    },
    {
        "id": "77f23e161d8b722f",
        "type": "link in",
        "z": "b8917b97d5ee0c66",
        "name": "serial connect webasto",
        "links": [
            "1897b0cf.02010f",
            "924bb21.6db325",
            "ce54125c6003fe6e",
            "0f681a04587f9df0",
            "4afe37a709c523b6",
            "261db8f0813baa48",
            "41a8e17ad9dd91cd",
            "742c72b859cc3261"
        ],
        "x": 155,
        "y": 240,
        "wires": [
            [
                "0aa1cfacfa777abe"
            ]
        ]
    },
    {
        "id": "336c33d3398e9f9e",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "set global",
        "func": "\n\n flow.set(\"webastostatus\", msg.payload);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0aa1cfacfa777abe",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "check uart setting",
        "func": "if(global.get(\"usb1uart\")==3 || global.get(\"usb2uart\")==3 || global.get(\"usb3uart\")==3 || global.get(\"usb4uart\")==3) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "a6aa42e3ef7437b1"
            ]
        ]
    },
    {
        "id": "57299848a1095680",
        "type": "comment",
        "z": "b8917b97d5ee0c66",
        "name": "From Heater",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "088c6f2817f10ab0",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "abfrage 50-05 sensoren1",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x03,\n 0x50,\n 0x05,\n 0xA2\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "4ed948cd7c1f141b",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "standheizen 1h",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x03,\n 0x21,\n 0x3B,\n 0xED\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n\n//0xf4\",\"0x03\",\"0x23\",\"0x3b\",\"0xef - zuheizen \n\n//0xf4\",\"0x03\",\"0x21\",\"0x3b\",\"0xed  - standheizen",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "861c83dd47cb0ddd",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "stop befehl",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x02,\n 0x10,\n 0xe6\n]);\n\nmsg.payload = buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 720,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "6dc43e73d2659a23",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "abfrage 50-07 status",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x03,\n 0x50,\n 0x07,\n 0xa0\n]);\n\nmsg.payload = buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "007d68e594c08404",
        "type": "delay",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 760,
        "y": 840,
        "wires": [
            [
                "6dc43e73d2659a23"
            ]
        ]
    },
    {
        "id": "fa68377089123349",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "error abfrage",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x03,\n 0x56,\n 0x01,\n 0xa0\n]);\n\nmsg.payload = buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "9ac8f4c1014b5272",
        "type": "delay",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 770,
        "y": 640,
        "wires": [
            [
                "fa68377089123349"
            ]
        ]
    },
    {
        "id": "63aa4d26e3d0fb6f",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "keep alive befehl 21",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x04,\n 0x44,\n 0x21,\n 0x00,\n 0x95\n]);\n\nmsg.payload = buf;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 680,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "88042b35527a7ea0",
        "type": "trigger",
        "z": "b8917b97d5ee0c66",
        "name": "keep alive",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-8",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 680,
        "wires": [
            [
                "63aa4d26e3d0fb6f"
            ]
        ]
    },
    {
        "id": "3c741d517c31e850",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "abfrage 50-15 sensoren2",
        "func": "const buf = Buffer.from([\n 0xF4,\n 0x03,\n 0x50,\n 0x0f,\n 0xa8\n]);\n\nmsg.payload = buf;\n\nreturn msg;\n\n//    f4 03 50 0f a8                                    ô.P.¨            \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "9c32688fae56bd69",
        "type": "delay",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 780,
        "y": 920,
        "wires": [
            [
                "3c741d517c31e850"
            ]
        ]
    },
    {
        "id": "03c1df756adff042",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "keep alive stoppen",
        "func": "msg.reset = true; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "88042b35527a7ea0",
                "861c83dd47cb0ddd"
            ]
        ]
    },
    {
        "id": "f5f48248af88ba8a",
        "type": "trigger",
        "z": "b8917b97d5ee0c66",
        "name": "status abfrage",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 840,
        "wires": [
            [
                "007d68e594c08404",
                "9c32688fae56bd69",
                "088c6f2817f10ab0"
            ]
        ]
    },
    {
        "id": "a538e09125f1d7fc",
        "type": "inject",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "d092ebeea789b1dc"
            ]
        ]
    },
    {
        "id": "3aec10b81cfcbc6f",
        "type": "link in",
        "z": "b8917b97d5ee0c66",
        "name": "start webasto",
        "links": [
            "8e2cf1affb32e884"
        ],
        "x": 195,
        "y": 600,
        "wires": [
            [
                "9ac8f4c1014b5272",
                "88042b35527a7ea0",
                "392132c20d720c68"
            ]
        ]
    },
    {
        "id": "9fa1b8aab7d6ac39",
        "type": "link in",
        "z": "b8917b97d5ee0c66",
        "name": "stop webasto",
        "links": [
            "5aaf037cba0e1470"
        ],
        "x": 195,
        "y": 680,
        "wires": [
            [
                "03c1df756adff042"
            ]
        ]
    },
    {
        "id": "ce5b7256ddc96df5",
        "type": "inject",
        "z": "b8917b97d5ee0c66",
        "name": "Start Standheizen 60min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "[\"0xf4\",\"0x03\",\"0x21\",\"0x3b\",\"0xed\"] ",
                "vt": "bin"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[\"0xf4\",\"0x03\",\"0x21\",\"0x3b\",\"0xed\"] ",
        "payloadType": "bin",
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "948266ec9ecd4299",
        "type": "inject",
        "z": "b8917b97d5ee0c66",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[\"f4\",\"02\",\"10\",\"E6\"]",
        "payloadType": "bin",
        "x": 1070,
        "y": 1060,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "9be31fe020628e66",
        "type": "inject",
        "z": "b8917b97d5ee0c66",
        "name": "Stand zuheizen 60min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[\"0xf4\",\"0x03\",\"0x23\",\"0x3b\",\"0xef\"]",
        "payloadType": "bin",
        "x": 1020,
        "y": 1100,
        "wires": [
            [
                "5843b7dd0417ee19"
            ]
        ]
    },
    {
        "id": "392132c20d720c68",
        "type": "delay",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "4ed948cd7c1f141b"
            ]
        ]
    },
    {
        "id": "4698f5a4978df53a",
        "type": "comment",
        "z": "b8917b97d5ee0c66",
        "name": "Debug",
        "info": "",
        "x": 1050,
        "y": 980,
        "wires": []
    },
    {
        "id": "5843b7dd0417ee19",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==3)\n{\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==3)\n{\n        msg.topic=2;\n    return msg;\n}\n\n\nif(global.get(\"usb1uart\")==3)\n{\n        msg.topic=3;\n    return msg;\n}\n\n\nif(global.get(\"usb2uart\")==3)\n{\n        msg.topic=4;\n    return msg;\n}\n\n\nif(global.get(\"usb3uart\")==3)\n{\n        msg.topic=5;\n    return msg;\n}\n\n\nif(global.get(\"usb4uart\")==3)\n{\n        msg.topic=6;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 880,
        "wires": [
            [
                "cdf5c953b6db4517"
            ]
        ]
    },
    {
        "id": "cdf5c953b6db4517",
        "type": "switch",
        "z": "b8917b97d5ee0c66",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1530,
        "y": 880,
        "wires": [
            [
                "14ac3a004339aa29"
            ],
            [
                "1f83311e74014a16"
            ],
            [
                "246a92bff38e129f"
            ],
            [
                "019e0d59897b6a70"
            ],
            [
                "27f9332e695de4b7"
            ],
            [
                "1c8ea076f1487c81"
            ]
        ]
    },
    {
        "id": "14ac3a004339aa29",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "bb2a109a66b34c73"
        ],
        "x": 1705,
        "y": 780,
        "wires": []
    },
    {
        "id": "1f83311e74014a16",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "0b82ac1efa8711d7"
        ],
        "x": 1705,
        "y": 820,
        "wires": []
    },
    {
        "id": "246a92bff38e129f",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 1705,
        "y": 860,
        "wires": []
    },
    {
        "id": "019e0d59897b6a70",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 1705,
        "y": 900,
        "wires": []
    },
    {
        "id": "27f9332e695de4b7",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 1705,
        "y": 940,
        "wires": []
    },
    {
        "id": "1c8ea076f1487c81",
        "type": "link out",
        "z": "b8917b97d5ee0c66",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1705,
        "y": 980,
        "wires": []
    },
    {
        "id": "d092ebeea789b1dc",
        "type": "function",
        "z": "b8917b97d5ee0c66",
        "name": "check uart",
        "func": "if(global.get(\"usb1uart\")==3 || global.get(\"usb2uart\")==3 || global.get(\"usb3uart\")==3 || global.get(\"usb4uart\")==3) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 840,
        "wires": [
            [
                "f5f48248af88ba8a"
            ]
        ]
    },
    {
        "id": "178dda8750241089",
        "type": "comment",
        "z": "b8917b97d5ee0c66",
        "name": "UART settings",
        "info": "25008E1\nSplit after 60ms",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "9926cf29f705fba5",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kill RFSniffer",
        "tooltip": "ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 880,
        "wires": [
            [
                "4f6e7e315938f343"
            ]
        ]
    },
    {
        "id": "4f6e7e315938f343",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 260,
        "y": 880,
        "wires": [
            [
                "2c4390f9806bc3e4",
                "733b41a02c35755d"
            ],
            [],
            [
                "857666c92e2811b3"
            ]
        ]
    },
    {
        "id": "bf3c07ed7952abcc",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "beafb5d1e1bce293"
            ]
        ]
    },
    {
        "id": "beafb5d1e1bce293",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "explain",
        "func": "msg.payload = \"Start pressing the 'ON' button of your 433MHz remote after clicking 'OK'. <br>When a message is received a pop-up message will show up.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 240,
        "wires": [
            [
                "6df741874507dc5a"
            ]
        ]
    },
    {
        "id": "6df741874507dc5a",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "dde6d5fada26b6d7"
            ]
        ]
    },
    {
        "id": "c904a0265906c0c4",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo pekaway/433Utils/RPi_utils/RFSniffer",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "120",
        "winHide": false,
        "oldrc": false,
        "name": "RFSniffer",
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "64b9baf1ea963117"
            ],
            [],
            []
        ]
    },
    {
        "id": "c8facb1029fb7ab8",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "received data",
        "func": "flow.set(\"received\", msg.payload.substring(9).trim())\nmsg.payload = msg.payload + \"<br><br> Click ok to save to 'ON'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 240,
        "wires": [
            [
                "e978fc55e44f0af1"
            ]
        ]
    },
    {
        "id": "e978fc55e44f0af1",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 240,
        "wires": [
            [
                "9ce29ee40969f874"
            ]
        ]
    },
    {
        "id": "9ce29ee40969f874",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save",
        "func": "if (msg.payload == \"OK\") {\n    global.set(\"LFBrosON\", flow.get(\"received\"))\n    msg.payload = \"set 'ON' to \" + global.get(\"LFBrosON\")\n    node.send([msg, null])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 240,
        "wires": [
            [
                "09f8e533dca62385",
                "8cfe61dd70e19cc6"
            ],
            [
                "2b309f55eb91947c"
            ]
        ]
    },
    {
        "id": "2b309f55eb91947c",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 2000,
        "y": 260,
        "wires": [
            [
                "2c4390f9806bc3e4",
                "733b41a02c35755d"
            ],
            [],
            []
        ]
    },
    {
        "id": "09f8e533dca62385",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2020,
        "y": 220,
        "wires": []
    },
    {
        "id": "b8e75b10cad4f858",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "04689250e67bf25e"
            ]
        ]
    },
    {
        "id": "04689250e67bf25e",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "explain",
        "func": "msg.payload = \"Start pressing the 'OFF' button of your 433MHz remote after clicking 'OK'. <br>When a message is received a pop-up message will show up.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "d23390ba6261b9ea"
            ]
        ]
    },
    {
        "id": "d23390ba6261b9ea",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 400,
        "wires": [
            [
                "153f839c79d6dab9"
            ]
        ]
    },
    {
        "id": "f45f2e6880026477",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo pekaway/433Utils/RPi_utils/RFSniffer",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "120",
        "winHide": false,
        "oldrc": false,
        "name": "RFSniffer",
        "x": 1160,
        "y": 400,
        "wires": [
            [
                "a7f5a5f22cf36adc"
            ],
            [],
            []
        ]
    },
    {
        "id": "ab2a7844a7db13d4",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "received data",
        "func": "flow.set(\"received\", msg.payload.substring(9).trim())\nmsg.payload = msg.payload + \"<br><br> Click ok to save to 'OFF'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 400,
        "wires": [
            [
                "96b42041016e385c"
            ]
        ]
    },
    {
        "id": "96b42041016e385c",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 400,
        "wires": [
            [
                "de833ebd1c5f7f46"
            ]
        ]
    },
    {
        "id": "de833ebd1c5f7f46",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save",
        "func": "if (msg.payload == \"OK\") {\n    global.set(\"LFBrosOFF\", flow.get(\"received\"))\n    msg.payload = \"set 'OFF' to \" + global.get(\"LFBrosOFF\")\n    node.send([msg, null])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 400,
        "wires": [
            [
                "2098a1e67fa605a5",
                "9b6b370992865e6a"
            ],
            [
                "108d3a31eba4cac7"
            ]
        ]
    },
    {
        "id": "108d3a31eba4cac7",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 2000,
        "y": 420,
        "wires": [
            [
                "2c4390f9806bc3e4",
                "733b41a02c35755d"
            ],
            [],
            []
        ]
    },
    {
        "id": "2098a1e67fa605a5",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2020,
        "y": 380,
        "wires": []
    },
    {
        "id": "0f0cb5ff9650cdf4",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read PLUS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "710fcd8ed634793b"
            ]
        ]
    },
    {
        "id": "710fcd8ed634793b",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "explain",
        "func": "msg.payload = \"Start pressing the 'PLUS' button of your 433MHz remote after clicking 'OK'. <br>When a message is received a pop-up message will show up.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 560,
        "wires": [
            [
                "a794a1e360a91996"
            ]
        ]
    },
    {
        "id": "a794a1e360a91996",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 560,
        "wires": [
            [
                "01c8a0eea0c14b91"
            ]
        ]
    },
    {
        "id": "7cd13e47543867f2",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo pekaway/433Utils/RPi_utils/RFSniffer",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "120",
        "winHide": false,
        "oldrc": false,
        "name": "RFSniffer",
        "x": 1160,
        "y": 560,
        "wires": [
            [
                "4bebc4f334fa1f57"
            ],
            [],
            []
        ]
    },
    {
        "id": "9e073a13f1439122",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "received data",
        "func": "flow.set(\"received\", msg.payload.substring(9).trim())\nmsg.payload = msg.payload + \"<br><br> Click ok to save to 'PLUS'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 560,
        "wires": [
            [
                "5dcadc7edb2d4dbb"
            ]
        ]
    },
    {
        "id": "5dcadc7edb2d4dbb",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 560,
        "wires": [
            [
                "7d1b95d6827aa2af"
            ]
        ]
    },
    {
        "id": "7d1b95d6827aa2af",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save",
        "func": "if (msg.payload == \"OK\") {\n    global.set(\"LFBrosPLUS\", flow.get(\"received\"))\n    msg.payload = \"set 'PLUS' to \" + global.get(\"LFBrosPLUS\")\n    node.send([msg, null])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 560,
        "wires": [
            [
                "fad3c1ba915c9fd1",
                "a7112c91e55acc1d"
            ],
            [
                "618cb7cd3a64d3e5"
            ]
        ]
    },
    {
        "id": "618cb7cd3a64d3e5",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 2000,
        "y": 580,
        "wires": [
            [
                "2c4390f9806bc3e4",
                "733b41a02c35755d"
            ],
            [],
            []
        ]
    },
    {
        "id": "fad3c1ba915c9fd1",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2020,
        "y": 540,
        "wires": []
    },
    {
        "id": "8ab4308899133e7d",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read MINUS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "e7dde7b3a2732248"
            ]
        ]
    },
    {
        "id": "e7dde7b3a2732248",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "explain",
        "func": "msg.payload = \"Start pressing the 'MINUS' button of your 433MHz remote after clicking 'OK'. <br>When a message is received a pop-up message will show up.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 720,
        "wires": [
            [
                "34a5afa2245276be"
            ]
        ]
    },
    {
        "id": "34a5afa2245276be",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "d4e1bc38d70b4174"
            ]
        ]
    },
    {
        "id": "594dcd8e1e30743f",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo pekaway/433Utils/RPi_utils/RFSniffer",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "120",
        "winHide": false,
        "oldrc": false,
        "name": "RFSniffer",
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "cfc7109d6411ceaa"
            ],
            [],
            []
        ]
    },
    {
        "id": "7bd713f768ee389f",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "received data",
        "func": "flow.set(\"received\", msg.payload.substring(9).trim())\nmsg.payload = msg.payload + \"<br><br> Click ok to save to 'MINUS'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 720,
        "wires": [
            [
                "2eca798db46ce688"
            ]
        ]
    },
    {
        "id": "2eca798db46ce688",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 720,
        "wires": [
            [
                "56b91c0360a605e9"
            ]
        ]
    },
    {
        "id": "56b91c0360a605e9",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save",
        "func": "if (msg.payload == \"OK\") {\n    global.set(\"LFBrosMINUS\", flow.get(\"received\"))\n    msg.payload = \"set 'MINUS' to \" + global.get(\"LFBrosMINUS\")\n    node.send([msg, null])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 720,
        "wires": [
            [
                "ebc959b8585c882e",
                "d1d82065bf43bf2e"
            ],
            [
                "08c0657f34d1f7ca"
            ]
        ]
    },
    {
        "id": "ebc959b8585c882e",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2020,
        "y": 700,
        "wires": []
    },
    {
        "id": "2dde9710428df48b",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "train LFBros ON",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "4e434b0096d94e67",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "train LFBros OFF",
        "info": "",
        "x": 120,
        "y": 360,
        "wires": []
    },
    {
        "id": "3b76b567ee3dc226",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "train LFBros PLUS",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "d73d1650e09a0086",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "train LFBros MINUS",
        "info": "",
        "x": 130,
        "y": 680,
        "wires": []
    },
    {
        "id": "0a39e8ac8f86f2d3",
        "type": "file",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosON",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2240,
        "y": 180,
        "wires": [
            [
                "c6f47aad7d9feabc"
            ]
        ]
    },
    {
        "id": "8cfe61dd70e19cc6",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save state",
        "func": "msg.payload = global.get(\"LFBrosON\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 180,
        "wires": [
            [
                "0a39e8ac8f86f2d3"
            ]
        ]
    },
    {
        "id": "0e36aab280f60b19",
        "type": "file",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosOFF",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2240,
        "y": 340,
        "wires": [
            [
                "62457e6f9581dbd8"
            ]
        ]
    },
    {
        "id": "9b6b370992865e6a",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save state",
        "func": "msg.payload = global.get(\"LFBrosOFF\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 340,
        "wires": [
            [
                "0e36aab280f60b19"
            ]
        ]
    },
    {
        "id": "c3648d965171fa3d",
        "type": "file",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosPLUS",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2240,
        "y": 500,
        "wires": [
            [
                "e27e0485df888ab3"
            ]
        ]
    },
    {
        "id": "a7112c91e55acc1d",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save state",
        "func": "msg.payload = global.get(\"LFBrosPLUS\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 500,
        "wires": [
            [
                "c3648d965171fa3d"
            ]
        ]
    },
    {
        "id": "a3ddfd47c19ff703",
        "type": "file",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosMINUS",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2250,
        "y": 660,
        "wires": [
            [
                "efcfd3cff8d5d9c4"
            ]
        ]
    },
    {
        "id": "d1d82065bf43bf2e",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "save state",
        "func": "msg.payload = global.get(\"LFBrosMINUS\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 660,
        "wires": [
            [
                "a3ddfd47c19ff703"
            ]
        ]
    },
    {
        "id": "dde6d5fada26b6d7",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"OK\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 240,
        "wires": [
            [
                "1ebfe0048af3b46a"
            ]
        ]
    },
    {
        "id": "153f839c79d6dab9",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"OK\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 400,
        "wires": [
            [
                "d11d187dd65f3ff5"
            ]
        ]
    },
    {
        "id": "01c8a0eea0c14b91",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"OK\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 560,
        "wires": [
            [
                "9d57a86cb092a804"
            ]
        ]
    },
    {
        "id": "d4e1bc38d70b4174",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"OK\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 720,
        "wires": [
            [
                "b00e58004473b5cb"
            ]
        ]
    },
    {
        "id": "08c0657f34d1f7ca",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 2000,
        "y": 740,
        "wires": [
            [
                "2c4390f9806bc3e4",
                "733b41a02c35755d"
            ],
            [],
            []
        ]
    },
    {
        "id": "5a61ea17acbe52a0",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "188bc5875dcdebe6",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current ON: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2270,
        "y": 140,
        "wires": []
    },
    {
        "id": "4e32488bc04a06e0",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "188bc5875dcdebe6",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current OFF: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2630,
        "y": 320,
        "wires": []
    },
    {
        "id": "08399b77d5ae666e",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "188bc5875dcdebe6",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current PLUS: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2620,
        "y": 480,
        "wires": []
    },
    {
        "id": "15a71aba9b48b794",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "188bc5875dcdebe6",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current MINUS: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2620,
        "y": 640,
        "wires": []
    },
    {
        "id": "fe6c7b6a2a20c90f",
        "type": "file in",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosON",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1780,
        "y": 80,
        "wires": [
            [
                "c6f47aad7d9feabc"
            ]
        ]
    },
    {
        "id": "600a27f142ddeea0",
        "type": "file in",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosOFF",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2240,
        "y": 300,
        "wires": [
            [
                "62457e6f9581dbd8"
            ]
        ]
    },
    {
        "id": "94d50faaa0ad752b",
        "type": "file in",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosPLUS",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2240,
        "y": 460,
        "wires": [
            [
                "e27e0485df888ab3"
            ]
        ]
    },
    {
        "id": "7a46efde4954e04e",
        "type": "file in",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBrosMINUS",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2250,
        "y": 620,
        "wires": [
            [
                "efcfd3cff8d5d9c4"
            ]
        ]
    },
    {
        "id": "0cae297d0927fd5d",
        "type": "link in",
        "z": "b14c00f226d9b539",
        "name": "open LFBros tab",
        "links": [
            "b273077299e976ba",
            "61d1d5afb4a2b5b7"
        ],
        "x": 1585,
        "y": 40,
        "wires": [
            [
                "fe6c7b6a2a20c90f",
                "600a27f142ddeea0",
                "94d50faaa0ad752b",
                "7a46efde4954e04e",
                "2c4390f9806bc3e4"
            ]
        ]
    },
    {
        "id": "7fdb9e24a2f21c91",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "188bc5875dcdebe6",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RFSniffer process ID: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2620,
        "y": 860,
        "wires": []
    },
    {
        "id": "c132969485cd2708",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo ps -A | grep RFSniffer | awk '{print $1-1}'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "grep RFSniffer",
        "x": 2220,
        "y": 860,
        "wires": [
            [
                "417530fa3dc588da"
            ],
            [],
            []
        ]
    },
    {
        "id": "417530fa3dc588da",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "running?",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"not running\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 860,
        "wires": [
            [
                "7fdb9e24a2f21c91"
            ]
        ]
    },
    {
        "id": "ac28e94b54cc229c",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "Kill RFSniffer manually",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "2c4390f9806bc3e4",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2020,
        "y": 860,
        "wires": [
            [
                "c132969485cd2708"
            ]
        ]
    },
    {
        "id": "580b5b484e0102bf",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "25fbcd2f8eb3baa9",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send MINUS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1280,
        "wires": [
            [
                "f0ef992e2152411e"
            ]
        ]
    },
    {
        "id": "e54080dd93bab948",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "25fbcd2f8eb3baa9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send PLUS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1180,
        "wires": [
            [
                "2dee34797b826158"
            ]
        ]
    },
    {
        "id": "a81a55299712638e",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "25fbcd2f8eb3baa9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "cbcd834198234627"
            ]
        ]
    },
    {
        "id": "98685eb46808090b",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "25fbcd2f8eb3baa9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 980,
        "wires": [
            [
                "3a455d006a13b9cb"
            ]
        ]
    },
    {
        "id": "3a455d006a13b9cb",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosON\")\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 980,
        "wires": [
            [
                "a64a509b42396044",
                "c72e221edc8ce206"
            ]
        ]
    },
    {
        "id": "a64a509b42396044",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c72e221edc8ce206",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'ON' (\" + global.get(\"LFBrosON\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 940,
        "wires": [
            [
                "a794420814fab2ae"
            ]
        ]
    },
    {
        "id": "a794420814fab2ae",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 940,
        "wires": []
    },
    {
        "id": "cbcd834198234627",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosOFF\")\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "17f7e24475c67f4c",
                "647892fb0590d16f"
            ]
        ]
    },
    {
        "id": "17f7e24475c67f4c",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 1080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "647892fb0590d16f",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'OFF'(\" + global.get(\"LFBrosOFF\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "123af49be438f5c8"
            ]
        ]
    },
    {
        "id": "123af49be438f5c8",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2dee34797b826158",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosPLUS\").trim()\n//send code [protocol] [pulselength]\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend.trim()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1180,
        "wires": [
            [
                "78b9e0a096703020",
                "6bb0bfbe6e76744e"
            ]
        ]
    },
    {
        "id": "78b9e0a096703020",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "0.075",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 1180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6bb0bfbe6e76744e",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'PLUS'(\" + global.get(\"LFBrosPLUS\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "19b2a515bd47dd38"
            ]
        ]
    },
    {
        "id": "19b2a515bd47dd38",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f0ef992e2152411e",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosMINUS\")\n//send code [protocol] [pulselength]\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend.trim()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "aee1cda706a3e897",
                "bb60d92aca18da3c"
            ]
        ]
    },
    {
        "id": "aee1cda706a3e897",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "0.075",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bb60d92aca18da3c",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'MINUS'(\" + global.get(\"LFBrosMINUS\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1240,
        "wires": [
            [
                "c46303e5a872cc1b"
            ]
        ]
    },
    {
        "id": "c46303e5a872cc1b",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f725f638654a39de",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "188bc5875dcdebe6",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reload Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Settings reloaded",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1520,
        "y": 80,
        "wires": [
            [
                "fe6c7b6a2a20c90f",
                "600a27f142ddeea0",
                "94d50faaa0ad752b",
                "7a46efde4954e04e",
                "2c4390f9806bc3e4",
                "bdab36c73e8f611b"
            ]
        ]
    },
    {
        "id": "bdab36c73e8f611b",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1770,
        "y": 40,
        "wires": []
    },
    {
        "id": "bddd91252725bd59",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "f10cd60a4aea0aac",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete commands",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "f42a894371709e1b"
            ]
        ]
    },
    {
        "id": "c6f47aad7d9feabc",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "not set?",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"not set\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 140,
        "wires": [
            [
                "5a61ea17acbe52a0"
            ]
        ]
    },
    {
        "id": "62457e6f9581dbd8",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "not set?",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"not set\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 320,
        "wires": [
            [
                "4e32488bc04a06e0"
            ]
        ]
    },
    {
        "id": "e27e0485df888ab3",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "not set?",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"not set\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 480,
        "wires": [
            [
                "08399b77d5ae666e"
            ]
        ]
    },
    {
        "id": "efcfd3cff8d5d9c4",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "not set?",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"not set\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 640,
        "wires": [
            [
                "15a71aba9b48b794"
            ]
        ]
    },
    {
        "id": "f42a894371709e1b",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set empty",
        "func": "msg.payload = \"Trained commands will be deleted, are you sure?\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 120,
        "wires": [
            [
                "b6117c05933c26d9"
            ]
        ]
    },
    {
        "id": "b6117c05933c26d9",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "f7c14db92d9c25e2"
            ]
        ]
    },
    {
        "id": "f7c14db92d9c25e2",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"OK\") {\n    msg.payload = \"\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 120,
        "wires": [
            [
                "0a39e8ac8f86f2d3",
                "0e36aab280f60b19",
                "c3648d965171fa3d",
                "a3ddfd47c19ff703",
                "2c4390f9806bc3e4"
            ]
        ]
    },
    {
        "id": "6c673a025f4a0938",
        "type": "ui_switch",
        "z": "b14c00f226d9b539",
        "name": "",
        "label": "LFBros on/off",
        "tooltip": "",
        "group": "188bc5875dcdebe6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 820,
        "y": 40,
        "wires": [
            [
                "b4b57307dce779e5"
            ]
        ]
    },
    {
        "id": "bfdf5c6c99a872d7",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "show/hide group",
        "func": "global.set(\"LFBros\", msg.payload)\nif(msg.payload==true) {\n    msg.payload = {\"group\":{\"show\":[\"Heater_LFBros\"]}};\n    return msg\n}\nelse if(msg.payload==false) {\n    msg.payload = {\"group\":{\"hide\":[\"Heater_LFBros\"]}};\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 40,
        "wires": [
            [
                "dabf0f92a2cad8f1"
            ]
        ]
    },
    {
        "id": "7ad39b1f796dc794",
        "type": "link in",
        "z": "b14c00f226d9b539",
        "name": "open LFBros tab",
        "links": [
            "b273077299e976ba",
            "61d1d5afb4a2b5b7"
        ],
        "x": 225,
        "y": 40,
        "wires": [
            [
                "f7138c06ed7a2307"
            ]
        ]
    },
    {
        "id": "b4b57307dce779e5",
        "type": "file",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBros",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1010,
        "y": 40,
        "wires": [
            [
                "bfdf5c6c99a872d7"
            ]
        ]
    },
    {
        "id": "f7138c06ed7a2307",
        "type": "file in",
        "z": "b14c00f226d9b539",
        "name": "",
        "filename": "pekaway/LFBros",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "9f0f65183e0a3297"
            ]
        ]
    },
    {
        "id": "9f0f65183e0a3297",
        "type": "change",
        "z": "b14c00f226d9b539",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "6c673a025f4a0938"
            ]
        ]
    },
    {
        "id": "64b9baf1ea963117",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 240,
        "wires": [
            [
                "c8facb1029fb7ab8"
            ]
        ]
    },
    {
        "id": "a7f5a5f22cf36adc",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 400,
        "wires": [
            [
                "ab2a7844a7db13d4"
            ]
        ]
    },
    {
        "id": "4bebc4f334fa1f57",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 560,
        "wires": [
            [
                "9e073a13f1439122"
            ]
        ]
    },
    {
        "id": "cfc7109d6411ceaa",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 720,
        "wires": [
            [
                "7bd713f768ee389f"
            ]
        ]
    },
    {
        "id": "dabf0f92a2cad8f1",
        "type": "ui_ui_control",
        "z": "b14c00f226d9b539",
        "name": "",
        "events": "all",
        "x": 1360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "507fb6312c8adfd9",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "check if LFBros is true/false",
        "info": "",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "4d0a156bc2df6baa",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "test buttons",
        "info": "",
        "x": 110,
        "y": 940,
        "wires": []
    },
    {
        "id": "b5f29cb57be4045c",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "62406e15c79766b2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Temperature Down",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 1280,
        "wires": [
            [
                "91951e0bf5b641ae"
            ]
        ]
    },
    {
        "id": "23d34bcd32656dda",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "62406e15c79766b2",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Temperature Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 920,
        "y": 1180,
        "wires": [
            [
                "a3d7ca7e41b6d10b"
            ]
        ]
    },
    {
        "id": "c2211482c94a0d30",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "62406e15c79766b2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 1080,
        "wires": [
            [
                "1f4e147c6162d860"
            ]
        ]
    },
    {
        "id": "c26a24e2f2e59a9c",
        "type": "ui_button",
        "z": "b14c00f226d9b539",
        "name": "",
        "group": "62406e15c79766b2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 980,
        "wires": [
            [
                "cec6fb8579f1cc69"
            ]
        ]
    },
    {
        "id": "cec6fb8579f1cc69",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosON\")\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend\n\nif (msg.codesend ==\"\") {\n    msg.payload = \"Command for 'ON' is not set, please set the command in Config > System > LFBros first.\"\n    return [msg, null]\n}\nglobal.set(\"LFBrosHeating\", \"ON\")\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 980,
        "wires": [
            [
                "2d3a9f75c38f8a5f"
            ],
            [
                "68bd5190aa4e7227",
                "ad294cf9971e3002",
                "5c7d21135681a991"
            ]
        ]
    },
    {
        "id": "ad294cf9971e3002",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5c7d21135681a991",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'ON' (\" + global.get(\"LFBrosON\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 940,
        "wires": [
            [
                "9511e24a4a768bba"
            ]
        ]
    },
    {
        "id": "9511e24a4a768bba",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 940,
        "wires": []
    },
    {
        "id": "1f4e147c6162d860",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosOFF\")\nmsg.payload = \"sudo pekaway/433Utils/RPi_utils/codesend \" + msg.codesend\n\nif (msg.codesend ==\"\") {\n    msg.payload = \"Command for 'OFF' is not set, please set the command in Config > System > LFBros first.\"\n    return [msg, null]\n}\n\nglobal.set(\"LFBrosHeating\", \"OFF\")\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1080,
        "wires": [
            [
                "2d3a9f75c38f8a5f"
            ],
            [
                "9a259a4e4a57d24a",
                "4df9d1b51c474b38",
                "68bd5190aa4e7227"
            ]
        ]
    },
    {
        "id": "4df9d1b51c474b38",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 1080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9a259a4e4a57d24a",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'OFF'(\" + global.get(\"LFBrosOFF\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "640a0fbcea245c17"
            ]
        ]
    },
    {
        "id": "640a0fbcea245c17",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a3d7ca7e41b6d10b",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosPLUS\")\nmsg.payload = \"sudo timeout 0.125s pekaway/433Utils/RPi_utils/codesend \" + msg.codesend.trim()\n\nif (msg.codesend ==\"\") {\n    msg.payload = \"Command for 'PLUS' is not set, please set the command in Config > System > LFBros first.\"\n    return [msg, null]\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1180,
        "wires": [
            [
                "2d3a9f75c38f8a5f"
            ],
            [
                "994d94afa81d88f5",
                "cd60950abe8d0fcd"
            ]
        ]
    },
    {
        "id": "cd60950abe8d0fcd",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 1180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "994d94afa81d88f5",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'PLUS'(\" + global.get(\"LFBrosPLUS\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1140,
        "wires": [
            [
                "286ac032d18f3e9e"
            ]
        ]
    },
    {
        "id": "286ac032d18f3e9e",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1140,
        "wires": []
    },
    {
        "id": "91951e0bf5b641ae",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "set payload",
        "func": "msg.codesend = global.get(\"LFBrosMINUS\")\nmsg.payload = \"sudo timeout 0.125s pekaway/433Utils/RPi_utils/codesend \" + msg.codesend.trim()\n\nif (msg.codesend ==\"\") {\n    msg.payload = \"Command for 'MINUS' is not set, please set the command in Config > System > LFBros first.\"\n    return [msg, null]\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1280,
        "wires": [
            [
                "2d3a9f75c38f8a5f"
            ],
            [
                "c4930f1c078c1bb3",
                "14b3010761960535"
            ]
        ]
    },
    {
        "id": "c4930f1c078c1bb3",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "14b3010761960535",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = \"Sent command 'MINUS'(\" + global.get(\"LFBrosMINUS\") + \")\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1240,
        "wires": [
            [
                "0bd9b813f4a7d465"
            ]
        ]
    },
    {
        "id": "0bd9b813f4a7d465",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8d5bc23fb534c821",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "heater tab buttons",
        "info": "",
        "x": 930,
        "y": 940,
        "wires": []
    },
    {
        "id": "e4542c58debfb81a",
        "type": "ui_text",
        "z": "b14c00f226d9b539",
        "group": "62406e15c79766b2",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "LFBros Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1560,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a27f1ff6ea6056aa",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "LFBros status in Heater tab",
        "info": "",
        "x": 1170,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4d62a67209bf8aa8",
        "type": "ui_ui_control",
        "z": "b14c00f226d9b539",
        "name": "",
        "events": "change",
        "x": 1120,
        "y": 1400,
        "wires": [
            [
                "73a24576f1fc0585"
            ]
        ]
    },
    {
        "id": "73a24576f1fc0585",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "check LFBros",
        "func": "if (msg.payload == \"change\" && msg.tab == 2) {\n    msg.payload = global.get(\"LFBrosHeating\")\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1400,
        "wires": [
            [
                "e4542c58debfb81a"
            ]
        ]
    },
    {
        "id": "68bd5190aa4e7227",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "txt",
        "func": "msg.payload = global.get(\"LFBrosHeating\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1360,
        "wires": [
            [
                "e4542c58debfb81a"
            ]
        ]
    },
    {
        "id": "2d3a9f75c38f8a5f",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "dialog",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "cmd not set",
        "x": 1390,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d7cd4142e23e4f05",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 632.0000381469727,
        "y": 893.0000343322754,
        "wires": []
    },
    {
        "id": "857666c92e2811b3",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "if (msg.payload.code == 0) {\n    msg.payload = \"killed RFSniffer process(es)\";\n    return msg;\n}\nelse {\n    msg.payload = \"no processes to kill detected\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 462.00003814697266,
        "y": 893.0000343322754,
        "wires": [
            [
                "d7cd4142e23e4f05"
            ]
        ]
    },
    {
        "id": "1ebfe0048af3b46a",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo ps -A | grep RFSniffer | wc -l",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check processes",
        "x": 790,
        "y": 240,
        "wires": [
            [
                "6fbdc08f342ca894"
            ],
            [],
            []
        ]
    },
    {
        "id": "6fbdc08f342ca894",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = parseInt(msg.payload.trim())\nif (msg.payload > 0) {\n    msg.payload = \"Restarting already running RFSniffer process...\"\n    node.send([null, null, msg])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg, null]\n}\nelse {\n    return [msg, null, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 240,
        "wires": [
            [
                "c904a0265906c0c4",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [
                "b7d583b20923f365"
            ],
            [
                "e3cae33e6650974e"
            ]
        ]
    },
    {
        "id": "b7d583b20923f365",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 1160,
        "y": 300,
        "wires": [
            [
                "c904a0265906c0c4",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [],
            []
        ]
    },
    {
        "id": "e3cae33e6650974e",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1180,
        "y": 340,
        "wires": []
    },
    {
        "id": "d11d187dd65f3ff5",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo ps -A | grep RFSniffer | wc -l",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check processes",
        "x": 790,
        "y": 400,
        "wires": [
            [
                "d69ca87e6f65f42b"
            ],
            [],
            []
        ]
    },
    {
        "id": "d69ca87e6f65f42b",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = parseInt(msg.payload.trim())\nif (msg.payload > 0) {\n    msg.payload = \"Restarting already running RFSniffer process...\"\n    node.send([null, null, msg])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg, null]\n}\nelse {\n    return [msg, null, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 400,
        "wires": [
            [
                "f45f2e6880026477",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [
                "3f7b1481b941eb0c"
            ],
            [
                "3de9f2aefecfacd9"
            ]
        ]
    },
    {
        "id": "3f7b1481b941eb0c",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "f45f2e6880026477",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [],
            []
        ]
    },
    {
        "id": "3de9f2aefecfacd9",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1180,
        "y": 500,
        "wires": []
    },
    {
        "id": "9d57a86cb092a804",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo ps -A | grep RFSniffer | wc -l",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check processes",
        "x": 790,
        "y": 560,
        "wires": [
            [
                "4a525a80f3807d59"
            ],
            [],
            []
        ]
    },
    {
        "id": "4a525a80f3807d59",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = parseInt(msg.payload.trim())\nif (msg.payload > 0) {\n    msg.payload = \"Restarting already running RFSniffer process...\"\n    node.send([null, null, msg])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg, null]\n}\nelse {\n    return [msg, null, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 560,
        "wires": [
            [
                "7cd13e47543867f2",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [
                "c82811fdd562cd16"
            ],
            [
                "579c2448608baff4"
            ]
        ]
    },
    {
        "id": "c82811fdd562cd16",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 1160,
        "y": 620,
        "wires": [
            [
                "7cd13e47543867f2",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [],
            []
        ]
    },
    {
        "id": "579c2448608baff4",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1180,
        "y": 660,
        "wires": []
    },
    {
        "id": "b00e58004473b5cb",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "sudo ps -A | grep RFSniffer | wc -l",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check processes",
        "x": 790,
        "y": 720,
        "wires": [
            [
                "a740868eecc7ebe3"
            ],
            [],
            []
        ]
    },
    {
        "id": "a740868eecc7ebe3",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "",
        "func": "msg.payload = parseInt(msg.payload.trim())\nif (msg.payload > 0) {\n    msg.payload = \"Restarting already running RFSniffer process...\"\n    node.send([null, null, msg])\n    msg.payload = \"ps -A | grep RFSniffer | awk '{print $1}' | sudo xargs kill -9 $1\"\n    return [null, msg, null]\n}\nelse {\n    return [msg, null, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "594dcd8e1e30743f",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [
                "dd3dff764867527f"
            ],
            [
                "8ea123e9df40022d"
            ]
        ]
    },
    {
        "id": "dd3dff764867527f",
        "type": "exec",
        "z": "b14c00f226d9b539",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill Sniffer",
        "x": 1160,
        "y": 780,
        "wires": [
            [
                "594dcd8e1e30743f",
                "2c4390f9806bc3e4",
                "51632128d3a8e795"
            ],
            [],
            []
        ]
    },
    {
        "id": "8ea123e9df40022d",
        "type": "ui_toast",
        "z": "b14c00f226d9b539",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1180,
        "y": 820,
        "wires": []
    },
    {
        "id": "8bfaf8cfab73012d",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "check if sniffer",
        "info": "",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "2933d6f2acf8158b",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "already running",
        "info": "",
        "x": 940,
        "y": 280,
        "wires": []
    },
    {
        "id": "f33aa3a43eb35f56",
        "type": "delay",
        "z": "b14c00f226d9b539",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1730,
        "y": 300,
        "wires": [
            [
                "2b309f55eb91947c"
            ]
        ]
    },
    {
        "id": "51632128d3a8e795",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "reset delay",
        "func": "msg.reset = true\nnode.send(msg)\nmsg = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 280,
        "wires": [
            [
                "f33aa3a43eb35f56"
            ]
        ]
    },
    {
        "id": "733b41a02c35755d",
        "type": "function",
        "z": "b14c00f226d9b539",
        "name": "reset delay",
        "func": "msg.reset = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 320,
        "wires": [
            [
                "f33aa3a43eb35f56"
            ]
        ]
    },
    {
        "id": "3d34b185f24b66bc",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "check if sniffer",
        "info": "",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "c087b204c75b221d",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "already running",
        "info": "",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "060a658317ff435c",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "check if sniffer",
        "info": "",
        "x": 950,
        "y": 520,
        "wires": []
    },
    {
        "id": "6a7b457e18c5dac6",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "already running",
        "info": "",
        "x": 940,
        "y": 600,
        "wires": []
    },
    {
        "id": "4a6bc0d330f81f65",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "check if sniffer",
        "info": "",
        "x": 950,
        "y": 680,
        "wires": []
    },
    {
        "id": "eb620d49f112c89b",
        "type": "comment",
        "z": "b14c00f226d9b539",
        "name": "already running",
        "info": "",
        "x": 940,
        "y": 760,
        "wires": []
    },
    {
        "id": "0c215f3c9da91a9e",
        "type": "inject",
        "z": "8de8c284cb7a3883",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "630573b0de44dad2"
            ]
        ]
    },
    {
        "id": "e0caa57d80f2e35d",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "get cell voltage",
        "func": "const buf = Buffer.from([\n0xDD,\n0xA5,\n0x04,\n0x00,\n0xFF,\n0xFC,\n0x77,\n]);\n\nmsg.payload = buf;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "4b484dd108465c9c"
            ]
        ]
    },
    {
        "id": "1f22a2373cde776a",
        "type": "binary",
        "z": "8de8c284cb7a3883",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nb16  =>cell1,\nb16  =>cell2,\nb16  =>cell3,\nb16 =>cell4,\nx8,\nx8,\nx8\n\n",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "bd9c40fd3355f675"
            ]
        ]
    },
    {
        "id": "dea5cc704004be19",
        "type": "link in",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect JBD,Generic",
        "links": [
            "528c91f1.5a81c",
            "5fee87d7.996858",
            "b2235f55.a779e",
            "ef216a53.2d9e48",
            "efbbd0afb487f495",
            "f90bb68363bb3bc0",
            "1075aabcf05c3d06",
            "75a7f3d3f2d011b8",
            "0d49bdccad387007",
            "1e7fd101697f754f",
            "4a4afe1543aa5aa9",
            "7294213c02390429",
            "85448bbe22d17a01",
            "edf12ff1c72dca2a",
            "fefc4df686ce2777",
            "7f955329a662eb94",
            "cd5a5e4cb39851e4",
            "5e3c9230cc132f6c",
            "7d74a95da2ff9101",
            "d426c207d4f1166d",
            "54b279a4e8344804",
            "dc97101427653fc4",
            "98110327a358491b",
            "21c38b1276d2a494"
        ],
        "x": 155,
        "y": 80,
        "wires": [
            [
                "53c1b277376429a0"
            ]
        ]
    },
    {
        "id": "53c1b277376429a0",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==7|| global.get(\"usb1uart\")==7 || global.get(\"usb2uart\")==7 || global.get(\"usb3uart\")==7 || global.get(\"usb4uart\")==7) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 80,
        "wires": [
            [
                "9076bfdaa750a655",
                "abe6174aaec03909"
            ]
        ]
    },
    {
        "id": "9076bfdaa750a655",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "check cell message",
        "func": "if(msg.payload[1]==4)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 80,
        "wires": [
            [
                "1f22a2373cde776a"
            ]
        ]
    },
    {
        "id": "5697ac2b7ab1e6cb",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "get status",
        "func": "const buf = Buffer.from([\n0xDD,\n0xA5,\n0x03,\n0x00,\n0xFF,\n0xFD,\n0x77,\n]);\n\nmsg.payload = buf;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 300,
        "wires": [
            [
                "4b484dd108465c9c"
            ]
        ]
    },
    {
        "id": "a1ec94c0e4b11da4",
        "type": "delay",
        "z": "8de8c284cb7a3883",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "5697ac2b7ab1e6cb"
            ]
        ]
    },
    {
        "id": "abe6174aaec03909",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "check status message",
        "func": "if(msg.payload[1]==3)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "cb8544b1580576d8"
            ]
        ]
    },
    {
        "id": "cb8544b1580576d8",
        "type": "binary",
        "z": "8de8c284cb7a3883",
        "name": "buffer split",
        "property": "payload",
        "pattern": "x8,\nx8,\nx8,\nx8,\nb16  =>battvolt,\n-b16  =>amps,\nb16  =>remaincap,\nb16 =>capacity,\nb16 =>cycles,\nb16 => productiondate, \nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nx8,\nb16=>temp\n\n",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "9fc4a4d719b032e3"
            ]
        ]
    },
    {
        "id": "9fc4a4d719b032e3",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "set global BMS values",
        "func": "//battery\nglobal.set(\"BMSamps\",(msg.payload.amps/100));\nglobal.set(\"BMSvolt\",msg.payload.battvolt/100)\nglobal.set(\"BMStemp\",(msg.payload.temp-2731)/10);\nglobal.set(\"BMSsoc\",parseInt((msg.payload.remaincap/msg.payload.capacity*100).toFixed(0)));\nglobal.set(\"BMScap\",msg.payload.capacity/100);\n\nvar power = (msg.payload.amps/1000) * msg.payload.battvolt;\npower = power/10;\npower = power.toFixed(1);\nglobal.set(\"BMSpower\",power)\n\nglobal.set(\"BATTvolt\",msg.payload.battvolt/100);\nglobal.set(\"BATTamps\",(msg.payload.amps/100));\n\n\n//battery\n//global.set(\"BMSmaxcap\", msg.payload.NominalAh);\n\nvar BMSmaxvolt = global.get(\"BMSvolt\")\nvar BMSminvolt = global.get(\"BMSvolt\")\n//var BMSmaxcap = global.get(\"BMSmaxcap\")\n\nif (global.get(\"BMSmaxvolt\") == \"wait\" || global.get(\"BMSmaxvolthighest\") == \"wait\" || BMSmaxvolt > global.get(\"BMSmaxvolthighest\")) {\n    global.set(\"BMSmaxvolthighest\", BMSmaxvolt)\n    global.set(\"BMSmaxvolt\", BMSmaxvolt.toString())\n}\nif (global.get(\"BMSminvolt\") == \"wait\" || global.get(\"BMSminvoltlowest\") == \"wait\" || BMSminvolt < global.get(\"BMSminvoltlowest\")) {\n    global.set(\"BMSminvoltlowest\", BMSminvolt)\n    global.set(\"BMSminvolt\", BMSminvolt.toString())\n}\n//if (global.get(\"BMSmaxcap\") == \"wait\" || global.get(\"BMSmaxcaphighest\") == \"wait\" || BMSmaxcap > global.get(\"BMSmaxcaphighest\")) {\n//    global.set(\"BMSmaxcaphighest\", BMSmaxcap)\n//    global.set(\"BMSmaxcap\", BMSmaxcap.toString())\n//}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "bd9c40fd3355f675",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "set global cell values",
        "func": "global.set(\"BMScell1\",msg.payload.cell1);\nglobal.set(\"BMScell2\",msg.payload.cell2);\nglobal.set(\"BMScell3\",msg.payload.cell3);\nglobal.set(\"BMScell4\",msg.payload.cell4);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "630573b0de44dad2",
        "type": "function",
        "z": "8de8c284cb7a3883",
        "name": "check uart setting",
        "func": "if(global.get(\"multiuart1\")==7)\n{\n    msg.topic=1;\n    return msg;\n}\n\nif(global.get(\"multiuart2\")==7)\n{\n    msg.topic=2;\n    return msg;\n}\n\nif(global.get(\"usb1uart\")==7)\n{\n    msg.topic=4;\n    return msg;\n}\n\nif(global.get(\"usb2uart\")==7)\n{\n    msg.topic=4;\n    return msg;\n}\n\nif(global.get(\"usb3uart\")==7)\n{\n    msg.topic=5;\n    return msg;\n}\n\nif(global.get(\"usb4uart\")==7)\n{\n    msg.topic=6;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 260,
        "wires": [
            [
                "e0caa57d80f2e35d",
                "a1ec94c0e4b11da4"
            ]
        ]
    },
    {
        "id": "4b484dd108465c9c",
        "type": "switch",
        "z": "8de8c284cb7a3883",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "ad0889da70890276"
            ],
            [
                "1e1625187c87ad41"
            ],
            [
                "72a0ed1577641509"
            ],
            [
                "7408e36a28fb0e42"
            ],
            [
                "875171626b6bcf9a"
            ],
            [
                "38463e3a293cfe8d"
            ]
        ]
    },
    {
        "id": "ad0889da70890276",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "bb2a109a66b34c73"
        ],
        "x": 1125,
        "y": 200,
        "wires": []
    },
    {
        "id": "1e1625187c87ad41",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "0b82ac1efa8711d7"
        ],
        "x": 1125,
        "y": 220,
        "wires": []
    },
    {
        "id": "72a0ed1577641509",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "631e04e732bc5864"
        ],
        "x": 1125,
        "y": 240,
        "wires": []
    },
    {
        "id": "7408e36a28fb0e42",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "e1b033b72073b492"
        ],
        "x": 1125,
        "y": 260,
        "wires": []
    },
    {
        "id": "875171626b6bcf9a",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "1b1168f8607d8205"
        ],
        "x": 1125,
        "y": 280,
        "wires": []
    },
    {
        "id": "38463e3a293cfe8d",
        "type": "link out",
        "z": "8de8c284cb7a3883",
        "name": "Serial Connect DALY MODBUS",
        "links": [
            "38cb32c06a098f9e"
        ],
        "x": 1125,
        "y": 300,
        "wires": []
    },
    {
        "id": "dc458ece.736dd",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "set global temp1",
        "func": "global.set(\"temp1\",msg.payload.toFixed(1));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 220,
        "wires": [
            [
                "4bcca8e94bda2018"
            ]
        ]
    },
    {
        "id": "eca28358.c946c",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "set global temp2",
        "func": "global.set(\"temp2\",msg.payload.toFixed(1));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 260,
        "wires": [
            [
                "1b27a8e2ffa0e22b"
            ]
        ]
    },
    {
        "id": "a947df33.984df",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "set global temp3",
        "func": "global.set(\"temp3\",msg.payload.toFixed(1));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 300,
        "wires": [
            [
                "c213918a728a800d"
            ]
        ]
    },
    {
        "id": "abb157dc.fca178",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "set global temp4",
        "func": "global.set(\"temp4\",msg.payload.toFixed(1));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 340,
        "wires": [
            [
                "bd951af11db7872a"
            ]
        ]
    },
    {
        "id": "f91642aa.68ec7",
        "type": "trigger",
        "z": "e604dd9.4dd232",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "54cf756a.b5c98c",
                "0fef12b504f8bc90"
            ]
        ]
    },
    {
        "id": "18dc0ba5.ac9384",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "",
        "func": "msg.reset = true; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "f91642aa.68ec7"
            ]
        ]
    },
    {
        "id": "54cf756a.b5c98c",
        "type": "delay",
        "z": "e604dd9.4dd232",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "18dc0ba5.ac9384"
            ]
        ]
    },
    {
        "id": "9e42b9a5.058028",
        "type": "link in",
        "z": "e604dd9.4dd232",
        "name": "tempconfigread",
        "links": [
            "822fb891.c1f2b8"
        ],
        "x": 135,
        "y": 140,
        "wires": [
            [
                "f91642aa.68ec7"
            ]
        ]
    },
    {
        "id": "4bcca8e94bda2018",
        "type": "link out",
        "z": "e604dd9.4dd232",
        "name": "Mqtt out temp1",
        "links": [
            "f76cd45103a046b7",
            "53fd8be3f52752ef"
        ],
        "x": 1775,
        "y": 220,
        "wires": []
    },
    {
        "id": "1b27a8e2ffa0e22b",
        "type": "link out",
        "z": "e604dd9.4dd232",
        "name": "Mqtt out temp2",
        "links": [
            "603f8e83a82e8c18"
        ],
        "x": 1775,
        "y": 260,
        "wires": []
    },
    {
        "id": "c213918a728a800d",
        "type": "link out",
        "z": "e604dd9.4dd232",
        "name": "Mqtt out temp3",
        "links": [
            "fd7fcf244e4bee83",
            "9f3f55feb3893f5f"
        ],
        "x": 1775,
        "y": 300,
        "wires": []
    },
    {
        "id": "bd951af11db7872a",
        "type": "link out",
        "z": "e604dd9.4dd232",
        "name": "Mqtt out temp4",
        "links": [
            "5fdda55432b18655",
            "6b354feaba1f2cf4",
            "0bb1e65d191779c3"
        ],
        "x": 1775,
        "y": 340,
        "wires": []
    },
    {
        "id": "f803e6911c171b24",
        "type": "inject",
        "z": "e604dd9.4dd232",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "0fef12b504f8bc90"
            ]
        ]
    },
    {
        "id": "0fef12b504f8bc90",
        "type": "exec",
        "z": "e604dd9.4dd232",
        "command": "timeout 5 python3 ~/pekaway/ds18b20_py/ds18b20.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "d8d8110871e37c65",
                "1e66f72ddb16f3df"
            ],
            [],
            []
        ]
    },
    {
        "id": "d8d8110871e37c65",
        "type": "split",
        "z": "e604dd9.4dd232",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "7fc98f5f479a49fd"
            ]
        ]
    },
    {
        "id": "7fc98f5f479a49fd",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "substring",
        "func": "if(msg.payload == \"\") {\n    global.set(\"temp1\",\"\")\n    global.set(\"temp2\",\"\")\n    global.set(\"temp3\",\"\")\n    global.set(\"temp4\",\"\")\n    return null\n}\n\nelse if(msg.payload == 0) {\n    return;\n}\n\nmsg.topic = Number(msg.payload.substring(0,1))\nmsg.payload = msg.payload.substring(5,11)\n\nmsg.payload = Number(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 260,
        "wires": [
            [
                "571b1e5b254007bc"
            ]
        ]
    },
    {
        "id": "571b1e5b254007bc",
        "type": "switch",
        "z": "e604dd9.4dd232",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1310,
        "y": 260,
        "wires": [
            [
                "dc458ece.736dd"
            ],
            [
                "eca28358.c946c"
            ],
            [
                "a947df33.984df"
            ],
            [
                "abb157dc.fca178"
            ]
        ]
    },
    {
        "id": "46753b7aab38859d",
        "type": "comment",
        "z": "e604dd9.4dd232",
        "name": "Relayboard Sensors",
        "info": "",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "642ee4b2a3492ee6",
        "type": "comment",
        "z": "e604dd9.4dd232",
        "name": "Dimmy Sensors",
        "info": "",
        "x": 260,
        "y": 460,
        "wires": []
    },
    {
        "id": "b85fa6d93cb5c1a3",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "",
        "func": "if (msg.payload.StatusSNS.hasOwnProperty(\"DS18B20\") || msg.payload.StatusSNS.hasOwnProperty(\"DS18B20-1\")){\n  msg.payload.check = \"available\"\n  if (msg.payload.StatusSNS.hasOwnProperty(\"DS18B20-1\")) {\n    msg.dimmytemp1 = msg.payload.StatusSNS['DS18B20-1'].Temperature\n    global.set(\"dimmytemp1\", msg.dimmytemp1)\n    msg.sensorcount = 2\n  }\n  if (msg.payload.StatusSNS.hasOwnProperty(\"DS18B20-2\")) {\n    msg.dimmytemp2 = msg.payload.StatusSNS['DS18B20-2'].Temperature\n    global.set(\"dimmytemp2\", msg.dimmytemp2)\n    msg.sensorcount = 2\n  }\n  else {\n    msg.dimmytemp1 = msg.payload.StatusSNS.DS18B20.Temperature\n    global.set(\"dimmytemp1\", msg.dimmytemp1)\n    global.set(\"dimmytemp2\", \"\")\n    msg.sensorcount = 1\n  }\n}\nelse {\n    msg.payload.check = \"not available\"\n    global.set(\"dimmytemp1\", \"\")\n    global.set(\"dimmytemp2\", \"\")\n    msg.sensorcount = 0\n}\n\nmsg.dimmytemp1 = global.get(\"dimmytemp1\")\nmsg.dimmytemp2 = global.get(\"dimmytemp2\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 500,
        "wires": [
            [
                "e343fcb7a4978535",
                "2160832dedc8a42f",
                "18b9fb11d95404fb"
            ]
        ]
    },
    {
        "id": "e343fcb7a4978535",
        "type": "ui_text",
        "z": "e604dd9.4dd232",
        "group": "6be979199ffe0de1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Dimmytemp1",
        "format": "{{msg.dimmytemp1}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 500,
        "wires": []
    },
    {
        "id": "2160832dedc8a42f",
        "type": "ui_text",
        "z": "e604dd9.4dd232",
        "group": "6be979199ffe0de1",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Dimmytemp2",
        "format": "{{msg.dimmytemp2}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "18b9fb11d95404fb",
        "type": "link out",
        "z": "e604dd9.4dd232",
        "name": "Mqtt out dimmytemps",
        "mode": "link",
        "links": [
            "6067203d20e41750"
        ],
        "x": 695,
        "y": 460,
        "wires": []
    },
    {
        "id": "1e66f72ddb16f3df",
        "type": "function",
        "z": "e604dd9.4dd232",
        "name": "set topic & payload",
        "func": "if (global.get(\"dimmytemp\") == true) {\n    msg.topic = \"pkw/cmnd/PekawayMOTA/Status\";\n    msg.payload = \"10\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "a8644fde9bb0675b"
            ]
        ]
    },
    {
        "id": "ac13256e0bcf82ac",
        "type": "inject",
        "z": "e604dd9.4dd232",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 900,
        "y": 400,
        "wires": [
            [
                "1e66f72ddb16f3df"
            ]
        ]
    },
    {
        "id": "a8644fde9bb0675b",
        "type": "mqtt out",
        "z": "e604dd9.4dd232",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1290,
        "y": 400,
        "wires": []
    },
    {
        "id": "a728c27183378021",
        "type": "mqtt in",
        "z": "e604dd9.4dd232",
        "name": "",
        "topic": "pkw/stat/PekawayMOTA/STATUS10",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 500,
        "wires": [
            [
                "ecf22eb1fea3bcdf"
            ]
        ]
    },
    {
        "id": "ecf22eb1fea3bcdf",
        "type": "json",
        "z": "e604dd9.4dd232",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 500,
        "wires": [
            [
                "b85fa6d93cb5c1a3"
            ]
        ]
    },
    {
        "id": "d802c8237276f548",
        "type": "comment",
        "z": "e604dd9.4dd232",
        "name": "get temp sensor data from dimmy board",
        "info": "",
        "x": 1150,
        "y": 360,
        "wires": []
    },
    {
        "id": "1efeed7ed06bead6",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "Levels",
        "info": "``",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "c93715849c999a24",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8080/shunt",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 280,
        "wires": [
            [
                "c158a2fdf8ebd56d"
            ]
        ]
    },
    {
        "id": "8d5f2d3821bd113e",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "cf58a32ae3e9ad83"
            ]
        ]
    },
    {
        "id": "c158a2fdf8ebd56d",
        "type": "json",
        "z": "08035fcf5428650d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 280,
        "wires": [
            [
                "1b1c883891b47440"
            ]
        ]
    },
    {
        "id": "cedf0e0014f76426",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "check shunt",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "1b1c883891b47440",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "//pekawayshunt\nflow.set(\"voltsmeasured\", parseFloat(msg.payload.volt));\nmsg.payload.amps = msg.payload.amps * -1;\nglobal.set(\"pkwshuntWatthours\",msg.payload.watthours);\nglobal.set(\"pkwshuntamps\",msg.payload.amps);\nglobal.set(\"pkwshuntMAXWatthours\",msg.payload.MaxWatthours);\n\nmsg.payload.volt = (Number(msg.payload.volt)*global.get(\"shuntcalibrate\")).toFixed(1); \n\nglobal.set(\"pkwshuntvolt\",msg.payload.volt);\nglobal.set(\"BATTamps\",msg.payload.amps)\nglobal.set(\"BATTvolt\", msg.payload.volt)\n\nvar value = Number(msg.payload.watthours);//value to be ranged\nvar max = Number(msg.payload.MaxWatthours);\n\n//range limits\nvar inputrange = msg.inputrange || [0,max];//expected range of input value. an array containing min and max \nvar outputrange = msg.outputrange || [0,100] // range into the value to be converted. an array containing min and max \n\n// range limits can also be represented as Object if you like. \n// var ranges = {mininput:0,maxinput:100,minoutput:50,maxoutput:50000};\n\n//you should store input and output ranges into context memory \n//so you don't need to send them with every message but only when needed\n// see https://nodered.org/docs/writing-functions#storing-data\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n// here how the brain is used\nvar output = mapNumber(value,inputrange[0],inputrange[1],outputrange[0],outputrange[1]);\n\noutput = parseFloat(output.toFixed(0))\n// hard work is done, place the ranged number into outgoing msg payload\nglobal.set(\"pkwshuntSOC\",output);\nglobal.set(\"BATTsoc\",\"output\");\n\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c09495b052b2f61b",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8080/levels",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "9556f460b4918a45"
            ]
        ]
    },
    {
        "id": "bfb87158aa1671de",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "c09495b052b2f61b"
            ]
        ]
    },
    {
        "id": "ad94f252a0b8c75b",
        "type": "json",
        "z": "08035fcf5428650d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 160,
        "wires": [
            [
                "9fdf3411330d0518",
                "3dd5f0b7e4452b48",
                "8bc8c5c9ce8a327b",
                "5fbc02be03d7ff54",
                "db6d220a9a3758ac"
            ]
        ]
    },
    {
        "id": "348245ff5afa9b7a",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store level2",
        "func": "var value = Number(msg.payload);//value to be ranged\n\n//range limits\nvar inputrange = msg.inputrange || [global.get(\"levelempty2\"),global.get(\"levelfull2\")];//expected range of input value. an array containing min and max \nvar outputrange = msg.outputrange || [0,100] // range into the value to be converted. an array containing min and max \n\n// range limits can also be represented as Object if you like. \n// var ranges = {mininput:0,maxinput:100,minoutput:50,maxoutput:50000};\n\n//you should store input and output ranges into context memory \n//so you don't need to send them with every message but only when needed\n// see https://nodered.org/docs/writing-functions#storing-data\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n// here how the brain is used\nvar output = mapNumber(value,inputrange[0],inputrange[1],outputrange[0],outputrange[1]);\n\noutput = parseFloat(output.toFixed(0))\n// hard work is done, place the ranged number into outgoing msg payload\n\nif (output == Infinity || output == -Infinity ) {\n    global.set(\"Level2\", 0)\n}\nelse {\n  if (output > 100) {\n    output = 100\n  }\n  else if (output < 0) {\n    output = 0\n  }\n    global.set(\"Level2\",output)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9fdf3411330d0518",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "if (msg.payload.level2 >= 32767) {\n    msg.payload = 0;\n}\nelse {\n    msg.payload = msg.payload.level2;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "348245ff5afa9b7a"
            ]
        ]
    },
    {
        "id": "3dd5f0b7e4452b48",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "if (msg.payload.level3 >= 32767) {\n    msg.payload = 0;\n}\nelse {\n    msg.payload = msg.payload.level3;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "69a9d2f0a71c2aed"
            ]
        ]
    },
    {
        "id": "8bc8c5c9ce8a327b",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "if(msg.payload.level4 >= 32767) {\n    msg.payload=0;\n}\nelse {\n    msg.payload = msg.payload.level4;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 180,
        "wires": [
            [
                "6cda2ff7eeb2b2ea"
            ]
        ]
    },
    {
        "id": "6cda2ff7eeb2b2ea",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store level4",
        "func": "var value = Number(msg.payload);//value to be ranged\n//range limits\nvar inputrange = msg.inputrange || [global.get(\"levelempty4\"),global.get(\"levelfull4\")];//expected range of input value. an array containing min and max \nvar outputrange = msg.outputrange || [0,100] // range into the value to be converted. an array containing min and max \n\n// range limits can also be represented as Object if you like. \n// var ranges = {mininput:0,maxinput:100,minoutput:50,maxoutput:50000};\n\n//you should store input and output ranges into context memory \n//so you don't need to send them with every message but only when needed\n// see https://nodered.org/docs/writing-functions#storing-data\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n// here how the brain is used\nvar output = mapNumber(value,inputrange[0],inputrange[1],outputrange[0],outputrange[1]);\n\noutput = parseFloat(output.toFixed(0))\n// hard work is done, place the ranged number into outgoing msg payload\n\nif (output == Infinity || output == -Infinity ) {\n    global.set(\"Level4\", 0)\n}\nelse {\n  if (output > 100) {\n    output = 100\n  }\n  else if (output < 0) {\n    output = 0\n  }\n    global.set(\"Level4\",output)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "69a9d2f0a71c2aed",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store level3",
        "func": "var value = Number(msg.payload);//value to be ranged\n\n//range limits\nvar inputrange = msg.inputrange || [global.get(\"levelempty3\"),global.get(\"levelfull3\")];//expected range of input value. an array containing min and max \nvar outputrange = msg.outputrange || [0,100] // range into the value to be converted. an array containing min and max \n\n// range limits can also be represented as Object if you like. \n// var ranges = {mininput:0,maxinput:100,minoutput:50,maxoutput:50000};\n\n//you should store input and output ranges into context memory \n//so you don't need to send them with every message but only when needed\n// see https://nodered.org/docs/writing-functions#storing-data\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n// here how the brain is used\nvar output = mapNumber(value,inputrange[0],inputrange[1],outputrange[0],outputrange[1]);\n\noutput = parseFloat(output.toFixed(0))\n// hard work is done, place the ranged number into outgoing msg payload\n\nif (output == Infinity || output == -Infinity ) {\n    global.set(\"Level3\", 0)\n}\nelse {\n  if (output > 100) {\n    output = 100\n  }\n  else if (output < 0) {\n    output = 0\n  }\n    global.set(\"Level3\",output)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eafed855a418e4c0",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "127.0.0.1:8080/setMaxWH/25000",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "59f4638989d2fdfd",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "eafed855a418e4c0"
            ]
        ]
    },
    {
        "id": "73cd989a60a1afce",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "Set BatteryCAP",
        "info": "``",
        "x": 200,
        "y": 320,
        "wires": []
    },
    {
        "id": "cc9cafe2be64506e",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "SetShunt",
        "info": "``",
        "x": 180,
        "y": 400,
        "wires": []
    },
    {
        "id": "77423bf30edbeac9",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "127.0.0.1:8080/setI/200",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "78da7b0e9a9c4c4e",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "77423bf30edbeac9"
            ]
        ]
    },
    {
        "id": "4328eee7ebc7b51f",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "Set soc watthours",
        "info": "``",
        "x": 210,
        "y": 840,
        "wires": []
    },
    {
        "id": "cf58a32ae3e9ad83",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "check pkwshuntactive",
        "func": "if(global.get(\"pkwshuntactive\") == true) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 280,
        "wires": [
            [
                "c93715849c999a24"
            ]
        ]
    },
    {
        "id": "3e1fcc2afc6b9a4a",
        "type": "ui_dropdown",
        "z": "08035fcf5428650d",
        "name": "",
        "label": "Shunt Config",
        "tooltip": "",
        "place": "Select option",
        "group": "00c90244e8033802",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "100a 75mv",
                "value": "100",
                "type": "str"
            },
            {
                "label": "200a 75mv",
                "value": "200",
                "type": "str"
            },
            {
                "label": "300a 75mv",
                "value": "300",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 380,
        "y": 594,
        "wires": [
            [
                "960edec31e316895",
                "4c07b3cb84d22014",
                "fca1b4607bf2cb50"
            ]
        ]
    },
    {
        "id": "64609f90d4149862",
        "type": "ui_toast",
        "z": "08035fcf5428650d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 740,
        "y": 594,
        "wires": [
            []
        ]
    },
    {
        "id": "960edec31e316895",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.payload =\"new Shunt : \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 594,
        "wires": [
            [
                "64609f90d4149862"
            ]
        ]
    },
    {
        "id": "9f0c1f372d4e35c8",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 920,
        "y": 634,
        "wires": [
            []
        ]
    },
    {
        "id": "4c07b3cb84d22014",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.url = \"127.0.0.1:8080/setI/\" + msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 634,
        "wires": [
            [
                "9f0c1f372d4e35c8"
            ]
        ]
    },
    {
        "id": "b87931274669d3d2",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.url = \"127.0.0.1:8080/setMaxWH/\" + msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 500,
        "wires": [
            [
                "5999a0e2a91271d0"
            ]
        ]
    },
    {
        "id": "5999a0e2a91271d0",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 500,
        "wires": [
            [
                "74f6a47093bce2ea"
            ]
        ]
    },
    {
        "id": "53926e38a7257ca6",
        "type": "ui_toast",
        "z": "08035fcf5428650d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 930,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "c2d029f07eac06d6",
        "type": "ui_dropdown",
        "z": "08035fcf5428650d",
        "name": "",
        "label": "Battery Capacity",
        "tooltip": "12v Systems",
        "place": "Select option",
        "group": "00c90244e8033802",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Lifepo4 100ah",
                "value": "1280",
                "type": "str"
            },
            {
                "label": "Lifepo4 150ah",
                "value": "1920",
                "type": "str"
            },
            {
                "label": "Lifepo4 200ah",
                "value": "2560",
                "type": "str"
            },
            {
                "label": "Lifepo4 280ah",
                "value": "3584",
                "type": "str"
            },
            {
                "label": "Lifepo4 300ah",
                "value": "3840",
                "type": "str"
            },
            {
                "label": "leadAcid 100ah",
                "value": "625",
                "type": "str"
            },
            {
                "label": "leadAcid  150ah",
                "value": "938",
                "type": "str"
            },
            {
                "label": "leadAcid 200ah",
                "value": "1250",
                "type": "str"
            },
            {
                "label": "leadAcid 250ah",
                "value": "1563",
                "type": "str"
            },
            {
                "label": "leadAcid 300ah",
                "value": "1875",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "b87931274669d3d2"
            ]
        ]
    },
    {
        "id": "74f6a47093bce2ea",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.payload = \"Your Capacity is \" + msg.payload + \" wh\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "53926e38a7257ca6"
            ]
        ]
    },
    {
        "id": "d707262f1a22a1e4",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 900,
        "wires": [
            [
                "ddcc8988075520a9"
            ]
        ]
    },
    {
        "id": "0d8e9bd94e3c7bbf",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "\n\n\nvar cap = Number(global.get(\"pkwshuntMAXWatthours\"));\nmsg.payload = msg.payload/100*cap; \n\nmsg.url = \"127.0.0.1:8080/setWH/\" + msg.payload.toString(); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 900,
        "wires": [
            [
                "d707262f1a22a1e4"
            ]
        ]
    },
    {
        "id": "0ae110e517fc3462",
        "type": "ui_toast",
        "z": "08035fcf5428650d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1030,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "ddcc8988075520a9",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "\n\n\nmsg.payload = \"set SOC to \" + msg.payload + \" wh\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 900,
        "wires": [
            [
                "0ae110e517fc3462"
            ]
        ]
    },
    {
        "id": "a5cc4f13329f0cc8",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store levels debug",
        "func": "var level1=global.get(\"Level4\")\nvar level2=global.get(\"Level2\")\nvar level3=global.get(\"Level3\")\nvar level4=global.get(\"Level1\")\n\nif(level1 >100)\nlevel1=0;\nelse\nlevel1++;\n\nif(level2 >100)\nlevel2=0;\nelse\nlevel2 = level2+2;\n\nif(level3 >100)\nlevel3=0;\nelse\nlevel3 = level3+3;\n\nif(level4 >100)\nlevel4=0;\nelse\nlevel4=level4+4;\n\nglobal.set(\"Level4\",level4)\nglobal.set(\"Level2\",level2)\nglobal.set(\"Level3\",level3)\nglobal.set(\"Level1\",level1)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "07edebee5b7f978c",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "a5cc4f13329f0cc8"
            ]
        ]
    },
    {
        "id": "e762fe8864f021fc",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.url = \"127.0.0.1:8080/setI/\" + msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 674,
        "wires": [
            [
                "9f0c1f372d4e35c8"
            ]
        ]
    },
    {
        "id": "92014a1bdb08eb17",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 634,
        "wires": [
            [
                "3514ee59838a38ee"
            ]
        ]
    },
    {
        "id": "fca1b4607bf2cb50",
        "type": "file",
        "z": "08035fcf5428650d",
        "name": "",
        "filename": "pekaway/pkwshunttyp",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 554,
        "wires": [
            [
                "6bf13708222afc68"
            ]
        ]
    },
    {
        "id": "6bf13708222afc68",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "set global",
        "func": "\n\n global.set(\"pkwshunttyp\", msg.payload);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 554,
        "wires": [
            []
        ]
    },
    {
        "id": "3514ee59838a38ee",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "set global",
        "func": "\n\n msg.payload = global.get(\"pkwshunttyp\");\n \n return msg\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 674,
        "wires": [
            [
                "e762fe8864f021fc"
            ]
        ]
    },
    {
        "id": "5fbc02be03d7ff54",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "if (msg.payload.level1 >= 32767) {\n    msg.payload = 0;\n}\nelse {\n    msg.payload = msg.payload.level1;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 60,
        "wires": [
            [
                "55b0759aa01f78dc"
            ]
        ]
    },
    {
        "id": "55b0759aa01f78dc",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store level1",
        "func": "var value = Number(msg.payload);//value to be ranged\n\n//range limits\nvar inputrange = msg.inputrange || [global.get(\"levelempty1\"),global.get(\"levelfull1\")];//expected range of input value. an array containing min and max \nvar outputrange = msg.outputrange || [0,100] // range into the value to be converted. an array containing min and max \n\n// range limits can also be represented as Object if you like. \n// var ranges = {mininput:0,maxinput:100,minoutput:50,maxoutput:50000};\n\n//you should store input and output ranges into context memory \n//so you don't need to send them with every message but only when needed\n// see https://nodered.org/docs/writing-functions#storing-data\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n// here how the brain is used\nvar output = mapNumber(value,inputrange[0],inputrange[1],outputrange[0],outputrange[1]);\n\noutput = parseFloat(output.toFixed(0))\n// hard work is done, place the ranged number into outgoing msg payload\n\nif (output == Infinity || output == -Infinity) {\n    global.set(\"Level1\", 0)\n}\nelse {\n    if (output > 100) {\n        output = 100\n    }\n    else if (output < 0) {\n        output = 0\n    }\n    global.set(\"Level1\",output)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "83ab1d6034acc3d0",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "check voltage and Current",
        "info": "``",
        "x": 230,
        "y": 960,
        "wires": []
    },
    {
        "id": "563487d811994d51",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "\n\n\nvar cap = Number(global.get(\"pkwshuntMAXWatthours\"));\nmsg.payload = cap; \n\nmsg.url = \"127.0.0.1:8080/setWH/\" + msg.payload.toString(); \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "fa49822ca4215938"
            ]
        ]
    },
    {
        "id": "ec55b0cf857c1aeb",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "100",
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "96b4f79375d438c8"
            ]
        ]
    },
    {
        "id": "96b4f79375d438c8",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "\nif(global.get(\"pkwshuntactive\") == true) \n{\nvolt = global.get(\"pkwshuntvolt\")\namps = global.get(\"battamps\",msg.payload.amps)\n\n\nif(volt >= 14.4 && amps <= 1.5)\nmsg.payload = true;\nelse \nmsg.reset = true;\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1020,
        "wires": [
            [
                "e415273fcbcc48e9"
            ]
        ]
    },
    {
        "id": "e415273fcbcc48e9",
        "type": "delay",
        "z": "08035fcf5428650d",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "563487d811994d51"
            ]
        ]
    },
    {
        "id": "fa49822ca4215938",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "3004482b1f7d941f",
        "type": "http request",
        "z": "08035fcf5428650d",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "127.0.0.1:8080/check",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 1140,
        "wires": [
            [
                "927f2695473c7acc",
                "2e7e10a2139375db"
            ]
        ]
    },
    {
        "id": "bdb3e4ba4c9898d6",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "3004482b1f7d941f",
                "fe4956cbef6fae62"
            ]
        ]
    },
    {
        "id": "927f2695473c7acc",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "check counter",
        "func": "let old = Number(flow.get(\"checknumber\"));\n\nif (old != Number(msg.payload)){\n    flow.set(\"checknumber\", Number(msg.payload))\n}\nelse {\n    msg.payload =\"reload\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1100,
        "wires": [
            [
                "5c9e79da79d742f4"
            ]
        ]
    },
    {
        "id": "fe4956cbef6fae62",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "set restartcount to 0",
        "func": "flow.set(\"restartcount\",0)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b0feefb640a7f41d",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "restartcount++",
        "func": "counter = flow.get(\"restartcount\")\ncounter = counter +1;\n\nflow.set(\"restartcount\",counter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2e7e10a2139375db",
        "type": "switch",
        "z": "08035fcf5428650d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 1140,
        "wires": [
            [
                "5c9e79da79d742f4"
            ]
        ]
    },
    {
        "id": "346eeaeecd1a5c20",
        "type": "inject",
        "z": "08035fcf5428650d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 40,
        "wires": [
            [
                "9c6b63b8e4d24fd2"
            ]
        ]
    },
    {
        "id": "9c6b63b8e4d24fd2",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "init flow variables",
        "func": "flow.set(\"checknumber\", 1);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e28fa7093a1bacde",
        "type": "link in",
        "z": "08035fcf5428650d",
        "name": "loadconfig_shunttyp",
        "links": [
            "3c454549156f593a"
        ],
        "x": 135,
        "y": 594,
        "wires": [
            [
                "3e1fcc2afc6b9a4a"
            ]
        ]
    },
    {
        "id": "2da3892a7530757d",
        "type": "ui_text_input",
        "z": "08035fcf5428650d",
        "name": "",
        "label": "Capacity (wh)",
        "tooltip": "type in your capacity in Watthours (Voltage x Amphours)",
        "group": "00c90244e8033802",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "b87931274669d3d2"
            ]
        ]
    },
    {
        "id": "68557045d440161f",
        "type": "ui_text_input",
        "z": "08035fcf5428650d",
        "name": "",
        "label": "Set SOC",
        "tooltip": "set Battery State of Charge",
        "group": "00c90244e8033802",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "4000",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 180,
        "y": 880,
        "wires": [
            [
                "b2101f0ebd6a5ac9"
            ]
        ]
    },
    {
        "id": "b2101f0ebd6a5ac9",
        "type": "switch",
        "z": "08035fcf5428650d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "101",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "101",
                "v2t": "num"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 370,
        "y": 880,
        "wires": [
            [
                "7415d70818067edf"
            ],
            [
                "0d8e9bd94e3c7bbf"
            ],
            [
                "7415d70818067edf"
            ]
        ]
    },
    {
        "id": "8d7a2e850cc68b65",
        "type": "ui_toast",
        "z": "08035fcf5428650d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 710,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "7415d70818067edf",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.payload = \"please set value between 1-100\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 860,
        "wires": [
            [
                "8d7a2e850cc68b65"
            ]
        ]
    },
    {
        "id": "cf0bec87cc8ce9cc",
        "type": "ui_text_input",
        "z": "08035fcf5428650d",
        "name": "",
        "label": "Calibrate VOLTS",
        "tooltip": "Type in your measured voltage ",
        "group": "00c90244e8033802",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "600",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "6a0f5d6c27beee7f"
            ]
        ]
    },
    {
        "id": "6a0f5d6c27beee7f",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "flow set calibrate volt",
        "func": "flow.set(\"flowCaliVolt\", parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c2eafa59cb5faed6",
        "type": "ui_button",
        "z": "08035fcf5428650d",
        "name": "",
        "group": "00c90244e8033802",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Calibrate",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-balance-scale",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 800,
        "wires": [
            [
                "659378d51b544fd8"
            ]
        ]
    },
    {
        "id": "659378d51b544fd8",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "var califaktor =  flow.get(\"flowCaliVolt\") / parseFloat(flow.get(\"voltsmeasured\"));\nglobal.set(\"shuntcalibrate\",califaktor);\nmsg.payload = califaktor;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 800,
        "wires": [
            [
                "3d84f8f8b4bf453a",
                "4e8cd7dc841b5f03"
            ]
        ]
    },
    {
        "id": "533626fc9c2be38e",
        "type": "ui_toast",
        "z": "08035fcf5428650d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 790,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3d84f8f8b4bf453a",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "",
        "func": "msg.payload = \"new calibrationfactor set to: \" + msg.payload.toFixed(4);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 800,
        "wires": [
            [
                "533626fc9c2be38e"
            ]
        ]
    },
    {
        "id": "4e8cd7dc841b5f03",
        "type": "file",
        "z": "08035fcf5428650d",
        "name": "",
        "filename": "pekaway/shuntcalibrate",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 690,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4d2365fa746cea63",
        "type": "comment",
        "z": "08035fcf5428650d",
        "name": "Voltage calibration",
        "info": "``",
        "x": 210,
        "y": 700,
        "wires": []
    },
    {
        "id": "1272dfe59cd60cf4",
        "type": "exec",
        "z": "08035fcf5428650d",
        "command": "python3 -u pekaway/ads_py/web1.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1200,
        "y": 1120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5c9e79da79d742f4",
        "type": "exec",
        "z": "08035fcf5428650d",
        "command": "pkill -9 -f web1.py & sleep 0.5",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 1120,
        "wires": [
            [
                "1272dfe59cd60cf4",
                "b0feefb640a7f41d"
            ],
            [],
            []
        ]
    },
    {
        "id": "9556f460b4918a45",
        "type": "switch",
        "z": "08035fcf5428650d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "RequestError",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 160,
        "wires": [
            [],
            [
                "ad94f252a0b8c75b"
            ]
        ]
    },
    {
        "id": "db6d220a9a3758ac",
        "type": "function",
        "z": "08035fcf5428650d",
        "name": "store adc debug",
        "func": "global.set(\"LEVEL-ADC1\",msg.payload.level1)\nglobal.set(\"LEVEL-ADC2\",msg.payload.level2)\nglobal.set(\"LEVEL-ADC3\",msg.payload.level3)\nglobal.set(\"LEVEL-ADC4\",msg.payload.level4)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "42fae630.bb5488",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints general ",
        "info": "",
        "x": 130,
        "y": 400,
        "wires": []
    },
    {
        "id": "d88508e9.959f68",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "batt",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "bfac6a8c.d2ccf8"
            ]
        ]
    },
    {
        "id": "bfac6a8c.d2ccf8",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get battery stats",
        "func": "msg.payload = {\n    \"VoltB\":global.get(\"MainBattVolt\"),\n    \"Ampere\":global.get(\"MainBattAmps\"),\n    \"battsoc\":global.get(\"MainBattSoc\"),\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 440,
        "wires": [
            [
                "b21dc5aa.b70b18"
            ]
        ]
    },
    {
        "id": "b21dc5aa.b70b18",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 440,
        "wires": []
    },
    {
        "id": "ff26b15d.781d2",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "level",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "23326e88.54d5b2"
            ]
        ]
    },
    {
        "id": "23326e88.54d5b2",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get level stats",
        "func": "msg.payload = {\n    \"level1\": {\n        \"state\":global.get(\"Level1\"),\n        \"name\":global.get(\"NLevel1\")\n    },\n    \"level2\": {\n        \"state\":global.get(\"Level2\"),\n        \"name\":global.get(\"NLevel2\")\n    },\n     \"level3\": {\n        \"state\":global.get(\"Level3\"),\n        \"name\":global.get(\"NLevel3\")\n    },\n    \"level4\": {\n        \"state\":global.get(\"Level4\"),\n        \"name\":global.get(\"NLevel4\")\n    }\n} ;   \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 480,
        "wires": [
            [
                "37f32fd8.9748e"
            ]
        ]
    },
    {
        "id": "37f32fd8.9748e",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 480,
        "wires": []
    },
    {
        "id": "782c51e6.7fe59",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "names",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "5d23d85a.2ca3b8"
            ]
        ]
    },
    {
        "id": "5d23d85a.2ca3b8",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get all names",
        "func": "msg.payload = {\n    \"Relay1\": {\n        \"name\":global.get(\"None\"),\n        \"globalVariable\":\"None\"\n    },\n    \"Relay2\": {\n        \"name\":global.get(\"Ntwo\"),\n        \"globalVariable\":\"Ntwo\"\n    },\n    \"Relay3\": {\n        \"name\":global.get(\"Nthree\"),\n        \"globalVariable\":\"Nthree\"\n    },\n    \"Relay4\": {\n        \"name\":global.get(\"Nfour\"),\n        \"globalVariable\":\"Nfour\"\n    },\n    \"Relay5\": {\n        \"name\":global.get(\"Nfive\"),\n        \"globalVariable\":\"Nfive\"\n    },\n    \"Relay6\": {\n        \"name\":global.get(\"Nsix\"),\n        \"globalVariable\":\"Nsix\"\n    },\n    \"Relay7\": {\n        \"name\":global.get(\"Nseven\"),\n        \"globalVariable\":\"Nseven\"\n    },\n    \"Relay8\": {\n        \"name\":global.get(\"Neight\"),\n        \"globalVariable\":\"Neight\"\n    },\n    \"Relay9\": {\n        \"name\":global.get(\"Nnine\"),\n        \"globalVariable\":\"Nnine\"\n    },\n    \"Relay10\": {\n        \"name\":global.get(\"Nten\"),\n        \"globalVariable\":\"Nten\"\n    },\n    \"WifiRelay1\": {\n        \"name\":global.get(\"NWone\"),\n        \"globalVariable\":\"NWone\"\n    },\n    \"WifiRelay2\": {\n        \"name\":global.get(\"NWtwo\"),\n        \"globalVariable\":\"NWtwo\"\n    },\n    \"WifiRelay3\": {\n        \"name\":global.get(\"NWthree\"),\n        \"globalVariable\":\"NWthree\"\n    },\n    \"WifiRelay4\": {\n        \"name\":global.get(\"NWfour\"),\n        \"globalVariable\":\"NWfour\"\n    },\n    \"WifiRelay5\": {\n        \"name\":global.get(\"NWfive\"),\n        \"globalVariable\":\"NWfive\"\n    },\n    \"WifiRelay6\": {\n        \"name\":global.get(\"NWsix\"),\n        \"globalVariable\":\"NWsix\"\n    },\n    \"WifiRelay7\": {\n        \"name\":global.get(\"NWseven\"),\n        \"globalVariable\":\"NWseven\"\n    },\n    \"WifiRelay8\": {\n        \"name\":global.get(\"NWeight\"),\n        \"globalVariable\":\"NWeight\"\n    },\n    \"Temp1\":{\n        \"name\":global.get(\"Ntemp1\"),\n        \"globalVariable\":\"NTemp1\"\n    },\n    \"Temp2\":{\n        \"name\":global.get(\"Ntemp2\"),\n        \"globalVariable\":\"NTemp2\"\n    },\n    \"Temp3\":{\n        \"name\":global.get(\"Ntemp3\"),\n        \"globalVariable\":\"NTemp3\"\n    },\n    \"Temp4\":{\n        \"name\":global.get(\"Ntemp4\"),\n        \"globalVariable\":\"NTemp4\"\n    },\n    \"Level1\": {\n        \"name\":global.get(\"NLevel1\"),\n        \"globalVariable\":\"NLevel1\"\n    },\n    \"Level2\": {\n        \"name\":global.get(\"NLevel2\"),\n        \"globalVariable\":\"NLevel2\"\n    },\n    \"Level3\": {\n        \"name\":global.get(\"NLevel3\"),\n        \"globalVariable\":\"NLevel3\"\n    },\n    \"Level4\": {\n        \"name\":global.get(\"NLevel4\"),\n        \"globalVariable\":\"NLevel4\"\n    },\n    \"Dimmer1\": {\n        \"name\":global.get(\"Ndimmer0\"),\n        \"globalVariable\":\"Ndimmer0\"\n    },\n    \"Dimmer2\": {\n        \"name\":global.get(\"Ndimmer1\"),\n        \"globalVariable\":\"Ndimmer1\"\n    },\n    \"Dimmer3\": {\n        \"name\":global.get(\"Ndimmer2\"),\n        \"globalVariable\":\"Ndimmer2\"\n    },\n    \"Dimmer4\": {\n        \"name\":global.get(\"Ndimmer3\"),\n        \"globalVariable\":\"Ndimmer3\"\n    },\n    \"Dimmer5\": {\n        \"name\":global.get(\"Ndimmer4\"),\n        \"globalVariable\":\"Ndimmer4\"\n    },\n    \"Dimmer6\": {\n        \"name\":global.get(\"Ndimmer5\"),\n        \"globalVariable\":\"Ndimmer5\"\n    },\n    \"Dimmer7\": {\n        \"name\":global.get(\"Ndimmer6\"),\n        \"globalVariable\":\"Ndimmer6\"\n    },\n    \"Dimmer8\": {\n        \"name\":global.get(\"Ndimmer7\"),\n        \"globalVariable\":\"Ndimmer7\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 560,
        "wires": [
            [
                "359a0021.f59c1"
            ]
        ]
    },
    {
        "id": "359a0021.f59c1",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 560,
        "wires": []
    },
    {
        "id": "f43c42b0.3680f",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "heater",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "ef5df576.d9abc8"
            ]
        ]
    },
    {
        "id": "ef5df576.d9abc8",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get heater stats",
        "func": "msg.payload = {\n    \"heatertoggle\":global.get(\"HeaterToggle\"),\n    \"heatstatus\":global.get(\"heatstatus\"),\n    \"heattemp\":global.get(\"heattemp\"),\n    \"heatvolt\":global.get(\"heatvolt\"),\n    \"heatfan\":global.get(\"heatfan\"),\n    \"heatglow\":global.get(\"heatpump\"),\n    \"heatwpump\":global.get(\"heatwpump\"),\n    \"heaterror\":global.get(\"heaterror\")\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 520,
        "wires": [
            [
                "e9020de4.de6d4"
            ]
        ]
    },
    {
        "id": "e9020de4.de6d4",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 520,
        "wires": []
    },
    {
        "id": "9ddd5b7.518bea8",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "temp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "4cf7aa4a.c5c784"
            ]
        ]
    },
    {
        "id": "4cf7aa4a.c5c784",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get temp stats",
        "func": "if (global.get(\"temp1\") == null || global.get(\"temp1\") == \"\") {\n    global.set(\"temp1\", \"0\")   \n}\nif (global.get(\"temp1\") == \"not connected\" || global.get(\"temp1\") == \"\") {\n    global.set(\"temp1\", \"0\")   \n}\nif (global.get(\"temp2\") == null || global.get(\"temp2\") == \"\") {\n    global.set(\"temp2\", \"0\")   \n}\nif (global.get(\"temp3\") == null || global.get(\"temp3\") == \"\") {\n    global.set(\"temp3\", \"0\")   \n}\nif (global.get(\"temp4\") == null || global.get(\"temp4\") == \"\") {\n    global.set(\"temp4\", \"0\")   \n}\nif (global.get(\"dimmytemp\") == true) {\n    if (global.get(\"dimmytemp1\") == null || global.get(\"dimmytemp1\") == \"\") {\n        global.set(\"dimmytemp1\", \"0\")\n    }\n    if (global.get(\"dimmytemp2\") == null || global.get(\"dimmytemp2\") == \"\") {\n        global.set(\"dimmytemp2\", \"0\")\n    }\n    msg.payload = {\n        \"temp1\": {\n            \"state\": global.get(\"temp1\"),\n            \"name\": global.get(\"Ntemp1\"),\n        },\n        \"temp2\": {\n            \"state\": global.get(\"temp2\"),\n            \"name\": global.get(\"Ntemp2\"),\n        },\n        \"temp3\": {\n            \"state\": global.get(\"temp3\"),\n            \"name\": global.get(\"Ntemp3\"),\n        },\n        \"temp4\": {\n            \"state\": global.get(\"temp4\"),\n            \"name\": global.get(\"Ntemp4\"),\n        },\n        \"dimmytemp1\": {\n            \"state\": global.get(\"dimmytemp1\"),\n            \"name\": global.get(\"Ndimmytemp1\"),\n        },\n        \"dimmytemp2\": {\n            \"state\": global.get(\"dimmytemp2\"),\n            \"name\": global.get(\"Ndimmytemp2\"),\n        }\n    }    \n}\nelse {\n    msg.payload = {\n        \"temp1\": {\n            \"state\":global.get(\"temp1\"),\n            \"name\":global.get(\"Ntemp1\"),\n        },\n        \"temp2\": {\n            \"state\":global.get(\"temp2\"),\n            \"name\":global.get(\"Ntemp2\"),\n        },\n        \"temp3\": {\n            \"state\":global.get(\"temp3\"),\n            \"name\":global.get(\"Ntemp3\"),\n        },\n        \"temp4\": {\n            \"state\":global.get(\"temp4\"),\n            \"name\":global.get(\"Ntemp4\"),\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 600,
        "wires": [
            [
                "aa3a9dde.7746a"
            ]
        ]
    },
    {
        "id": "aa3a9dde.7746a",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 600,
        "wires": []
    },
    {
        "id": "01c1b0774a7ce1c5",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "relay/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "d705cc504a44adc6"
            ]
        ]
    },
    {
        "id": "7352a6468ee7758c",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 550,
        "y": 900,
        "wires": []
    },
    {
        "id": "d705cc504a44adc6",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and switch state",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n}\n\nmsg.relay = msg.req.params.input;\n\nif (msg.req.params.value === \"true\") {\n    msg.payload = true\n    msg.relaystate = msg.payload\n    return [msg, msg];\n}\nelse if (msg.req.params.value === \"false\") {\n    msg.payload = false\n    msg.relaystate = msg.payload\n    return [msg, msg];\n}\nelse {\n    msg.payload = \"value can only be true or false\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 860,
        "wires": [
            [
                "1cb3c5e476649f72"
            ],
            [
                "1682ab47f11056de"
            ]
        ]
    },
    {
        "id": "1cb3c5e476649f72",
        "type": "switch",
        "z": "e78e73d3.53155",
        "name": "",
        "property": "relay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "one",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "two",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "three",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "four",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "five",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "six",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "seven",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "eight",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "nine",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "ten",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 770,
        "y": 920,
        "wires": [
            [
                "a04b3614573af150"
            ],
            [
                "11075381c9dd3e27"
            ],
            [
                "d1c38a7c4b408418"
            ],
            [
                "bee832ef9e0bbec5"
            ],
            [
                "27e4acfea3f8598a"
            ],
            [
                "e0771acc5d3182c3"
            ],
            [
                "cf7080d88a760efb"
            ],
            [
                "c51c399bbe263fb6"
            ],
            [],
            []
        ]
    },
    {
        "id": "a04b3614573af150",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 1",
        "mode": "link",
        "links": [
            "e9ffa3ef.cde5d"
        ],
        "x": 1015,
        "y": 760,
        "wires": []
    },
    {
        "id": "bee832ef9e0bbec5",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 4",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 1015,
        "y": 880,
        "wires": []
    },
    {
        "id": "27e4acfea3f8598a",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 5",
        "links": [
            "8cde3678.94ac88",
            "1d05179e.1f1a78",
            "1e0f28f7.6b3347",
            "a17061ed.e682d"
        ],
        "x": 1015,
        "y": 920,
        "wires": []
    },
    {
        "id": "e0771acc5d3182c3",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 6",
        "links": [
            "a45ee432.b7ef98",
            "c9adec52.63ae6",
            "f4303c75.d5b1c",
            "31dcf86e.085898"
        ],
        "x": 1015,
        "y": 960,
        "wires": []
    },
    {
        "id": "cf7080d88a760efb",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 7",
        "links": [
            "e97a5ba1.09c7e8",
            "38796905.f4b7f6",
            "de881e69.90777",
            "3f2d3621.ced3da"
        ],
        "x": 1015,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c51c399bbe263fb6",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 8",
        "links": [
            "95089e82.5785e",
            "2840c10.f61294",
            "f38ca7b2.7594d8",
            "c946b435.21b198"
        ],
        "x": 1015,
        "y": 1040,
        "wires": []
    },
    {
        "id": "11075381c9dd3e27",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 2",
        "links": [
            "7255f9f4.6304d8"
        ],
        "x": 1015,
        "y": 800,
        "wires": []
    },
    {
        "id": "d1c38a7c4b408418",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 3",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 1015,
        "y": 840,
        "wires": []
    },
    {
        "id": "1682ab47f11056de",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set answer",
        "func": "if (msg.payload.toString().includes(\"can only be\")){\n    return msg\n}\nelse {\n    var autooff = global.get(msg.relay+\"offauto\")\n    msg.payload = {\n        \"relay\": msg.relay,\n        \"state\": msg.relaystate,\n        \"autooff\": autooff\n    }\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 900,
        "wires": [
            [
                "7352a6468ee7758c"
            ]
        ]
    },
    {
        "id": "857bd591a72db827",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "relay/:input",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1000,
        "wires": [
            [
                "3f8e55018a683876"
            ]
        ]
    },
    {
        "id": "24ec5317eca5f0fb",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3f8e55018a683876",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and get relay",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar globalVar = msg.req.params.input\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n    globalVar = msg.req.params.input\n}\n\nif (msg.req.params.input==\"all\") {\n    msg.payload = {\n        \"Relay1\": {\n            \"state\":global.get(\"one\"),            \n            \"name\":global.get(\"None\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        },\n        \"Relay2\": {\n            \"state\":global.get(\"two\"),            \n            \"name\":global.get(\"Ntwo\"),\n            //\"autooff\": global.get(\"twooffauto\")\n        },\n        \"Relay3\": {\n            \"state\":global.get(\"three\"),            \n            \"name\":global.get(\"Nthree\"),\n            //\"autooff\": global.get(\"threeoffauto\")\n        },\n        \"Relay4\": {\n            \"state\":global.get(\"four\"),            \n            \"name\":global.get(\"Nfour\"),\n            //\"autooff\": global.get(\"fouroffauto\")\n        },\n        \"Relay5\": {\n            \"state\":global.get(\"five\"),            \n            \"name\":global.get(\"Nfive\"),\n            //\"autooff\": global.get(\"fiveoffauto\")\n        },\n        \"Relay6\": {\n            \"state\":global.get(\"six\"),            \n            \"name\":global.get(\"Nsix\"),\n            //\"autooff\": global.get(\"sixoffauto\")\n        },\n        \"Relay7\": {\n            \"state\":global.get(\"seven\"),            \n            \"name\":global.get(\"Nseven\"),\n            //\"autooff\": global.get(\"sevenoffauto\")\n        },\n        \"Relay8\": {\n            \"state\":global.get(\"eight\"),            \n            \"name\":global.get(\"Neight\"),\n            //\"autooff\": global.get(\"eightoffauto\")\n        },\n        \"Relay9\": {\n            \"state\":global.get(\"nine\"),            \n            \"name\":global.get(\"Nnine\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        },\n        \"Relay10\": {\n            \"state\":global.get(\"ten\"),            \n            \"name\":global.get(\"Nten\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        }\n    };\n}\nelse if (global.get(msg.req.params.input)!==undefined) {\n    var n = \"N\"+msg.req.params.input\n    var autooff = global.get(msg.req.params.input+\"offauto\")\n    msg.payload = {\n        \"relay\":msg.req.params.input,\n        \"state\":global.get(msg.req.params.input),\n        \"name\":global.get(n),\n        //\"autooff\": autooff\n    };\n}\nelse {\n    msg.payload = \"relay \" + msg.req.params.input + \" does not exist\"\n}\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "24ec5317eca5f0fb"
            ]
        ]
    },
    {
        "id": "86bc478d69c132c1",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "toggle/relay/:input",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "57fd6373ec601066"
            ]
        ]
    },
    {
        "id": "57fd6373ec601066",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and switch state",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n}\n\nmsg.relay = msg.req.params.input;\n\nif (global.get(msg.relay) == true) {\n    msg.payload = false\n    msg.relaystate = msg.payload\n}\nelse if (global.get(msg.relay) == false) {\n    msg.payload = true\n    msg.relaystate = msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 940,
        "wires": [
            [
                "1cb3c5e476649f72",
                "1682ab47f11056de"
            ]
        ]
    },
    {
        "id": "94700921f269acea",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "relay/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "85a890eb47b407a0"
            ]
        ]
    },
    {
        "id": "85a890eb47b407a0",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.input",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1040,
        "wires": [
            [
                "3f8e55018a683876"
            ]
        ]
    },
    {
        "id": "10071c4e6ed27059",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "names/:input",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "0e42267ed02c70bb"
            ]
        ]
    },
    {
        "id": "0e42267ed02c70bb",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and set name",
        "func": "if (msg.req.params.input == \"update\") {\n    msg.payload = \"names have been updated\"\n    return [msg, null]\n}\n\nmsg.globalVar = \"N\"+msg.req.params.input;\n\nif (global.get(msg.globalVar)!==undefined) {\n    global.set(msg.globalVar, msg.payload)\n\n    msg.payload = {\n            \"description\":msg.globalVar,\n            \"name\":global.get(msg.globalVar)\n    }\n    //answer http request\n    node.send([msg, null])\n    //set payload for textfield in dashboard\n    msg.payload = global.get(msg.globalVar)\n    return [null, msg]\n}\nelse {\n    msg.payload = \"global variable \" + msg.req.params.input + \" is not defined\";\n    return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 280,
        "wires": [
            [
                "e9be18c319bccfd1",
                "961a8b6d41509271"
            ],
            [
                "34ed1bb765acddd3"
            ]
        ]
    },
    {
        "id": "e9be18c319bccfd1",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "answer",
        "statusCode": "200",
        "headers": {},
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "34ed1bb765acddd3",
        "type": "switch",
        "z": "e78e73d3.53155",
        "name": "",
        "property": "globalVar",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ntemp1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ntemp2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ntemp3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ntemp4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NLevel1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NLevel2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NLevel3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NLevel4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "None",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ntwo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nthree",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nfour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nfive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nsix",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nseven",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Neight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nnine",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nten",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWone",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWtwo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWthree",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWfour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWfive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWsix",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWseven",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NWeight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmer7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmytemp1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ndimmytemp2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 36,
        "x": 810,
        "y": 360,
        "wires": [
            [
                "8f3c59a42992518b"
            ],
            [
                "1ca17d1277c17055"
            ],
            [
                "e2d931c67b5038fe"
            ],
            [
                "967fa4e3178fb82b"
            ],
            [
                "4d1b006b57d6ef45"
            ],
            [
                "45bba022abc3c534"
            ],
            [
                "dcebcef7012c7f07"
            ],
            [
                "c693ba0e60a42a37"
            ],
            [
                "2215762d38495713"
            ],
            [
                "523289f1d05dad12"
            ],
            [
                "3a8124b501346d8b"
            ],
            [
                "fd6bfa7ca31c97fa"
            ],
            [
                "6f9b853e331a293a"
            ],
            [
                "004c62c10b636096"
            ],
            [
                "3a493f6979414933"
            ],
            [
                "ec202c43ad863b73"
            ],
            [
                "3818a04b207aea8c"
            ],
            [
                "3966ddcffc558c87"
            ],
            [
                "d7a9ec06ef6a2f8f"
            ],
            [
                "d74657bdf8030b2f"
            ],
            [
                "da2cf914da6895c2"
            ],
            [
                "06e51df7bb811802"
            ],
            [
                "ea39a7c19379ec5a"
            ],
            [
                "22bb0428f7f4d15b"
            ],
            [
                "ba8e80a7849282a2"
            ],
            [
                "d9fdbbd1cd30f63e"
            ],
            [
                "c26a4b876c4901c9"
            ],
            [
                "c9ed3e060355439a"
            ],
            [
                "130f980449b663c9"
            ],
            [
                "b84b7db4506f8198"
            ],
            [
                "b84c1e8756a08551"
            ],
            [
                "058bad9790e5e006"
            ],
            [
                "cd383f78ea1aa841"
            ],
            [
                "d9a0767fc8e50b76"
            ],
            [
                "6f7685fb79ce0438"
            ],
            [
                "761da5923e187298"
            ]
        ]
    },
    {
        "id": "8f3c59a42992518b",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ntemp1",
        "links": [
            "1a8794f31a3f9ddb"
        ],
        "x": 1015,
        "y": 20,
        "wires": []
    },
    {
        "id": "1ca17d1277c17055",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ntemp2",
        "links": [
            "dc783718278813d6"
        ],
        "x": 1015,
        "y": 40,
        "wires": []
    },
    {
        "id": "e2d931c67b5038fe",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ntemp3",
        "links": [
            "cfb819effd2aef27"
        ],
        "x": 1015,
        "y": 60,
        "wires": []
    },
    {
        "id": "967fa4e3178fb82b",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ntemp4",
        "links": [
            "d2008d5c540c4214"
        ],
        "x": 1015,
        "y": 80,
        "wires": []
    },
    {
        "id": "4d1b006b57d6ef45",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NLevel1",
        "links": [
            "2fd913aba86f7a79"
        ],
        "x": 1015,
        "y": 100,
        "wires": []
    },
    {
        "id": "45bba022abc3c534",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NLevel2",
        "links": [
            "3332389371230b20"
        ],
        "x": 1015,
        "y": 120,
        "wires": []
    },
    {
        "id": "dcebcef7012c7f07",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NLevel3",
        "links": [
            "4c35af4930ed3a51"
        ],
        "x": 1015,
        "y": 140,
        "wires": []
    },
    {
        "id": "c693ba0e60a42a37",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NLevel4",
        "links": [
            "9fa5ed9642841cac"
        ],
        "x": 1015,
        "y": 160,
        "wires": []
    },
    {
        "id": "2215762d38495713",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "None",
        "links": [
            "7e3adb9d283ce234"
        ],
        "x": 1015,
        "y": 180,
        "wires": []
    },
    {
        "id": "523289f1d05dad12",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ntwo",
        "links": [
            "ca585a03f0fe6085"
        ],
        "x": 1015,
        "y": 200,
        "wires": []
    },
    {
        "id": "3a8124b501346d8b",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nthree",
        "links": [
            "d24286c0f1f05cf1"
        ],
        "x": 1015,
        "y": 220,
        "wires": []
    },
    {
        "id": "fd6bfa7ca31c97fa",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nfour",
        "links": [
            "1bbf9074b56672aa"
        ],
        "x": 1015,
        "y": 240,
        "wires": []
    },
    {
        "id": "6f9b853e331a293a",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nfive",
        "links": [
            "ffdfcbf3d0444b71"
        ],
        "x": 1015,
        "y": 260,
        "wires": []
    },
    {
        "id": "004c62c10b636096",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nsix",
        "links": [
            "f77512a00db0f317"
        ],
        "x": 1015,
        "y": 280,
        "wires": []
    },
    {
        "id": "3a493f6979414933",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nseven",
        "links": [
            "01d48cd43596ed13"
        ],
        "x": 1015,
        "y": 300,
        "wires": []
    },
    {
        "id": "ec202c43ad863b73",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Neight",
        "links": [
            "a4c1332f59457b49"
        ],
        "x": 1015,
        "y": 320,
        "wires": []
    },
    {
        "id": "3818a04b207aea8c",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nnine",
        "links": [
            "5d29a3a442f887f7"
        ],
        "x": 1015,
        "y": 340,
        "wires": []
    },
    {
        "id": "3966ddcffc558c87",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Nten",
        "links": [
            "82c952ea0eeb0aca"
        ],
        "x": 1015,
        "y": 360,
        "wires": []
    },
    {
        "id": "d7a9ec06ef6a2f8f",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWone",
        "links": [
            "473f2db910e74f46"
        ],
        "x": 1015,
        "y": 380,
        "wires": []
    },
    {
        "id": "d74657bdf8030b2f",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWtwo",
        "links": [
            "dc023f5d7a61c9d9"
        ],
        "x": 1015,
        "y": 400,
        "wires": []
    },
    {
        "id": "da2cf914da6895c2",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWthree",
        "links": [
            "2110d5ae121a4453"
        ],
        "x": 1015,
        "y": 420,
        "wires": []
    },
    {
        "id": "06e51df7bb811802",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWfour",
        "links": [
            "5d624ae1b18443db"
        ],
        "x": 1015,
        "y": 440,
        "wires": []
    },
    {
        "id": "ea39a7c19379ec5a",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWfive",
        "links": [
            "665af31eeae91d53"
        ],
        "x": 1015,
        "y": 460,
        "wires": []
    },
    {
        "id": "22bb0428f7f4d15b",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWsix",
        "links": [
            "5a630b11c01d184b"
        ],
        "x": 1015,
        "y": 480,
        "wires": []
    },
    {
        "id": "d9fdbbd1cd30f63e",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWeight",
        "links": [
            "d3dc38692edfe006"
        ],
        "x": 1015,
        "y": 520,
        "wires": []
    },
    {
        "id": "ba8e80a7849282a2",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "NWseven",
        "links": [
            "01d48cd43596ed13"
        ],
        "x": 1015,
        "y": 500,
        "wires": []
    },
    {
        "id": "c26a4b876c4901c9",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer0",
        "links": [
            "c66a52b7774be47b"
        ],
        "x": 1015,
        "y": 540,
        "wires": []
    },
    {
        "id": "c9ed3e060355439a",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer1",
        "links": [
            "4086c55304ba32ae"
        ],
        "x": 1015,
        "y": 560,
        "wires": []
    },
    {
        "id": "130f980449b663c9",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer2",
        "links": [
            "d65b3469341a8601"
        ],
        "x": 1015,
        "y": 580,
        "wires": []
    },
    {
        "id": "b84b7db4506f8198",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer3",
        "links": [
            "38fd2c83faf60559"
        ],
        "x": 1015,
        "y": 600,
        "wires": []
    },
    {
        "id": "b84c1e8756a08551",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer4",
        "links": [
            "24787a551c032712"
        ],
        "x": 1015,
        "y": 620,
        "wires": []
    },
    {
        "id": "058bad9790e5e006",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer5",
        "links": [
            "702959d76f03f238"
        ],
        "x": 1015,
        "y": 640,
        "wires": []
    },
    {
        "id": "cd383f78ea1aa841",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer6",
        "links": [
            "32079052da4028df"
        ],
        "x": 1015,
        "y": 660,
        "wires": []
    },
    {
        "id": "d9a0767fc8e50b76",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmer7",
        "mode": "link",
        "links": [
            "34ce2bd2a0b794e4"
        ],
        "x": 1015,
        "y": 680,
        "wires": []
    },
    {
        "id": "f9ca9d33383d5220",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 610,
        "y": 1260,
        "wires": []
    },
    {
        "id": "5d26899bef877b6f",
        "type": "switch",
        "z": "e78e73d3.53155",
        "name": "",
        "property": "relay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "one",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "two",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "three",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "four",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "five",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "six",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "seven",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "eight",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 770,
        "y": 1260,
        "wires": [
            [
                "937d5e03dd599a61"
            ],
            [
                "80da336a069ba2df"
            ],
            [
                "80cd2ca9be046404"
            ],
            [
                "236f17a63794e768"
            ],
            [
                "7cb5ca22f1c184e8"
            ],
            [
                "8c23965172e6d81f"
            ],
            [
                "c4e1e5d7a9f81b29"
            ],
            [
                "0bf4c82c6cb860c4"
            ]
        ]
    },
    {
        "id": "236f17a63794e768",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 4",
        "links": [
            "d2ce5044.ef8af"
        ],
        "x": 1015,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7cb5ca22f1c184e8",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 5",
        "links": [
            "9f1c7c65c2da2d42"
        ],
        "x": 1015,
        "y": 1260,
        "wires": []
    },
    {
        "id": "8c23965172e6d81f",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 6",
        "links": [
            "d76c3b78c0f14e69"
        ],
        "x": 1015,
        "y": 1300,
        "wires": []
    },
    {
        "id": "c4e1e5d7a9f81b29",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 7",
        "links": [
            "34f49f08e1a06032"
        ],
        "x": 1015,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0bf4c82c6cb860c4",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 8",
        "links": [
            "1be6547089f6e149"
        ],
        "x": 1015,
        "y": 1380,
        "wires": []
    },
    {
        "id": "80da336a069ba2df",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 2",
        "links": [
            "33a5d09e.6cc14"
        ],
        "x": 1015,
        "y": 1140,
        "wires": []
    },
    {
        "id": "80cd2ca9be046404",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 3",
        "links": [
            "428f4d48.86eaf4"
        ],
        "x": 1015,
        "y": 1180,
        "wires": []
    },
    {
        "id": "56e1abb5b2e7247e",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set answer",
        "func": "if (msg.payload.toString().includes(\"can only be\")){\n    return msg\n}\nelse {\n    var autooff = global.get(msg.relay.toLowerCase()+\"offauto\")\n    msg.payload = {\n        \"relay\": msg.relay,\n        \"state\": msg.relaystate,\n        \"autooff\": autooff\n    }\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "f9ca9d33383d5220"
            ]
        ]
    },
    {
        "id": "a454928c0a2e740d",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "wrelay/:input",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "9c197e66867dcb29"
            ]
        ]
    },
    {
        "id": "a2c7311476d4c970",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 690,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9c197e66867dcb29",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and get wrelay",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar globalVar = \"W\"+msg.req.params.input\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n    globalVar = \"W\"+msg.req.params.input\n}\n\nif (msg.req.params.input==\"all\") {\n    msg.payload = {\n        \"WifiRelay1\": {\n            \"state\":global.get(\"Wone\"),            \n            \"name\":global.get(\"NWone\"),\n            \"firmware\":global.get(\"wrelay1_firmware\"),\n            \"autooff\": global.get(\"woneoffauto\")\n        },\n        \"WifiRelay2\": {\n            \"state\":global.get(\"Wtwo\"),            \n            \"name\":global.get(\"NWtwo\"),\n            \"firmware\":global.get(\"wrelay2_firmware\"),\n            \"autooff\": global.get(\"wtwooffauto\")\n        },\n        \"WifiRelay3\": {\n            \"state\":global.get(\"Wthree\"),            \n            \"name\":global.get(\"NWthree\"),\n            \"firmware\":global.get(\"wrelay3_firmware\"),\n            \"autooff\": global.get(\"wthreeoffauto\")\n        },\n        \"WifiRelay4\": {\n            \"state\":global.get(\"Wfour\"),            \n            \"name\":global.get(\"NWfour\"),\n            \"firmware\":global.get(\"wrelay4_firmware\"),\n            \"autooff\": global.get(\"wfouroffauto\")\n        },\n        \"WifiRelay5\": {\n            \"state\":global.get(\"Wfive\"),            \n            \"name\":global.get(\"NWfive\"),\n            \"firmware\":global.get(\"wrelay5_firmware\"),\n            \"autooff\": global.get(\"wfiveoffauto\")\n        },\n        \"WifiRelay6\": {\n            \"state\":global.get(\"Wsix\"),            \n            \"name\":global.get(\"NWsix\"),\n            \"firmware\":global.get(\"wrelay6_firmware\"),\n            \"autooff\": global.get(\"wsixoffauto\")\n        },\n        \"WifiRelay7\": {\n            \"state\":global.get(\"Wseven\"),            \n            \"name\":global.get(\"NWseven\"),\n            \"firmware\":global.get(\"wrelay7_firmware\"),\n            \"autooff\": global.get(\"wsevenoffauto\")\n        },\n        \"WifiRelay8\": {\n            \"state\":global.get(\"Weight\"),            \n            \"name\":global.get(\"NWeight\"),\n            \"firmware\":global.get(\"wrelay8_firmware\"),\n            \"autooff\": global.get(\"weightoffauto\")\n        }\n    };\n}\n\nelse if (global.get(globalVar)!==undefined) {\n    var autooff = global.get(\"w\"+msg.req.params.input+\"offauto\")\n    var n = \"NW\"+msg.req.params.input\n    msg.payload = {\n        \"wifirelay\":globalVar,\n        \"state\":global.get(globalVar),\n        \"name\":global.get(n),\n        \"autooff\": autooff\n    };\n}\nelse {\n    msg.payload = \"wifirelay \" + msg.req.params.input + \" does not exist\"\n}\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "a2c7311476d4c970"
            ]
        ]
    },
    {
        "id": "ac3c4fe5cd58e530",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "/toggle/wrelay/:input",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "3afd7417681bcb87"
            ]
        ]
    },
    {
        "id": "3afd7417681bcb87",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and switch state",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n}\n\nmsg.relay = \"W\"+msg.req.params.input;\n\nif (global.get(msg.relay) == true) {\n    msg.payload = false\n    msg.relaystate = msg.payload\n}\nelse if (global.get(msg.relay) == false) {\n    msg.payload = true\n    msg.relaystate = msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1300,
        "wires": [
            [
                "5d26899bef877b6f",
                "56e1abb5b2e7247e"
            ]
        ]
    },
    {
        "id": "5aec9fd67fb417a3",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "wrelay/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1400,
        "wires": [
            [
                "8ab619cea79ce0b1"
            ]
        ]
    },
    {
        "id": "8ab619cea79ce0b1",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.input",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1400,
        "wires": [
            [
                "9c197e66867dcb29"
            ]
        ]
    },
    {
        "id": "937d5e03dd599a61",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "switch connect 1",
        "links": [
            "afbb8dda.ffe6c"
        ],
        "x": 1015,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1ef68c5891594021",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints relays",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "90aaa84e3c4647b5",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints wifirelays",
        "info": "",
        "x": 150,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b87b808afe6eb9ed",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints names",
        "info": "",
        "x": 120,
        "y": 240,
        "wires": []
    },
    {
        "id": "04e90dc1676dd13a",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "dimmer/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "4731f46fb5c68aa6"
            ]
        ]
    },
    {
        "id": "b987d9635c725793",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 590,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4731f46fb5c68aa6",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and set global var",
        "func": "function text2num(s) {\n    a = s.toString().split(/[\\s-]+/);\n    n = 0;\n    g = 0;\n    a.forEach(feach);\n    return n + g;\n}\n\nfunction feach(w) {\n    var x = input[w];\n    g = g + x;\n}\n\nfunction number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar num = \"zero one two three four five six seven eight nine ten\".split(\" \");\nvar input = { 'one': 0, 'two': 1, 'three': 2, 'four': 3, 'five': 4, 'six': 5, 'seven': 6, 'eight': 7};\nvar a, n, g, dimmerno;\n\n//check if input is a number\nif (isNaN(parseInt(msg.req.params.input)) == false) {\n    if (parseInt(msg.req.params.input) < 9 && parseInt(msg.req.params.input) > 0) {\n        msg.req.params.input = parseInt(msg.req.params.input)-1\n        msg.targetdimmerno = \"Ndimmer\"+msg.req.params.input.toString()\n        msg.req.params.input = parseInt(msg.req.params.input)+1\n        msg.dimmer = number2words(msg.req.params.input);\n        msg.newValue = parseInt(msg.req.params.value);\n    }\n    else {\n        msg.payload = \"dimmer \" + msg.req.params.input + \" does not exist\"\n        return [null, msg];\n    }\n}\nelse if (isNaN(parseInt(msg.req.params.input)) == true){\n    msg.dimmerno = text2num(msg.req.params.input);\n    msg.targetdimmerno = \"Ndimmer\"+msg.dimmerno.toString()\n    msg.dimmer = msg.req.params.input;\n    msg.newValue = parseInt(msg.req.params.value);\n}\n\nif (isNaN(msg.newValue) || msg.newValue < 0 || msg.newValue > 100) {\n    msg.payload = \"value type must be numeric and between 0-100\"\n    return [null, msg]\n}\nelse if (global.get(msg.targetdimmerno)!==undefined) {\n    msg.payload = msg.newValue\n    msg.label = global.get(msg.targetdimmerno)\n    return [msg, msg]\n}\nelse {\n    msg.payload = \"dimmer \" + msg.req.params.input + \" does not exist\"\n    return [null, msg];\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1620,
        "wires": [
            [
                "eaef487a095f1941"
            ],
            [
                "fc065be1e2a2befc"
            ]
        ]
    },
    {
        "id": "eaef487a095f1941",
        "type": "switch",
        "z": "e78e73d3.53155",
        "name": "",
        "property": "dimmer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "one",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "two",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "three",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "four",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "five",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "six",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "seven",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "eight",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 770,
        "y": 1640,
        "wires": [
            [
                "5c11b83dee20395c"
            ],
            [
                "943b6d53caa983d3"
            ],
            [
                "d237df5591cd888b"
            ],
            [
                "59f8057dce575916"
            ],
            [
                "d34f3ab8abe848f6"
            ],
            [
                "439c5c6219f2ad26"
            ],
            [
                "7cbbc3bbc7cca512"
            ],
            [
                "fa5e454b2672161d"
            ]
        ]
    },
    {
        "id": "5c11b83dee20395c",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer0 http",
        "links": [
            "a4c0fd66546e7864"
        ],
        "x": 1015,
        "y": 1520,
        "wires": []
    },
    {
        "id": "943b6d53caa983d3",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer1 http",
        "links": [
            "1db51e9f7fe5ebea"
        ],
        "x": 1015,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d237df5591cd888b",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer2 http",
        "links": [
            "09bf8b5862924eed"
        ],
        "x": 1015,
        "y": 1600,
        "wires": []
    },
    {
        "id": "59f8057dce575916",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer3 http",
        "links": [
            "4896e98db77c2f91"
        ],
        "x": 1015,
        "y": 1640,
        "wires": []
    },
    {
        "id": "d34f3ab8abe848f6",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer4 http",
        "links": [
            "77683cc8a2a2dd71"
        ],
        "x": 1015,
        "y": 1680,
        "wires": []
    },
    {
        "id": "439c5c6219f2ad26",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer5 http",
        "links": [
            "2530d817d07d6ef2"
        ],
        "x": 1015,
        "y": 1720,
        "wires": []
    },
    {
        "id": "7cbbc3bbc7cca512",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer6 http",
        "links": [
            "d4e73c36b453526a"
        ],
        "x": 1015,
        "y": 1760,
        "wires": []
    },
    {
        "id": "fa5e454b2672161d",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "dimmer7 http",
        "links": [
            "bd1237489ec8e5f3"
        ],
        "x": 1015,
        "y": 1800,
        "wires": []
    },
    {
        "id": "fc065be1e2a2befc",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set answer",
        "func": "if (msg.payload.toString().includes(\" must be numeric\") || msg.payload.toString().includes(\" does not exist\")){\n    return msg\n}\nelse {\n    msg.payload = {\n        \"dimmer\": msg.dimmer,\n        \"state\": msg.newValue\n    }\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1660,
        "wires": [
            [
                "b987d9635c725793"
            ]
        ]
    },
    {
        "id": "53e6240e6b18b304",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "dimmer/:input",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1720,
        "wires": [
            [
                "7fe809b2f568b3ee"
            ]
        ]
    },
    {
        "id": "f684785ea126e942",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 690,
        "y": 1720,
        "wires": []
    },
    {
        "id": "7fe809b2f568b3ee",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and get dimmer",
        "func": "var a \nvar n \nvar g\n\nfunction text2num(s) {\n    a = s.toString().split(/[\\s-]+/);\n    n = 0;\n    g = 0;\n    a.forEach(feach);\n    return n + g;\n}\nfunction feach(w) {\n    var x = input[w];\n    g = g + x;\n}\nvar input = {'one': 0, 'two': 1, 'three': 2, 'four': 3, 'five': 4, 'six': 5, 'seven': 6, 'eight': 7};\nvar targetdimmerno;\nmsg.targetdimmerno = \"\"\n\n//check if input is a number\nif (isNaN(parseInt(msg.req.params.input)) == false) {\n    if (parseInt(msg.req.params.input) < 9) {\n        msg.req.params.input = parseInt(msg.req.params.input)-1\n        targetdimmerno = \"dimmer\"+msg.req.params.input.toString()\n        msg.req.params.input = parseInt(msg.req.params.input)+1\n    }\n}\nelse if (isNaN(parseInt(msg.req.params.input)) == true){\n    msg.dimmerno = text2num(msg.req.params.input);\n    targetdimmerno = \"dimmer\"+msg.dimmerno.toString()\n}\n\nif (msg.req.params.input==\"all\") {\n    msg.payload = {\n        \"dimmer1\": {\n            \"state\": parseInt(global.get(\"dimmer0\")),\n            \"name\":global.get(\"Ndimmer0\"),\n        },\n        \"dimmer2\": {\n            \"state\": parseInt(global.get(\"dimmer1\")),\n            \"name\":global.get(\"Ndimmer1\"),\n        },\n        \"dimmer3\": {\n            \"state\": parseInt(global.get(\"dimmer2\")),\n            \"name\":global.get(\"Ndimmer2\"),\n        },\n        \"dimmer4\": {\n            \"state\": parseInt(global.get(\"dimmer3\")),\n            \"name\":global.get(\"Ndimmer3\"),\n        },\n        \"dimmer5\": {\n            \"state\": parseInt(global.get(\"dimmer4\")),\n            \"name\":global.get(\"Ndimmer4\"),\n        },\n        \"dimmer6\": {\n            \"state\": parseInt(global.get(\"dimmer5\")),\n            \"name\":global.get(\"Ndimmer5\"),\n        },\n        \"dimmer7\": {\n            \"state\": parseInt(global.get(\"dimmer6\")),\n            \"name\":global.get(\"Ndimmer6\"),\n        },\n        \"dimmer8\": {\n            \"state\": parseInt(global.get(\"dimmer7\")),\n            \"name\":global.get(\"Ndimmer7\"),\n        },\n    }\n}\nelse if (global.get(targetdimmerno)!==undefined) {\n    msg.payload = {\n        \"dimmer\":msg.req.params.input,\n        \"state\": parseInt(global.get(targetdimmerno)),\n        \"name\":global.get(\"N\"+targetdimmerno)\n    };\n}\nelse {\n    msg.payload = \"dimmer \" + msg.req.params.input + \" does not exist\"\n}\nmsg.targetdimmerno = targetdimmerno\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1720,
        "wires": [
            [
                "f684785ea126e942"
            ]
        ]
    },
    {
        "id": "93928c757eed6cfd",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "dimmer/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1760,
        "wires": [
            [
                "cca88e865aa363ef"
            ]
        ]
    },
    {
        "id": "cca88e865aa363ef",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.input",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1760,
        "wires": [
            [
                "7fe809b2f568b3ee"
            ]
        ]
    },
    {
        "id": "d0b5af1299c04c81",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints dimmers",
        "info": "",
        "x": 150,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2f5ffaba89fd012e",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "wrelay/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "766532c5bcc4ca2d"
            ]
        ]
    },
    {
        "id": "766532c5bcc4ca2d",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and switch state",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n}\n\nmsg.relay = \"W\"+msg.req.params.input;\n\nif (msg.req.params.value === \"true\") {\n    msg.payload = true\n    msg.relaystate = msg.payload\n    return [msg, msg];\n}\nelse if (msg.req.params.value === \"false\") {\n    msg.payload = false\n    msg.relaystate = msg.payload\n    return [msg, msg];\n}\nelse {\n    msg.payload = \"value can only be true or false\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1220,
        "wires": [
            [
                "5d26899bef877b6f"
            ],
            [
                "56e1abb5b2e7247e"
            ]
        ]
    },
    {
        "id": "4ce25de51b4fb126",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "names/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "8baf068e4ca359dc"
            ]
        ]
    },
    {
        "id": "8baf068e4ca359dc",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and set name",
        "func": "if (msg.req.params.input == \"level\") {\n    msg.req.params.input = \"Level\"\n}\n\nmsg.globalVar = \"N\"+msg.req.params.input;\n\nif (global.get(msg.globalVar)!==undefined) {\n    global.set(msg.globalVar, msg.req.params.value)\n\n    msg.payload = {\n            \"description\":msg.globalVar,\n            \"name\":global.get(msg.globalVar)\n    }\n    //answer http request\n    node.send([msg, null])\n    //set payload for textfield in dashboard\n    msg.payload = global.get(msg.globalVar)\n    return [null, msg]\n}\nelse {\n    msg.payload = \"global variable \" + msg.req.params.input + \" is not defined\";\n    return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "e9be18c319bccfd1"
            ],
            [
                "34ed1bb765acddd3"
            ]
        ]
    },
    {
        "id": "961a8b6d41509271",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http update names",
        "links": [
            "32ccfc50.e148f4",
            "3f4ef597.ad8bba",
            "478c01f0.b35c1",
            "7e47707c.5fe7b"
        ],
        "x": 635,
        "y": 240,
        "wires": []
    },
    {
        "id": "6a2642e3f0b97b0e",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoints heater",
        "info": "",
        "x": 140,
        "y": 1860,
        "wires": []
    },
    {
        "id": "aadd4382540212d4",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "heater/:truefalse",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1900,
        "wires": [
            [
                "f485bcc1320b9dc1"
            ]
        ]
    },
    {
        "id": "29f59ca8fbe82d23",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 1070,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8cc4bb4336555b86",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "heater/:truefalse/:temp",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2020,
        "wires": [
            [
                "e5286c54434be8bb"
            ]
        ]
    },
    {
        "id": "ce11f3c7edd3025d",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "heater/:truefalse/:temp/:time",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "97686d9a1e813337"
            ]
        ]
    },
    {
        "id": "f97d3e1199c2bd50",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 1070,
        "y": 2180,
        "wires": []
    },
    {
        "id": "9218ac0d4df78330",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater on",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 1015,
        "y": 1860,
        "wires": []
    },
    {
        "id": "25bbb2b2adaf0cf8",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1015,
        "y": 1900,
        "wires": []
    },
    {
        "id": "f485bcc1320b9dc1",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set heater settings",
        "func": "if (msg.req.params.truefalse == \"true\") {\n    msg.payload = \"heater \" + msg.req.params.truefalse\n    node.send([msg, null, null])\n}\nelse if (msg.req.params.truefalse == \"false\") {\n    msg.payload = \"heater \" + msg.req.params.truefalse\n    node.send([null, msg, null])\n}\nelse {\n    msg.payload = \"heater can only be true or false\"\n}\nreturn [null, null, msg]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1900,
        "wires": [
            [
                "9218ac0d4df78330"
            ],
            [
                "25bbb2b2adaf0cf8",
                "c46d7b1dcb708251"
            ],
            [
                "29f59ca8fbe82d23"
            ]
        ]
    },
    {
        "id": "e5286c54434be8bb",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set heater settings w/ temp",
        "func": "msg.req.params.temp = parseInt(msg.req.params.temp)\n\nif (msg.req.params.truefalse == \"true\") {\n    if (isNaN(msg.req.params.temp) == false) {\n        if (msg.req.params.temp < 12 || msg.req.params.temp > 35) {\n            msg.payload = \"temp value must be within 12 and 35\"\n        }\n        else {\n            msg.payload = parseInt(msg.req.params.temp)\n            node.send([msg, null, null])\n            msg.payload = \"heater \" + msg.req.params.truefalse + \" with target temperature \" + msg.req.params.temp    \n        }\n    }\n    else if (isNaN(msg.req.params.temp) == true) {\n        msg.payload = \"temp value must be numeric and between 12 and 35\"\n    }\n}\nelse if (msg.req.params.truefalse == \"false\") {\n    msg.payload = \"heater \" + msg.req.params.truefalse\n    node.send([null, msg, null])\n}\nelse {\n    msg.payload = \"heater can only be true or false\"\n}\nreturn [null, null, msg]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2020,
        "wires": [
            [
                "026555e3ad71e0cf"
            ],
            [
                "5776c022733c4136",
                "c46d7b1dcb708251"
            ],
            [
                "5697815ee2579fe5"
            ]
        ]
    },
    {
        "id": "026555e3ad71e0cf",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater on w/ temp",
        "links": [
            "eb1e92403a6a4490",
            "788088e08e7292d0"
        ],
        "x": 1015,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5697815ee2579fe5",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 1070,
        "y": 2060,
        "wires": []
    },
    {
        "id": "5776c022733c4136",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1015,
        "y": 2020,
        "wires": []
    },
    {
        "id": "97686d9a1e813337",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set heater settings w/ temp & timer",
        "func": "msg.req.params.temp = parseInt(msg.req.params.temp)\nmsg.req.params.time = parseInt(msg.req.params.time)\n\nif (msg.req.params.truefalse == \"true\") {\n    if (isNaN(msg.req.params.temp) == false) {\n        if (msg.req.params.temp < 12 || msg.req.params.temp > 35) {\n            msg.payload = \"temp value must be within 12 and 35\"\n        }\n        else {\n            if (isNaN(msg.req.params.time) == false) {\n                if (msg.req.params.time < 1 || msg.req.params.time > 600) {\n                    msg.payload = \"time value must be within 1 and 600\"\n                }\n                else {\n                    node.send([null, null, null, null, msg])\n                    msg.timer = msg.req.params.time\n                    msg.delay = msg.timer*60000\n                    node.send([null, null, null, msg, null])\n                    msg.payload = parseInt(msg.req.params.temp)\n                    node.send([msg, null, null, null, null])\n                    msg.payload = \"heater \" + msg.req.params.truefalse + \" with target temperature \" + msg.req.params.temp + \"°C and duration \" + msg.req.params.time + \"m\"\n                }\n            }\n        }\n    }\n    else if (isNaN(msg.req.params.temp) == true) {\n        msg.payload = \"temp value must be numeric and between 12 and 35\"\n    }\n}\nelse if (msg.req.params.truefalse == \"false\") {\n    msg.payload = \"heater \" + msg.req.params.truefalse\n    node.send([null, msg, null, null, msg])\n}\nelse {\n    msg.payload = \"heater can only be true or false\"\n}\nreturn [null, null, msg, null, null]",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2180,
        "wires": [
            [
                "e342e6035235dcf4"
            ],
            [
                "8d54b616c7e8feb5"
            ],
            [
                "f97d3e1199c2bd50"
            ],
            [
                "cf0e7d919697d7f9"
            ],
            [
                "c46d7b1dcb708251"
            ]
        ]
    },
    {
        "id": "de9391849ee092b5",
        "type": "delay",
        "z": "e78e73d3.53155",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 2220,
        "wires": [
            [
                "9fb866bf4390d8d3"
            ]
        ]
    },
    {
        "id": "e342e6035235dcf4",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater on w/ temp",
        "links": [
            "eb1e92403a6a4490",
            "788088e08e7292d0"
        ],
        "x": 1015,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8d54b616c7e8feb5",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1015,
        "y": 2140,
        "wires": []
    },
    {
        "id": "c46d7b1dcb708251",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 2260,
        "wires": [
            [
                "de9391849ee092b5"
            ]
        ]
    },
    {
        "id": "cf0e7d919697d7f9",
        "type": "delay",
        "z": "e78e73d3.53155",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 2220,
        "wires": [
            [
                "de9391849ee092b5"
            ]
        ]
    },
    {
        "id": "9fb866bf4390d8d3",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1155,
        "y": 2220,
        "wires": []
    },
    {
        "id": "13b5cefbcd42f35a",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "API timer is not visible in dashboard!",
        "info": "",
        "x": 200,
        "y": 2120,
        "wires": []
    },
    {
        "id": "4bdada802e6896da",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "names/:device/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "8527f2998f5d4380"
            ]
        ]
    },
    {
        "id": "8527f2998f5d4380",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and set name",
        "func": "function text2numD(s) {\n    a = s.toString().split(/[\\s-]+/);\n    n = 0;\n    g = 0;\n    a.forEach(feachD);\n    return n + g;\n}\nfunction text2numT(s) {\n    a = s.toString().split(/[\\s-]+/);\n    n = 0;\n    g = 0;\n    a.forEach(feachT);\n    return n + g;\n}\n\nfunction feachD(w) {\n    var x = inputDimmer[w];\n    g = g + x;\n}\nfunction feachT(w) {\n    var x = inputOther[w];\n    g = g + x;\n}\n\nfunction number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar inputDimmer = {'one': 0, 'two': 1, 'three': 2, 'four': 3, 'five': 4, 'six': 5, 'seven': 6, 'eight': 7};\nvar inputOther = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9, 'ten': 10};\nvar targetdevice;\nvar num;\nmsg.targetdevice = \"\"\nmsg.globalVar = \"\"\n\n//--------------------------------------------------------------\n//only use lower case letters when accessing API!\n\nif (msg.req.params.device == \"level\") {\n    msg.req.params.device = \"Level\"\n}\nif (msg.req.params.device == \"Wrelay\") {\n    msg.req.params.device = \"wrelay\"\n}\n\nif (msg.req.params.device == \"Level\" || msg.req.params.device == \"temp\" || msg.req.params.device == \"relay\" || msg.req.params.device == \"wrelay\" || msg.req.params.device == \"dimmer\") {\n    \n    \n    //check if device is \"dimmer\"\n    if (msg.req.params.device == \"dimmer\") {\n        if (isNaN(parseInt(msg.req.params.input)) == false) {\n            num = \"one two three four five six seven eight\".split(\" \");\n            if (parseInt(msg.req.params.input) < 9 && parseInt(msg.req.params.input) > 0) {\n                msg.req.params.input = parseInt(msg.req.params.input)-1\n                targetdevice = \"Ndimmer\"+msg.req.params.input.toString()\n                msg.req.params.input = parseInt(msg.req.params.input)+1\n                msg.dimmer = number2words(parseInt(msg.req.params.input));\n            }\n            else {\n                msg.payload = \"dimmer \" + msg.req.params.input + \" does not exist\"\n                return [msg, null];\n            }\n        }\n        else if (isNaN(parseInt(msg.req.params.input)) == true){\n            targetdevice = text2numD(msg.req.params.input);\n            targetdevice = \"Ndimmer\"+targetdevice.toString()\n            msg.dimmer = msg.req.params.input;\n            //msg.newValue = parseInt(msg.req.params.value);\n        }\n    }\n    \n    //check if device is \"temp\" or \"level\"\n    if (msg.req.params.device == \"temp\" || msg.req.params.device == \"Level\") {\n        if (isNaN(parseInt(msg.req.params.input)) == false) {\n            num = \"one two three four\".split(\" \");\n            if (parseInt(msg.req.params.input) < 5 && parseInt(msg.req.params.input) > 0) {\n                targetdevice = \"N\"+msg.req.params.device+msg.req.params.input.toString()\n                msg.temporlevel = number2words(parseInt(msg.req.params.input));\n            }\n            else {\n                msg.payload = msg.req.params.device+ \" \" + msg.req.params.input + \" does not exist\"\n                return [msg, null];\n            }\n        }\n        else if (isNaN(parseInt(msg.req.params.input)) == true){\n            targetdevice = text2numT(msg.req.params.input);\n            targetdevice = \"N\"+msg.req.params.device+targetdevice.toString()\n            msg.temporlevel = msg.req.params.input;\n            //msg.newValue = parseInt(msg.req.params.value);\n        }\n    }\n    // else (if device is \"relay\" or \"Wrelay\")\n    else {\n        if (isNaN(parseInt(msg.req.params.input)) == false){\n            num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n            msg.req.params.input = parseInt(msg.req.params.input)\n            msg.req.params.input = number2words(msg.req.params.input)\n                if (msg.req.params.device === \"wrelay\") {\n                    targetdevice = \"NW\" + msg.req.params.input\n                }\n                else if (msg.req.params.device === \"relay\") {\n                    targetdevice = \"N\" + msg.req.params.input\n                }\n        }\n        else if (isNaN(parseInt(msg.req.params.input)) == true){\n                if (msg.req.params.device === \"wrelay\") {\n                    targetdevice = \"NW\" + msg.req.params.input\n                }\n                else if (msg.req.params.device === \"relay\") {\n                    targetdevice = \"N\" + msg.req.params.input\n                }\n        }\n    }\n    \n//--------------------------------------------------------------\n    \n    msg.globalVar = targetdevice\n    \n    if (global.get(msg.globalVar)!= undefined) {\n        global.set(msg.globalVar, msg.req.params.value)\n    \n        msg.payload = {\n                \"description\":msg.globalVar,\n                \"name\":global.get(msg.globalVar)\n        }\n        //answer http request\n        node.send([msg, null])\n        //set payload for textfield in dashboard\n        msg.payload = global.get(msg.globalVar)\n        return [null, msg]\n    }\n    else {\n        msg.payload = \"global variable \" + msg.req.params.input + \" is not defined for \" + msg.req.params.device;\n        return [msg, null]\n    }\n}\nelse {\n        msg.payload = \"device can only be 'temp', 'level', 'relay', 'wrelay' or 'dimmer'\"\n        return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "e9be18c319bccfd1"
            ],
            [
                "34ed1bb765acddd3"
            ]
        ]
    },
    {
        "id": "dfe6ac35b535e163",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "bms",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "235bf538c950ef47"
            ]
        ]
    },
    {
        "id": "235bf538c950ef47",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get battery stats",
        "func": "let bmsjson = {\n    \"BMSamps\":global.get(\"BMSamps\"),\n    \"BMScap\":global.get(\"BMScap\"),\n    \"BMScell1\":(global.get(\"BMScell1\")/1000).toFixed(2),\n    \"BMScell2\":(global.get(\"BMScell2\")/1000).toFixed(2),\n    \"BMScell3\":(global.get(\"BMScell3\")/1000).toFixed(2),\n    \"BMScell4\":(global.get(\"BMScell4\")/1000).toFixed(2),\n    \"BMSmaxcap\":global.get(\"BMSmaxcap\"),\n    \"BMSmaxvolt\":global.get(\"BMSmaxvolt\"),\n    \"BMSminvolt\":global.get(\"BMSminvolt\"),\n    \"BMSpower\":global.get(\"BMSpower\"),\n    \"BMSsoc\":global.get(\"BMSsoc\"),\n    \"BMStemp\":global.get(\"BMStemp\"),\n    \"BMSvolt\":global.get(\"BMSvolt\"),\n} ;   \n    msg.payload = bmsjson;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 640,
        "wires": [
            [
                "15a044e2c38d465e"
            ]
        ]
    },
    {
        "id": "15a044e2c38d465e",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 640,
        "wires": []
    },
    {
        "id": "fd04752f42acafc2",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "conniot",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "b5fa3f5283a0028c"
            ]
        ]
    },
    {
        "id": "b5fa3f5283a0028c",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get connection",
        "func": "let connectionjson = {\n    \"connection\": {\n        \"state\": true\n    }\n\n};   \nmsg.payload = connectionjson;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "23d691c5507e32d3"
            ]
        ]
    },
    {
        "id": "23d691c5507e32d3",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 680,
        "wires": []
    },
    {
        "id": "890d1f2042565f42",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "wrelayiot/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1440,
        "wires": [
            [
                "e81813357c4b008d"
            ]
        ]
    },
    {
        "id": "636d5ddd84294f7f",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and get wrelay",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar globalVar = \"W\"+msg.req.params.input\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n    globalVar = \"W\"+msg.req.params.input\n}\n\nif (msg.req.params.input==\"all\") {\n    msg.payload = {\n        \"WifiRelay1\": {\n            \"state\":global.get(\"Wone\"),            \n            \"name\":global.get(\"NWone\"),\n        },\n        \"WifiRelay2\": {\n            \"state\":global.get(\"Wtwo\"),            \n            \"name\":global.get(\"NWtwo\"),\n        },\n        \"WifiRelay3\": {\n            \"state\":global.get(\"Wthree\"),            \n            \"name\":global.get(\"NWthree\"),\n        },\n        \"WifiRelay4\": {\n            \"state\":global.get(\"Wfour\"),            \n            \"name\":global.get(\"NWfour\"),\n        },\n        \"WifiRelay5\": {\n            \"state\":global.get(\"Wfive\"),            \n            \"name\":global.get(\"NWfive\"),\n        },\n        \"WifiRelay6\": {\n            \"state\":global.get(\"Wsix\"),            \n            \"name\":global.get(\"NWsix\"),\n        },\n        \"WifiRelay7\": {\n            \"state\":global.get(\"Wseven\"),            \n            \"name\":global.get(\"NWseven\"),\n        },\n        \"WifiRelay8\": {\n            \"state\":global.get(\"Weight\"),            \n            \"name\":global.get(\"NWeight\"),\n        }\n    };\n}\n\nelse if (global.get(globalVar)!==undefined) {\n    var n = \"NW\"+msg.req.params.input\n    msg.payload = {\n        \"wifirelay\":globalVar,\n        \"state\":global.get(globalVar),\n        \"name\":global.get(n),\n    };\n}\nelse {\n    msg.payload = \"wifirelay \" + msg.req.params.input + \" does not exist\"\n}\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1440,
        "wires": [
            [
                "a2c7311476d4c970"
            ]
        ]
    },
    {
        "id": "e81813357c4b008d",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.input",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1440,
        "wires": [
            [
                "636d5ddd84294f7f"
            ]
        ]
    },
    {
        "id": "ab37cf757e8ab171",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "wrelayiot/:input/:value",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "766532c5bcc4ca2d"
            ]
        ]
    },
    {
        "id": "5f3b4ca1f4773780",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 760,
        "wires": []
    },
    {
        "id": "d02d07dd336ca10f",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "reboot rpi",
        "func": "let rebootjson = {\n    \"reboot_rpi\": {\n        \"state\": true\n    }\n\n};   \nmsg.payload = rebootjson;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 760,
        "wires": [
            [
                "5f3b4ca1f4773780",
                "033f10b03f32200b"
            ]
        ]
    },
    {
        "id": "4b522f61da35eaa9",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "reboot",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "d02d07dd336ca10f"
            ]
        ]
    },
    {
        "id": "0eb0f3ca8bced55d",
        "type": "exec",
        "z": "e78e73d3.53155",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "033f10b03f32200b",
        "type": "delay",
        "z": "e78e73d3.53155",
        "name": "5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "0eb0f3ca8bced55d"
            ]
        ]
    },
    {
        "id": "e0d0fb4aa408cd1e",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "relayiot/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "3cc12295a0acee87"
            ]
        ]
    },
    {
        "id": "3cc12295a0acee87",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.input",
                "pt": "msg",
                "to": "all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1080,
        "wires": [
            [
                "55775742497477e5"
            ]
        ]
    },
    {
        "id": "55775742497477e5",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check input and get relay",
        "func": "function number2words(n){\n    if (n < 20) return num[n];\n    var digit = n%10;\n    return number2words(~~(n/1000)) + \" thousand\" + (n%1000 != 0? \" \" + number2words(n%1000): \"\");\n}\n\nvar globalVar = msg.req.params.input\n\nif (isNaN(parseInt(msg.req.params.input)) == false){\n    var num = \"zero one two three four five six seven eight nine ten\".split(\" \");\n    msg.req.params.input = parseInt(msg.req.params.input)\n    msg.req.params.input = number2words(msg.req.params.input)\n    globalVar = msg.req.params.input\n}\n\nif (msg.req.params.input==\"all\") {\n    msg.payload = {\n        \"Relay1\": {\n            \"state\":global.get(\"one\"),            \n            \"name\":global.get(\"None\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        },\n        \"Relay2\": {\n            \"state\":global.get(\"two\"),            \n            \"name\":global.get(\"Ntwo\"),\n            //\"autooff\": global.get(\"twooffauto\")\n        },\n        \"Relay3\": {\n            \"state\":global.get(\"three\"),            \n            \"name\":global.get(\"Nthree\"),\n            //\"autooff\": global.get(\"threeoffauto\")\n        },\n        \"Relay4\": {\n            \"state\":global.get(\"four\"),            \n            \"name\":global.get(\"Nfour\"),\n            //\"autooff\": global.get(\"fouroffauto\")\n        },\n        \"Relay5\": {\n            \"state\":global.get(\"five\"),            \n            \"name\":global.get(\"Nfive\"),\n            //\"autooff\": global.get(\"fiveoffauto\")\n        },\n        \"Relay6\": {\n            \"state\":global.get(\"six\"),            \n            \"name\":global.get(\"Nsix\"),\n            //\"autooff\": global.get(\"sixoffauto\")\n        },\n        \"Relay7\": {\n            \"state\":global.get(\"seven\"),            \n            \"name\":global.get(\"Nseven\"),\n            //\"autooff\": global.get(\"sevenoffauto\")\n        },\n        \"Relay8\": {\n            \"state\":global.get(\"eight\"),            \n            \"name\":global.get(\"Neight\"),\n            //\"autooff\": global.get(\"eightoffauto\")\n        },\n        \"Relay9\": {\n            \"state\":global.get(\"nine\"),            \n            \"name\":global.get(\"Nnine\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        },\n        \"Relay10\": {\n            \"state\":global.get(\"ten\"),            \n            \"name\":global.get(\"Nten\"),\n            //\"autooff\": global.get(\"oneoffauto\")\n        }\n    };\n}\nelse if (global.get(msg.req.params.input)!==undefined) {\n    var n = \"N\"+msg.req.params.input\n    var autooff = global.get(msg.req.params.input+\"offauto\")\n    msg.payload = {\n        \"relay\":msg.req.params.input,\n        \"state\":global.get(msg.req.params.input),\n        \"name\":global.get(n),\n        //\"autooff\": autooff\n    };\n}\nelse {\n    msg.payload = \"relay \" + msg.req.params.input + \" does not exist\"\n}\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "24ec5317eca5f0fb"
            ]
        ]
    },
    {
        "id": "a2480738462df03d",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "debug",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "a19d1bc659618942"
            ]
        ]
    },
    {
        "id": "a19d1bc659618942",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "debug info",
        "func": "msg.payload = {\n    \"version\":global.get(\"currentVersion\"),\n    \"wifiIP\":global.get(\"wifiIP\"),\n    \"eth0IP\":global.get(\"eth0IP\"),\n    \"BatteryDataDelivery\":global.get(\"BatteryDataDelivery\"),\n    \"accesspoint\":global.get(\"accesspoint\"),\n    \"pkwshuntactive\":global.get(\"pkwshuntactive\"),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 720,
        "wires": [
            [
                "6f4b1984b6b545ed"
            ]
        ]
    },
    {
        "id": "6f4b1984b6b545ed",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 450,
        "y": 720,
        "wires": []
    },
    {
        "id": "d6896f1d6e9fe09d",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "/attime",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2640,
        "wires": [
            [
                "e60a32d21c8c4492"
            ]
        ]
    },
    {
        "id": "01a934bba9cede4c",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "http (200)",
        "statusCode": "200",
        "headers": {},
        "x": 480,
        "y": 2680,
        "wires": []
    },
    {
        "id": "73015f47095b7f66",
        "type": "split",
        "z": "e78e73d3.53155",
        "name": "",
        "splt": "=",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "f3881285a5493a26"
            ]
        ]
    },
    {
        "id": "f3881285a5493a26",
        "type": "split",
        "z": "e78e73d3.53155",
        "name": "",
        "splt": "&",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 2640,
        "wires": [
            [
                "026b2fbf4f2571af"
            ]
        ]
    },
    {
        "id": "026b2fbf4f2571af",
        "type": "change",
        "z": "e78e73d3.53155",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "date",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "time",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "gmt",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 2640,
        "wires": [
            [
                "a2d9b11cf030ea23"
            ]
        ]
    },
    {
        "id": "a2d9b11cf030ea23",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "reformat",
        "func": "if (msg.payload == \"\") {\n    return null\n}\nif (msg.payload.includes(\"/\")) {\n    msg.topic = \"date\"\n    var year = msg.payload.substring(0,2)\n    var month = msg.payload.substring(3,5)\n    var day = msg.payload.substring(6,8)\n    msg.payload = day + \".\" + month + \".\" + year\n}\nif (msg.payload.includes(\":\")) {\n    msg.topic = \"time\"\n}\nif (msg.payload.includes(\"+\") || msg.payload.includes(\"-\")) {\n    msg.topic = \"gmt\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2640,
        "wires": [
            [
                "efcc9f88eab5bc52"
            ]
        ]
    },
    {
        "id": "efcc9f88eab5bc52",
        "type": "join",
        "z": "e78e73d3.53155",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1050,
        "y": 2640,
        "wires": [
            [
                "818b23cfc9267063"
            ]
        ]
    },
    {
        "id": "818b23cfc9267063",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set exec payload",
        "func": "var year = \"20\"+msg.payload.date.substring(msg.payload.date.length-2)\nvar month = msg.payload.date.substring(3,5)\nvar day = msg.payload.date.substring(0,2)\n\nmsg.payload = \"sudo date -s '\" +year + \"-\" + month + \"-\" + day + \" \" + msg.payload.time +\"'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2640,
        "wires": [
            [
                "60fdd0513d372a74"
            ]
        ]
    },
    {
        "id": "60fdd0513d372a74",
        "type": "exec",
        "z": "e78e73d3.53155",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "set date/time",
        "x": 1390,
        "y": 2640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "77d6cd751c9186e1",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "(click for instructions) Set system time (Turn off network time sync in frontend!)",
        "info": "Format needs to be\n\nIP:PORT/attime?date=YY/MM/DD&time=hh:mm:ss&gmt=+04\n\nwith gmt being 15min steps, so range is -48 to +48\n\nHeaders are \"Content-Type: text/html; charset=utf-8\"",
        "x": 330,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e60a32d21c8c4492",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check payload",
        "func": "if (global.get(\"timesyncd\") == \"inactive\") {\n    msg.payload = (msg.payload == \"\" ? msg.req.url : msg.payload)\n    return [msg, null]\n}\nelse if (global.get(\"timesyncd\") == \"active\") {\n    msg.payload = \"network timesync is active\"\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2640,
        "wires": [
            [
                "73015f47095b7f66",
                "01a934bba9cede4c"
            ],
            [
                "01a934bba9cede4c"
            ]
        ]
    },
    {
        "id": "542a2c9f0ca623ea",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "switchall/:truefalse",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2380,
        "wires": [
            [
                "616ae227b7d1006f",
                "fcbb89cd0e972cfa"
            ]
        ]
    },
    {
        "id": "f50fd70f9c6826f3",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoint toggle all on/off (relays, w-relays, dimmers)",
        "info": "",
        "x": 250,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a87e79fb235e68f4",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 570,
        "y": 2440,
        "wires": []
    },
    {
        "id": "616ae227b7d1006f",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "check true or false",
        "func": "if (msg.req.params.truefalse == \"false\") {\n    return [msg, null]\n}\nelse if (msg.req.params.truefalse ==  \"true\") {\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2380,
        "wires": [
            [
                "de95656a18aa0369"
            ],
            [
                "3ae13fe66c9c4fd2"
            ]
        ]
    },
    {
        "id": "fcbb89cd0e972cfa",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set answer",
        "func": "if (msg.req.params.truefalse == \"false\") {\n    msg.payload = {\n        \"switchall\":\"false\"\n    }\n}\nelse if (msg.req.params.truefalse == \"true\") {\n    msg.payload = \"turning everything back on from memory is yet not implemented!\"   \n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2440,
        "wires": [
            [
                "a87e79fb235e68f4"
            ]
        ]
    },
    {
        "id": "3fe38c2d6edc0c84",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "http switchall relays/wrelays off",
        "mode": "link",
        "links": [
            "1be6547089f6e149",
            "1d05179e.1f1a78",
            "2840c10.f61294",
            "33a5d09e.6cc14",
            "34f49f08e1a06032",
            "38796905.f4b7f6",
            "428f4d48.86eaf4",
            "7255f9f4.6304d8",
            "9f1c7c65c2da2d42",
            "afbb8dda.ffe6c",
            "c698c6e8.416b58",
            "c9adec52.63ae6",
            "d2ce5044.ef8af",
            "d76c3b78c0f14e69",
            "e9ffa3ef.cde5d",
            "f14867fc.930ab8"
        ],
        "x": 1135,
        "y": 2340,
        "wires": []
    },
    {
        "id": "de95656a18aa0369",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "set globals",
        "func": "//save current global states\nmsg.payload = {\n    \"one\": global.get(\"one\"),\n    \"two\": global.get(\"two\"),\n    \"three\": global.get(\"three\"),\n    \"four\": global.get(\"four\"),\n    \"five\": global.get(\"five\"),\n    \"six\": global.get(\"six\"),\n    \"seven\": global.get(\"seven\"),\n    \"eight\": global.get(\"eight\"),\n    \"Wone\": global.get(\"Wone\"),\n    \"Wtwo\": global.get(\"Wtwo\"),\n    \"Wthree\": global.get(\"Wthree\"),\n    \"Wfour\": global.get(\"Wfour\"),\n    \"Wfive\": global.get(\"Wfive\"),\n    \"Wsix\": global.get(\"Wsix\"),\n    \"Wseven\": global.get(\"Wseven\"),\n    \"Weight\": global.get(\"Weight\"),\n    \"dimmer0\": global.get(\"dimmer0\"),\n    \"dimmer1\": global.get(\"dimmer1\"),\n    \"dimmer2\": global.get(\"dimmer2\"),\n    \"dimmer3\": global.get(\"dimmer3\"),\n    \"dimmer4\": global.get(\"dimmer4\"),\n    \"dimmer5\": global.get(\"dimmer5\"),\n    \"dimmer6\": global.get(\"dimmer6\"),\n    \"dimmer7\": global.get(\"dimmer7\")\n}\n\n//turn all globals off\nglobal.set(\"one\", false)\nglobal.set(\"two\", false)\nglobal.set(\"three\", false)\nglobal.set(\"four\", false)\nglobal.set(\"five\", false)\nglobal.set(\"six\", false)\nglobal.set(\"seven\", false)\nglobal.set(\"eight\", false)\nglobal.set(\"Wone\", false)\nglobal.set(\"Wtwo\", false)\nglobal.set(\"Wthree\", false)\nglobal.set(\"Wfour\", false)\nglobal.set(\"Wfive\", false)\nglobal.set(\"Wsix\", false)\nglobal.set(\"Wseven\", false)\nglobal.set(\"Weight\", false)\nglobal.set(\"dimmer0\", 0)\nglobal.set(\"dimmer1\", 0)\nglobal.set(\"dimmer2\", 0)\nglobal.set(\"dimmer3\", 0)\nglobal.set(\"dimmer4\", 0)\nglobal.set(\"dimmer5\", 0)\nglobal.set(\"dimmer6\", 0)\nglobal.set(\"dimmer7\", 0)\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2360,
        "wires": [
            [
                "8c191f1ddb4a9e61"
            ]
        ]
    },
    {
        "id": "8c191f1ddb4a9e61",
        "type": "file",
        "z": "e78e73d3.53155",
        "name": "",
        "filename": "pekaway/switchall",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 850,
        "y": 2360,
        "wires": [
            [
                "d3f7d57b888ae358"
            ]
        ]
    },
    {
        "id": "3ae13fe66c9c4fd2",
        "type": "file in",
        "z": "e78e73d3.53155",
        "name": "",
        "filename": "pekaway/switchall",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 2400,
        "wires": [
            [
                "fbb0856682157ebe"
            ]
        ]
    },
    {
        "id": "b29bf552eb93a13b",
        "type": "debug",
        "z": "e78e73d3.53155",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2400,
        "wires": []
    },
    {
        "id": "fbb0856682157ebe",
        "type": "json",
        "z": "e78e73d3.53155",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 2400,
        "wires": [
            [
                "b29bf552eb93a13b"
            ]
        ]
    },
    {
        "id": "d3f7d57b888ae358",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "turn off",
        "func": "//turn off relays & w-relays\nmsg.payload = false\nnode.send([msg, null])\n//turn off dimmers\nvar dimmervalue = 0\nvar i = 1\nwhile (i < 9) {\n    msg.url = \"http://127.0.0.1:1880/dimmer/\" + i +\"/\" + dimmervalue\n    msg.payload = \"\"\n    node.send([null, msg])\n    i = i + 1\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2360,
        "wires": [
            [
                "3fe38c2d6edc0c84"
            ],
            [
                "d6c0637581ab0b06"
            ]
        ]
    },
    {
        "id": "d6c0637581ab0b06",
        "type": "http request",
        "z": "e78e73d3.53155",
        "name": "dimmers off",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1190,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "af04e125a02e7e81",
        "type": "http in",
        "z": "e78e73d3.53155",
        "name": "",
        "url": "info/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2540,
        "wires": [
            [
                "3610a0e28dfa7021"
            ]
        ]
    },
    {
        "id": "3610a0e28dfa7021",
        "type": "function",
        "z": "e78e73d3.53155",
        "name": "get variables",
        "func": "msg.payload = {\n    \"VanPi_Ctrl\": global.get(\"currentVersion\"),\n    \"install date\": global.get(\"installdate\").toString(),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2540,
        "wires": [
            [
                "c1249b3174e91f47"
            ]
        ]
    },
    {
        "id": "fd8dd0dde3d5c912",
        "type": "comment",
        "z": "e78e73d3.53155",
        "name": "endpoint get some general information about the system",
        "info": "",
        "x": 260,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c1249b3174e91f47",
        "type": "http response",
        "z": "e78e73d3.53155",
        "name": "send answer",
        "statusCode": "200",
        "headers": {},
        "x": 490,
        "y": 2540,
        "wires": []
    },
    {
        "id": "6f7685fb79ce0438",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmytemp1",
        "mode": "link",
        "links": [
            "e5ec8a87df41929d"
        ],
        "x": 1015,
        "y": 700,
        "wires": []
    },
    {
        "id": "761da5923e187298",
        "type": "link out",
        "z": "e78e73d3.53155",
        "name": "Ndimmytemp2",
        "mode": "link",
        "links": [
            "e834be69d9ff260b"
        ],
        "x": 1015,
        "y": 720,
        "wires": []
    },
    {
        "id": "5d542f604c4d45eb",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay1/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "2d3dc2e44fe7485a"
            ]
        ]
    },
    {
        "id": "2d3dc2e44fe7485a",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "72a1d2dced5a7e61"
            ]
        ]
    },
    {
        "id": "c106a015a7965af9",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay2/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "6cb43c34b7d2d87e"
            ]
        ]
    },
    {
        "id": "6cb43c34b7d2d87e",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "fca214dfed07cf6a"
            ]
        ]
    },
    {
        "id": "77563e5de8a00e18",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay3/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "03ab048826cd072c"
            ]
        ]
    },
    {
        "id": "03ab048826cd072c",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "9a2c296bd2939689"
            ]
        ]
    },
    {
        "id": "5302830659fa0839",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay4/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "ecef2cf047d21f2c"
            ]
        ]
    },
    {
        "id": "ecef2cf047d21f2c",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "9e725df77107f87e"
            ]
        ]
    },
    {
        "id": "30b6c4fbb9e9af63",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay5/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "1bd68d7685ee32da"
            ]
        ]
    },
    {
        "id": "1bd68d7685ee32da",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "6aab650ddc6b11ea"
            ]
        ]
    },
    {
        "id": "9a331075843449b2",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay6/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "392745460eca8b65"
            ]
        ]
    },
    {
        "id": "392745460eca8b65",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "2cf77f5b731d0a42"
            ]
        ]
    },
    {
        "id": "52d3ade1380743f2",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay7/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "43554b3a7e926ccf"
            ]
        ]
    },
    {
        "id": "43554b3a7e926ccf",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "5011de5da2fad287"
            ]
        ]
    },
    {
        "id": "d042744aa40b01c0",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay8/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "1bf08aa1c550cc75"
            ]
        ]
    },
    {
        "id": "1bf08aa1c550cc75",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "3eae3506ca194e43"
            ]
        ]
    },
    {
        "id": "88fe54c952768d2f",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay9/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "d05c92a4ffe69009"
            ]
        ]
    },
    {
        "id": "d05c92a4ffe69009",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "987bcc967ed862e6"
            ]
        ]
    },
    {
        "id": "643b44ce8b1dd5a8",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/relay10/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "02b5a06a5cfa8357"
            ]
        ]
    },
    {
        "id": "02b5a06a5cfa8357",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "01cb531f965d3b69"
            ]
        ]
    },
    {
        "id": "72a1d2dced5a7e61",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay1/POWER",
        "links": [
            "6be0cc7556d1afc4",
            "e9ffa3ef.cde5d"
        ],
        "x": 615,
        "y": 80,
        "wires": []
    },
    {
        "id": "fca214dfed07cf6a",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay2/POWER",
        "links": [
            "d733acfd12bbd35e",
            "7255f9f4.6304d8"
        ],
        "x": 615,
        "y": 120,
        "wires": []
    },
    {
        "id": "9a2c296bd2939689",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay3/POWER",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 615,
        "y": 160,
        "wires": []
    },
    {
        "id": "9e725df77107f87e",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay4/POWER",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 615,
        "y": 200,
        "wires": []
    },
    {
        "id": "6aab650ddc6b11ea",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay5/POWER",
        "links": [
            "1d05179e.1f1a78"
        ],
        "x": 615,
        "y": 240,
        "wires": []
    },
    {
        "id": "2cf77f5b731d0a42",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay6/POWER",
        "links": [
            "c9adec52.63ae6"
        ],
        "x": 615,
        "y": 280,
        "wires": []
    },
    {
        "id": "5011de5da2fad287",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay7/POWER",
        "links": [
            "f765423d8ced5e16",
            "38796905.f4b7f6"
        ],
        "x": 615,
        "y": 320,
        "wires": []
    },
    {
        "id": "3eae3506ca194e43",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay8/POWER",
        "links": [
            "e2958091f0f04f2f",
            "2840c10.f61294"
        ],
        "x": 615,
        "y": 360,
        "wires": []
    },
    {
        "id": "987bcc967ed862e6",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay9/POWER",
        "links": [],
        "x": 615,
        "y": 400,
        "wires": []
    },
    {
        "id": "01cb531f965d3b69",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay10/POWER",
        "links": [],
        "x": 615,
        "y": 440,
        "wires": []
    },
    {
        "id": "8c20a0d45b589614",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "MQTT Input from Homebridge - Relays",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "276eba699d247a98",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "MQTT Output to Homebridge",
        "info": "",
        "x": 1060,
        "y": 40,
        "wires": []
    },
    {
        "id": "2074e9d605439834",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay1/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 80,
        "wires": []
    },
    {
        "id": "f43809f3173a44bf",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay2/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 120,
        "wires": []
    },
    {
        "id": "c8efce5699d02327",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay3/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 160,
        "wires": []
    },
    {
        "id": "f392f502296a6232",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay4/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 200,
        "wires": []
    },
    {
        "id": "3735167f9f619201",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay5/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 240,
        "wires": []
    },
    {
        "id": "4a2c0ad9ea94e045",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay6/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 280,
        "wires": []
    },
    {
        "id": "deb408ae953cf4cc",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay7/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "3b8b7be9db74a220",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay8/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1370,
        "y": 360,
        "wires": []
    },
    {
        "id": "5f7ef225e802d331",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay1",
        "links": [
            "11c24833.f847b8",
            "3fe1e8b328779bf0"
        ],
        "x": 955,
        "y": 80,
        "wires": [
            [
                "2074e9d605439834"
            ]
        ]
    },
    {
        "id": "ca12122251924b01",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay2",
        "links": [
            "893b1d6d.f3097",
            "da5b7e203041069d"
        ],
        "x": 955,
        "y": 120,
        "wires": [
            [
                "f43809f3173a44bf"
            ]
        ]
    },
    {
        "id": "ec54228c4db0212d",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay3",
        "links": [
            "c0c96477.8f3118"
        ],
        "x": 955,
        "y": 160,
        "wires": [
            [
                "c8efce5699d02327"
            ]
        ]
    },
    {
        "id": "b597242323e2a770",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay4",
        "links": [
            "e6f5ea3d.aa0598"
        ],
        "x": 955,
        "y": 200,
        "wires": [
            [
                "f392f502296a6232"
            ]
        ]
    },
    {
        "id": "73311fc8d6eb600e",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay5",
        "links": [
            "22d3166b.ba4d7a",
            "4f9da46367fef448",
            "7a848edff594f0af"
        ],
        "x": 955,
        "y": 240,
        "wires": [
            [
                "3735167f9f619201"
            ]
        ]
    },
    {
        "id": "52e43a6771948438",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay6",
        "links": [
            "fdbe2584.d2b908",
            "24dbe1d620c2b643"
        ],
        "x": 955,
        "y": 280,
        "wires": [
            [
                "4a2c0ad9ea94e045"
            ]
        ]
    },
    {
        "id": "7aa42e41ebc575e6",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay7",
        "links": [
            "7342408f.2fe48",
            "04b3f2d1f22e9655"
        ],
        "x": 955,
        "y": 320,
        "wires": [
            [
                "deb408ae953cf4cc"
            ]
        ]
    },
    {
        "id": "98f97f53934b5d8c",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out Relay8",
        "links": [
            "3d012ced.3740b4",
            "4ab061e21a8b783a"
        ],
        "x": 955,
        "y": 360,
        "wires": [
            [
                "3b8b7be9db74a220"
            ]
        ]
    },
    {
        "id": "13ae0e989cd4548f",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay1/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 540,
        "wires": [
            [
                "db184f2aa79e6e91"
            ]
        ]
    },
    {
        "id": "56f4f9685b8c9923",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay2/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 620,
        "wires": [
            [
                "bd29985538cb7f6b"
            ]
        ]
    },
    {
        "id": "f70dc82db5d1741a",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay3/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 700,
        "wires": [
            [
                "ab70935f14976852"
            ]
        ]
    },
    {
        "id": "24a42c5a44923571",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay4/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 780,
        "wires": [
            [
                "0c443b23c650813e"
            ]
        ]
    },
    {
        "id": "3722d5c6e373c254",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay5/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 860,
        "wires": [
            [
                "2e35e42b1863652c"
            ]
        ]
    },
    {
        "id": "6eb0830f9f5c85ec",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay6/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 940,
        "wires": [
            [
                "d5247048c6c2c8f9"
            ]
        ]
    },
    {
        "id": "bb3fa1112add88dc",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay7/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "dae2bc4181462a40"
            ]
        ]
    },
    {
        "id": "e4e33a45d13dd74b",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "home/cmnd/wrelay8/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "c95e44689881e04e"
            ]
        ]
    },
    {
        "id": "9c23f540971d9913",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay1/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe115789f3301412",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay2/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 620,
        "wires": []
    },
    {
        "id": "f4944c8a692468f5",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay3/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 700,
        "wires": []
    },
    {
        "id": "b330b7da44a85370",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay4/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 780,
        "wires": []
    },
    {
        "id": "0bbbdbf727781991",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay5/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 860,
        "wires": []
    },
    {
        "id": "94e93c14c0bf4346",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay6/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 940,
        "wires": []
    },
    {
        "id": "72ef4f1fa22f45d5",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay7/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d815672b8428ba63",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay8/POWER",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1600,
        "y": 1100,
        "wires": []
    },
    {
        "id": "efb29c1496917ddd",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/temp1/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1480,
        "y": 1460,
        "wires": []
    },
    {
        "id": "3e09278c0b281a73",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/temp2/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1480,
        "y": 1500,
        "wires": []
    },
    {
        "id": "2e580886c20ecd65",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/temp3/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1480,
        "y": 1540,
        "wires": []
    },
    {
        "id": "dea3ba1cca406842",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/temp4/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1480,
        "y": 1580,
        "wires": []
    },
    {
        "id": "42146e9c2d4cde4e",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "send temps to homebridge",
        "info": "",
        "x": 1450,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f76cd45103a046b7",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt in Temp1",
        "links": [
            "4bcca8e94bda2018"
        ],
        "x": 1175,
        "y": 1460,
        "wires": [
            [
                "2d6b55fec1d8afcf"
            ]
        ]
    },
    {
        "id": "603f8e83a82e8c18",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt in Temp2",
        "links": [
            "1b27a8e2ffa0e22b"
        ],
        "x": 1175,
        "y": 1500,
        "wires": [
            [
                "666764d8e8571381"
            ]
        ]
    },
    {
        "id": "fd7fcf244e4bee83",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt in Temp3",
        "links": [
            "c213918a728a800d"
        ],
        "x": 1175,
        "y": 1540,
        "wires": [
            [
                "499ff1e401cb0120"
            ]
        ]
    },
    {
        "id": "5fdda55432b18655",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt in Temp4",
        "links": [
            "bd951af11db7872a"
        ],
        "x": 1175,
        "y": 1580,
        "wires": [
            [
                "5ea20a945b5fb4da"
            ]
        ]
    },
    {
        "id": "67e7dbe48b39e6e4",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay1",
        "links": [
            "27bdb3ee.04bc8c",
            "720f3eb2d5d29f1f",
            "7c447736.4a83f8"
        ],
        "x": 955,
        "y": 540,
        "wires": [
            [
                "fb19f56ead20dc2f"
            ]
        ]
    },
    {
        "id": "fe0c5890608f9457",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay2",
        "links": [
            "eb22399f.41d3c8",
            "9028bf45.f220c",
            "0ada939a58d96722"
        ],
        "x": 955,
        "y": 620,
        "wires": [
            [
                "fcb32d2be06ce675"
            ]
        ]
    },
    {
        "id": "b7ebdd6f595b53a1",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay3",
        "links": [
            "60b06911.d6dea8",
            "a56c34f8.2cb5c8",
            "52b21bef53bdea53"
        ],
        "x": 955,
        "y": 700,
        "wires": [
            [
                "f6d16398be364060"
            ]
        ]
    },
    {
        "id": "52e560227ba2414c",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay4",
        "links": [
            "309e32c.0530fce",
            "4eadf5d2.808f3c"
        ],
        "x": 955,
        "y": 780,
        "wires": [
            [
                "773190450a671ed4"
            ]
        ]
    },
    {
        "id": "694613034a60fe9a",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay5",
        "links": [
            "b33939ea88a8e8b5",
            "df5dc54968f5895e",
            "a90f9a4da959d640"
        ],
        "x": 955,
        "y": 860,
        "wires": [
            [
                "704168d24a4fac79"
            ]
        ]
    },
    {
        "id": "72d54ceabf2571b6",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay6",
        "links": [
            "114eda8aabd9e2a7",
            "3e2bc38545285d02",
            "1c02b06aeb57d07d"
        ],
        "x": 955,
        "y": 940,
        "wires": [
            [
                "e0177058c8cadf8e"
            ]
        ]
    },
    {
        "id": "06d97ee62fa005c1",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay7",
        "links": [
            "40212aac63b29d3e",
            "72eaa982829289af",
            "60bfc3c39cc7ed45"
        ],
        "x": 955,
        "y": 1020,
        "wires": [
            [
                "091a2ac70f1f4009"
            ]
        ]
    },
    {
        "id": "aa1e33fda110d928",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt out WRelay8",
        "links": [
            "84f111f6cb530c4d",
            "72114393dc4d761a",
            "731a0542f21fc3fc"
        ],
        "x": 955,
        "y": 1100,
        "wires": [
            [
                "574c34b8b393d13d"
            ]
        ]
    },
    {
        "id": "85485ff379a28314",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/Level1/level",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1500,
        "y": 1240,
        "wires": []
    },
    {
        "id": "be5b01012210a04e",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "send Levels to homebridge",
        "info": "",
        "x": 1470,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fdd558f69e491e41",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/Level2/level",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1500,
        "y": 1280,
        "wires": []
    },
    {
        "id": "322e3d7a9a08c3a2",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/Level3/level",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1500,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5ab1fb0be46bb8ef",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/Level4/level",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1500,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e3f66508a76b559b",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "90",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 1300,
        "wires": [
            [
                "83a41d5b26b990cc"
            ]
        ]
    },
    {
        "id": "68077f1ebd3d0999",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get level1",
        "func": "var check = global.get(\"Level1\");\nvar label = global.get(\"NLevel1\");\n\nmsg.sensorname = label;\n\n\nmsg.payload = check;  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1240,
        "wires": [
            [
                "85485ff379a28314"
            ]
        ]
    },
    {
        "id": "7520b7a4dcfdf3ba",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get level2",
        "func": "var check = global.get(\"Level2\");\nvar label = global.get(\"NLevel2\");\n\nmsg.sensorname = label;\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1280,
        "wires": [
            [
                "fdd558f69e491e41"
            ]
        ]
    },
    {
        "id": "2c2b85c4110f1e77",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get level3",
        "func": "var check = global.get(\"Level3\");\nvar label = global.get(\"NLevel3\");\n\nmsg.sensorname = label;\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1320,
        "wires": [
            [
                "322e3d7a9a08c3a2"
            ]
        ]
    },
    {
        "id": "594bde381b531588",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get level4",
        "func": "var check = global.get(\"Level4\");\nvar label = global.get(\"NLevel4\");\n\nmsg.sensorname = label;\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1360,
        "wires": [
            [
                "5ab1fb0be46bb8ef"
            ]
        ]
    },
    {
        "id": "98426e64185a14f4",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay1/POWER",
        "links": [
            "afbb8dda.ffe6c"
        ],
        "x": 615,
        "y": 540,
        "wires": []
    },
    {
        "id": "076b4419c39bca29",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay2/POWER",
        "links": [
            "33a5d09e.6cc14"
        ],
        "x": 615,
        "y": 620,
        "wires": []
    },
    {
        "id": "c194897c9bfc3b8a",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay3/POWER",
        "links": [
            "428f4d48.86eaf4"
        ],
        "x": 615,
        "y": 700,
        "wires": []
    },
    {
        "id": "fa0f1d98be9bd11f",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay4/POWER",
        "links": [
            "d2ce5044.ef8af"
        ],
        "x": 615,
        "y": 780,
        "wires": []
    },
    {
        "id": "3c597d636ed35d64",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay5/POWER",
        "links": [
            "9f1c7c65c2da2d42"
        ],
        "x": 615,
        "y": 860,
        "wires": []
    },
    {
        "id": "3e0f2a0270a8f3df",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay6/POWER",
        "links": [
            "d76c3b78c0f14e69"
        ],
        "x": 615,
        "y": 940,
        "wires": []
    },
    {
        "id": "f4cefc9b8614abd9",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay7/POWER",
        "links": [
            "34f49f08e1a06032"
        ],
        "x": 615,
        "y": 1020,
        "wires": []
    },
    {
        "id": "18f278f3256181fc",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "home/relay8/POWER",
        "links": [
            "1be6547089f6e149"
        ],
        "x": 615,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3fd0544fc1b89d87",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 540,
        "wires": [
            [
                "9c23f540971d9913"
            ]
        ]
    },
    {
        "id": "9dd26b7e1d5ac224",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "fe115789f3301412"
            ]
        ]
    },
    {
        "id": "1c9927c15d6977bb",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 700,
        "wires": [
            [
                "f4944c8a692468f5"
            ]
        ]
    },
    {
        "id": "e91031657d64fafd",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "b330b7da44a85370"
            ]
        ]
    },
    {
        "id": "7532d427c865f268",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 860,
        "wires": [
            [
                "0bbbdbf727781991"
            ]
        ]
    },
    {
        "id": "1501d47eb0d666a9",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 940,
        "wires": [
            [
                "94e93c14c0bf4346"
            ]
        ]
    },
    {
        "id": "509db69f7fbe9191",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1020,
        "wires": [
            [
                "72ef4f1fa22f45d5"
            ]
        ]
    },
    {
        "id": "1fe9ae9afe629957",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "d815672b8428ba63"
            ]
        ]
    },
    {
        "id": "b548bc3d4df74635",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "MQTT Input from Homebridge - Wifi Relays (Tasmota/Shelly)",
        "info": "",
        "x": 260,
        "y": 500,
        "wires": []
    },
    {
        "id": "dc2f8bd343599180",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "MQTT Output to Homebridge & Tasmota device (top MQTT out) & Shelly (bottom MQTT out)",
        "info": "",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "55c04dbef04b3408",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/batt",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1340,
        "wires": [
            [
                "f95db10b5e2548e7"
            ]
        ]
    },
    {
        "id": "f95db10b5e2548e7",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get batt stats",
        "func": "msg = {\n    \"stats\":\"battery\",\n    \"payload\": {\n        \"AMPS\":global.get(\"MainBattAmps\"),\n        \"SoC\":global.get(\"MainBattSoc\"),\n        \"Voltage\":global.get(\"MainBattVolt\"),\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "01c68730b296a7d4"
            ]
        ]
    },
    {
        "id": "01c68730b296a7d4",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/batt",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "10c06d614a55fc94",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/level",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1380,
        "wires": [
            [
                "096a543030c32726"
            ]
        ]
    },
    {
        "id": "096a543030c32726",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get level stats",
        "func": "msg = {\n    \"stats\":\"level\",\n    \"payload\": {\n        \"Level1\":global.get(\"Level1\"),\n        \"Level1 name\":global.get(\"NLevel1\"),\n        \"Level2\":global.get(\"Level2\"),\n        \"Level2 name\":global.get(\"NLevel2\"),\n        \"Level3\":global.get(\"Level3\"),\n        \"Level3 name\":global.get(\"NLevel3\"),\n        \"Level4\":global.get(\"Level4\"),\n        \"Level4 name\":global.get(\"NLevel4\")\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1380,
        "wires": [
            [
                "2435a6cad5e579ed"
            ]
        ]
    },
    {
        "id": "2435a6cad5e579ed",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/level",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4a09e2ed6083b79f",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1420,
        "wires": [
            [
                "ef157e936307904b"
            ]
        ]
    },
    {
        "id": "ef157e936307904b",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get temp stats",
        "func": "msg = {\n    \"stats\":\"temp\",\n    \"payload\": {\n        \"Temp1\":global.get(\"temp1\"),\n        \"Temp1 Name\":global.get(\"Ntemp1\"),\n        \"Temp2\":global.get(\"temp2\"),\n        \"Temp2 Name\":global.get(\"Ntemp2\"),\n        \"Temp3\":global.get(\"temp3\"),\n        \"Temp3 Name\":global.get(\"Ntemp3\"),\n        \"Temp4\":global.get(\"temp4\"),\n        \"Temp4 Name\":global.get(\"Ntemp4\"),\n        \"Dimmytemp1\":global.get(\"dimmytemp1\"),\n        \"Dimmytemp1 Name\":global.get(\"Ndimmytemp1\"),\n        \"Dimmytemp2\":global.get(\"dimmytemp2\"),\n        \"Dimmytemp2 Name\":global.get(\"Ndimmytemp2\"),\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1420,
        "wires": [
            [
                "de97028d2a9578f3"
            ]
        ]
    },
    {
        "id": "de97028d2a9578f3",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 720,
        "y": 1420,
        "wires": []
    },
    {
        "id": "46c7c940d1dfe636",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/relay",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1460,
        "wires": [
            [
                "d4e1378e34f71834"
            ]
        ]
    },
    {
        "id": "d4e1378e34f71834",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get relay stats",
        "func": "msg = {\n    \"stats\":\"relays\",\n    \"payload\": {\n        \"Relay1\":global.get(\"one\"),\n        \"Relay1 Name\":global.get(\"None\"),\n        \"Relay2\":global.get(\"two\"),\n        \"Relay2 Name\":global.get(\"Ntwo\"),\n        \"Relay3\":global.get(\"three\"),\n        \"Relay3 Name\":global.get(\"Nthree\"),\n        \"Relay4\":global.get(\"four\"),\n        \"Relay4 Name\":global.get(\"Nfour\"),\n        \"Relay5\":global.get(\"five\"),\n        \"Relay5 Name\":global.get(\"Nfive\"),\n        \"Relay6\":global.get(\"six\"),\n        \"Relay6 Name\":global.get(\"Nsix\"),\n        \"Relay7\":global.get(\"seven\"),\n        \"Relay7 Name\":global.get(\"Nseven\"),\n        \"Relay8\":global.get(\"eight\"),\n        \"Relay8 Name\":global.get(\"Neight\"),\n        \"Relay9\":global.get(\"nine\"),\n        \"Relay9 Name\":global.get(\"Nnine\"),\n        \"Relay10\":global.get(\"ten\"),\n        \"Relay10 Name\":global.get(\"Nten\"),\n        \"WifiRelaySettings\":global.get(\"wifirelay\"),\n        \"WifiRelay1\":global.get(\"Wone\"),\n        \"WifiRelay1 Name\":global.get(\"NWone\"),\n        \"FirmwareWR1\":global.get(\"wrelay1_firmware\"),\n        \"WifiRelay2\":global.get(\"Wtwo\"),\n        \"WifiRelay2 Name\":global.get(\"NWtwo\"),\n        \"FirmwareWR2\":global.get(\"wrelay2_firmware\"),\n        \"WifiRelay3\":global.get(\"Wthree\"),\n        \"WifiRelay3 Name\":global.get(\"NWthree\"),\n        \"FirmwareWR3\":global.get(\"wrelay3_firmware\"),\n        \"WifiRelay4\":global.get(\"Wfour\"),\n        \"WifiRelay4 Name\":global.get(\"NWfour\"),\n        \"FirmwareWR4\":global.get(\"wrelay4_firmware\"),\n        \"WifiRelay5\":global.get(\"Wfive\"),\n        \"WifiRelay5 Name\":global.get(\"NWfive\"),\n        \"FirmwareWR5\":global.get(\"wrelay5_firmware\"),\n        \"WifiRelay6\":global.get(\"Wsix\"),\n        \"WifiRelay6 Name\":global.get(\"NWsix\"),\n        \"FirmwareWR6\":global.get(\"wrelay6_firmware\"),\n        \"WifiRelay7\":global.get(\"Wseven\"),\n        \"WifiRelay7 Name\":global.get(\"NWseven\"),\n        \"FirmwareWR7\":global.get(\"wrelay7_firmware\"),\n        \"WifiRelay8\":global.get(\"Weight\"),\n        \"WifiRelay8 Name\":global.get(\"NWeight\"),\n        \"FirmwareWR8\":global.get(\"wrelay8_firmware\"),\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1460,
        "wires": [
            [
                "2975bb7bf7f1e697"
            ]
        ]
    },
    {
        "id": "2975bb7bf7f1e697",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/relay",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 720,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d775c43949b41cc7",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/dimmer",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1500,
        "wires": [
            [
                "3075aa43999ca314"
            ]
        ]
    },
    {
        "id": "3075aa43999ca314",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get dimmer stats",
        "func": "msg = {\n    \"stats\":\"dimmer\",\n    \"payload\": {\n        \"Dimmer Settings\":global.get(\"dimmersettings\"),\n        \"Dimmer Debug Mode\":global.get(\"dimmerdebugmode\"),\n        \"Dimmer Debug Watchdog Target IP\":global.get(\"dimmerwatchdogtargetip\"),\n        \"Dimmer1\":global.get(\"dimmer0\"),\n        \"Dimmer1 Name\":global.get(\"Ndimmer0\"),\n        \"Dimmer2\":global.get(\"dimmer1\"),\n        \"Dimmer2 Name\":global.get(\"Ndimmer1\"),\n        \"Dimmer3\":global.get(\"dimmer2\"),\n        \"Dimmer3 Name\":global.get(\"Ndimmer2\"),\n        \"Dimmer4\":global.get(\"dimmer3\"),\n        \"Dimmer4 Name\":global.get(\"Ndimmer3\"),\n        \"Dimmer5\":global.get(\"dimmer4\"),\n        \"Dimmer5 Name\":global.get(\"Ndimmer4\"),\n        \"Dimmer6\":global.get(\"dimmer5\"),\n        \"Dimmer6 Name\":global.get(\"Ndimmer5\"),\n        \"Dimmer7\":global.get(\"dimmer6\"),\n        \"Dimmer7 Name\":global.get(\"Ndimmer6\"),\n        \"Dimmer8\":global.get(\"dimmer7\"),\n        \"Dimmer8 Name\":global.get(\"Ndimmer7\")\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1500,
        "wires": [
            [
                "139f3e88f64a48e5"
            ]
        ]
    },
    {
        "id": "139f3e88f64a48e5",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/dimmer",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 720,
        "y": 1500,
        "wires": []
    },
    {
        "id": "5d0b608028729618",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/heater",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1540,
        "wires": [
            [
                "9f5d99a090b671fd"
            ]
        ]
    },
    {
        "id": "9f5d99a090b671fd",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get heater stats",
        "func": "msg = {\n    \"stats\":\"heater\",\n    \"payload\":{\n        \"error\":global.get(\"heatererror\"),\n        \"heatertoggle\":global.get(\"HeaterToggle\"),\n        \"heatfan\":global.get(\"heatfan\"),\n        \"heatglow\":global.get(\"heatglow\"),\n        \"heatpump\":global.get(\"heatpump\"),\n        \"heatstatus\":global.get(\"heatstatus\"),\n        \"heattemp\":global.get(\"heattemp\"),\n        \"heattempsensor\":global.get(\"heattempsensor\"),\n        \"heatconnectrelay\":global.get(\"heatconnectrelay\"),\n        \"heattimertruefalse\":global.get(\"heattimeronoff\"),\n        \"heatvolt\":global.get(\"heatvolt\"),\n        \"heatwpump\":global.get(\"heatwpump\"),\n        \"hysteresis\":global.get(\"hysteresis\")\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1540,
        "wires": [
            [
                "8c82f860cab33f21"
            ]
        ]
    },
    {
        "id": "8c82f860cab33f21",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/heater",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 720,
        "y": 1540,
        "wires": []
    },
    {
        "id": "95d920b4a443e248",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "get all stats",
        "info": "",
        "x": 310,
        "y": 1300,
        "wires": []
    },
    {
        "id": "72988b86f3d27b87",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/relay/+/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1800,
        "wires": [
            [
                "1583a7d4d6d20f7b"
            ]
        ]
    },
    {
        "id": "0e61e7ec74c433f3",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check for relaynumber",
        "func": "if (isNaN(parseInt(msg.payload)) == false) {\n    msg.relayno = parseInt(msg.payload)\n    if (msg.newState.toLowerCase() == \"on\" || msg.newState.toLowerCase() == \"true\") {\n        msg.payload = true\n    }\n    else if (msg.newState.toLowerCase() == \"off\" || msg.newState.toLowerCase() == \"false\") {\n        msg.payload = false\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1800,
        "wires": [
            [
                "df93173a834d22b8"
            ]
        ]
    },
    {
        "id": "01d550023a2cd1cc",
        "type": "split",
        "z": "71d2baa986138c38",
        "name": "",
        "splt": "/",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 1800,
        "wires": [
            [
                "0e61e7ec74c433f3"
            ]
        ]
    },
    {
        "id": "1583a7d4d6d20f7b",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1800,
        "wires": [
            [
                "01d550023a2cd1cc"
            ]
        ]
    },
    {
        "id": "df93173a834d22b8",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "relay/1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/6",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/7",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/9",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "relay/10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 990,
        "y": 1800,
        "wires": [
            [
                "1a76dcedc9d4fa5b"
            ],
            [
                "c084f41458d81a9b"
            ],
            [
                "fecf8235a3bc93f8"
            ],
            [
                "ca13b9d3773c45d8"
            ],
            [
                "030e0d53716d95a4"
            ],
            [
                "1c6a8198ae953dda"
            ],
            [
                "111743f4760bc3f1"
            ],
            [
                "72352dc2eb449f47"
            ],
            [
                "71e9296a7b3f89fd"
            ],
            [
                "881e8eee2b737b09"
            ]
        ]
    },
    {
        "id": "1a76dcedc9d4fa5b",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 1 power",
        "links": [
            "e9ffa3ef.cde5d"
        ],
        "x": 1195,
        "y": 1700,
        "wires": []
    },
    {
        "id": "c084f41458d81a9b",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 2 power",
        "links": [
            "7255f9f4.6304d8"
        ],
        "x": 1195,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fecf8235a3bc93f8",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 3 power",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 1195,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ca13b9d3773c45d8",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 4 power",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 1195,
        "y": 1760,
        "wires": []
    },
    {
        "id": "030e0d53716d95a4",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 5 power",
        "links": [
            "1d05179e.1f1a78"
        ],
        "x": 1195,
        "y": 1780,
        "wires": []
    },
    {
        "id": "1c6a8198ae953dda",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 6 power",
        "links": [
            "c9adec52.63ae6"
        ],
        "x": 1195,
        "y": 1800,
        "wires": []
    },
    {
        "id": "111743f4760bc3f1",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 7 power",
        "links": [
            "38796905.f4b7f6"
        ],
        "x": 1195,
        "y": 1820,
        "wires": []
    },
    {
        "id": "72352dc2eb449f47",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 8 power",
        "links": [
            "2840c10.f61294"
        ],
        "x": 1195,
        "y": 1840,
        "wires": []
    },
    {
        "id": "71e9296a7b3f89fd",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 9 power",
        "mode": "link",
        "links": [],
        "x": 1195,
        "y": 1860,
        "wires": []
    },
    {
        "id": "881e8eee2b737b09",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 10 power",
        "mode": "link",
        "links": [],
        "x": 1195,
        "y": 1880,
        "wires": []
    },
    {
        "id": "a5c6055b95d17d35",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/wrelay/+/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2000,
        "wires": [
            [
                "e8c311c9a6aa46ce"
            ]
        ]
    },
    {
        "id": "36a723db804b6822",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check for wrelaynumber",
        "func": "if (isNaN(parseInt(msg.payload)) == false) {\n    msg.relayno = parseInt(msg.payload)\n    if (msg.newState.toLowerCase() == \"on\" || msg.newState.toLowerCase() == \"true\") {\n        msg.payload = true\n    }\n    else if (msg.newState.toLowerCase() == \"off\" || msg.newState.toLowerCase() == \"false\") {\n        msg.payload = false\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 2000,
        "wires": [
            [
                "c43aa3714b11f9e8"
            ]
        ]
    },
    {
        "id": "dc60c204402f138b",
        "type": "split",
        "z": "71d2baa986138c38",
        "name": "",
        "splt": "/",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 2000,
        "wires": [
            [
                "36a723db804b6822"
            ]
        ]
    },
    {
        "id": "e8c311c9a6aa46ce",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2000,
        "wires": [
            [
                "dc60c204402f138b"
            ]
        ]
    },
    {
        "id": "c43aa3714b11f9e8",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "wrelay/1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/6",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/7",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "wrelay/8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 990,
        "y": 2000,
        "wires": [
            [
                "2d8411f3b31d9334"
            ],
            [
                "58a0dd71927444c8"
            ],
            [
                "3ffcd69b6d278659"
            ],
            [
                "8e7f9039e208c418"
            ],
            [
                "5f2b71b5ac8456b5"
            ],
            [
                "2c97904cbdf55414"
            ],
            [
                "7444cdfd898a92d1"
            ],
            [
                "c84eaa263a67ff73"
            ]
        ]
    },
    {
        "id": "2d8411f3b31d9334",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 1 power",
        "mode": "link",
        "links": [
            "afbb8dda.ffe6c"
        ],
        "x": 1195,
        "y": 1920,
        "wires": []
    },
    {
        "id": "58a0dd71927444c8",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 2 power",
        "links": [
            "33a5d09e.6cc14"
        ],
        "x": 1195,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3ffcd69b6d278659",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 3 power",
        "links": [
            "428f4d48.86eaf4"
        ],
        "x": 1195,
        "y": 1960,
        "wires": []
    },
    {
        "id": "8e7f9039e208c418",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 4 power",
        "links": [
            "d2ce5044.ef8af"
        ],
        "x": 1195,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5f2b71b5ac8456b5",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 5 power",
        "links": [
            "9f1c7c65c2da2d42"
        ],
        "x": 1195,
        "y": 2000,
        "wires": []
    },
    {
        "id": "2c97904cbdf55414",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt wrelay 6 power",
        "links": [
            "d76c3b78c0f14e69"
        ],
        "x": 1195,
        "y": 2020,
        "wires": []
    },
    {
        "id": "7444cdfd898a92d1",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 7 power",
        "links": [
            "34f49f08e1a06032"
        ],
        "x": 1195,
        "y": 2040,
        "wires": []
    },
    {
        "id": "c84eaa263a67ff73",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt relay 8 power",
        "links": [
            "1be6547089f6e149"
        ],
        "x": 1195,
        "y": 2060,
        "wires": []
    },
    {
        "id": "9ca098111db9cd4b",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/dimmer/+/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2160,
        "wires": [
            [
                "b440c7eccce718ad"
            ]
        ]
    },
    {
        "id": "9569b6cfdbe8ba68",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check for dimmernumber",
        "func": "if (isNaN(parseInt(msg.payload)) == false) {\n    if (msg.newState != \"\") {    \n        msg.payload = parseInt(msg.payload) -1\n        msg.targetdimmerno = \"dimmer\" + msg.payload\n        msg.targetdimmernoname = \"N\" + msg.targetdimmerno \n        msg.label = global.get(msg.targetdimmernoname)\n        \n        if (msg.newState.toLowerCase() == \"on\" || msg.newState.toLowerCase() == \"true\") {\n            msg.payload = 100\n        }\n        else if (msg.newState.toLowerCase() == \"off\" || msg.newState.toLowerCase() == \"false\") {\n            msg.payload = 0\n        }\n        else if (isNaN(parseInt(msg.newState)) == false) {\n                if (parseInt(msg.newState) < 101 || parseInt(msg.newState) >= 0) {\n                    msg.payload = parseInt(msg.newState)\n                }\n        }\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 2160,
        "wires": [
            [
                "9cdd928c181cf74d"
            ]
        ]
    },
    {
        "id": "6bfbfc78db8cae9f",
        "type": "split",
        "z": "71d2baa986138c38",
        "name": "",
        "splt": "/",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "9569b6cfdbe8ba68"
            ]
        ]
    },
    {
        "id": "b440c7eccce718ad",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2160,
        "wires": [
            [
                "6bfbfc78db8cae9f"
            ]
        ]
    },
    {
        "id": "9cdd928c181cf74d",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "dimmer/1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/5",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/6",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/7",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "dimmer/8",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 990,
        "y": 2160,
        "wires": [
            [
                "91808d95f9b1141d"
            ],
            [
                "128be73c1e6d68d2"
            ],
            [
                "e8c60068e519caef"
            ],
            [
                "b8e75a244feab1d4"
            ],
            [
                "d436283fe6908fde"
            ],
            [
                "c89dd7f87ffd430f"
            ],
            [
                "228da6a60379150a"
            ],
            [
                "9d719ab8a681ff8d"
            ]
        ]
    },
    {
        "id": "91808d95f9b1141d",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 1 power",
        "mode": "link",
        "links": [
            "a4c0fd66546e7864"
        ],
        "x": 1195,
        "y": 2100,
        "wires": []
    },
    {
        "id": "128be73c1e6d68d2",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 2 power",
        "links": [
            "1db51e9f7fe5ebea"
        ],
        "x": 1195,
        "y": 2120,
        "wires": []
    },
    {
        "id": "e8c60068e519caef",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 3 power",
        "links": [
            "09bf8b5862924eed"
        ],
        "x": 1195,
        "y": 2140,
        "wires": []
    },
    {
        "id": "b8e75a244feab1d4",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 4 power",
        "links": [
            "4896e98db77c2f91"
        ],
        "x": 1195,
        "y": 2160,
        "wires": []
    },
    {
        "id": "d436283fe6908fde",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 5 power",
        "links": [
            "77683cc8a2a2dd71"
        ],
        "x": 1195,
        "y": 2180,
        "wires": []
    },
    {
        "id": "c89dd7f87ffd430f",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 6 power",
        "links": [
            "2530d817d07d6ef2"
        ],
        "x": 1195,
        "y": 2200,
        "wires": []
    },
    {
        "id": "228da6a60379150a",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 7 power",
        "links": [
            "d4e73c36b453526a"
        ],
        "x": 1195,
        "y": 2220,
        "wires": []
    },
    {
        "id": "9d719ab8a681ff8d",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt dimmer 8 power",
        "links": [
            "bd1237489ec8e5f3"
        ],
        "x": 1195,
        "y": 2240,
        "wires": []
    },
    {
        "id": "97023247597d18bf",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "set relays 1-10",
        "info": "",
        "x": 140,
        "y": 1760,
        "wires": []
    },
    {
        "id": "38c868032f56d85e",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "set wrelays 1-8",
        "info": "",
        "x": 140,
        "y": 1960,
        "wires": []
    },
    {
        "id": "22cb9a37ce813e8c",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "set dimmers 1-8",
        "info": "",
        "x": 140,
        "y": 2120,
        "wires": []
    },
    {
        "id": "db184f2aa79e6e91",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 540,
        "wires": [
            [
                "98426e64185a14f4"
            ]
        ]
    },
    {
        "id": "582474b3162a17f3",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/heater/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 2320,
        "wires": [
            [
                "d13c84d5dc76d2b3"
            ]
        ]
    },
    {
        "id": "d13c84d5dc76d2b3",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload.toLowerCase()\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2320,
        "wires": [
            [
                "e624428880142ed3"
            ]
        ]
    },
    {
        "id": "e624428880142ed3",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "newState",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 2320,
        "wires": [
            [
                "ef794877a1b58355"
            ],
            [
                "bd58df4c860a250e"
            ]
        ]
    },
    {
        "id": "ef794877a1b58355",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater on",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 895,
        "y": 2300,
        "wires": []
    },
    {
        "id": "bd58df4c860a250e",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 895,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a78c6be3c23d5908",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/heater/POWER/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2420,
        "wires": [
            [
                "e85e6efe0128e4ec"
            ]
        ]
    },
    {
        "id": "e85e6efe0128e4ec",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload.toLowerCase()\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2420,
        "wires": [
            [
                "dd376a53a9136947"
            ]
        ]
    },
    {
        "id": "f4f0d85b2b333def",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "newState",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 2420,
        "wires": [
            [
                "ef215dab8a56ed9f"
            ],
            [
                "f4c77d50408aeea4"
            ]
        ]
    },
    {
        "id": "ef215dab8a56ed9f",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater on",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 1195,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f4c77d50408aeea4",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1195,
        "y": 2440,
        "wires": []
    },
    {
        "id": "dd376a53a9136947",
        "type": "split",
        "z": "71d2baa986138c38",
        "name": "",
        "splt": "/",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 2420,
        "wires": [
            [
                "22429ab168a237f7"
            ]
        ]
    },
    {
        "id": "22429ab168a237f7",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check for on/off & temp",
        "func": "if (isNaN(parseInt(msg.payload)) == false) {\n    if ((parseInt(msg.payload) < 36) && (parseInt(msg.payload) > 11)) {\n        msg.targettemp = parseInt(msg.payload)\n    }\n    node.send([msg, null])\n    msg.payload = msg.targettemp\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 2420,
        "wires": [
            [
                "f4f0d85b2b333def"
            ],
            [
                "552ff35d22844279"
            ]
        ]
    },
    {
        "id": "552ff35d22844279",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "set targettemp",
        "func": "msg.payload = msg.targettemp\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2480,
        "wires": [
            [
                "204604583c498134"
            ]
        ]
    },
    {
        "id": "204604583c498134",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater off",
        "links": [
            "788088e08e7292d0"
        ],
        "x": 1195,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a790e3b63712f7b3",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/heater/POWER/+/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2560,
        "wires": [
            [
                "968a891c6bb7e1c2"
            ]
        ]
    },
    {
        "id": "968a891c6bb7e1c2",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "change payload/topic",
        "func": "msg.newState = msg.payload.toLowerCase()\nmsg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2560,
        "wires": [
            [
                "1b654464596040ac"
            ]
        ]
    },
    {
        "id": "1b654464596040ac",
        "type": "split",
        "z": "71d2baa986138c38",
        "name": "",
        "splt": "/",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 630,
        "y": 2560,
        "wires": [
            [
                "c5536581620b678b"
            ]
        ]
    },
    {
        "id": "c5536581620b678b",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check for on/off & temp & timer",
        "func": "if (isNaN(parseInt(msg.payload)) == false) {\n    if (msg.parts.index == 4 && (parseInt(msg.payload) < 36) && (parseInt(msg.payload) > 11)) {\n        msg.targettemp = parseInt(msg.payload)\n        msg.payload = msg.targettemp\n        node.send([null, msg, null])\n    }\n    else if (msg.parts.index == 5 && parseInt(msg.payload) < 601 && parseInt(msg.payload) > 0) {\n        msg.timer = parseInt(msg.payload)\n        msg.delay = msg.timer*60000\n        node.send([null, null, msg])\n    }\n    return [msg, null, null]\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2560,
        "wires": [
            [
                "801d0142043cd019"
            ],
            [
                "95e1350423ca2c1f"
            ],
            [
                "502428775bd45b55",
                "12e4e07c05e02679"
            ]
        ]
    },
    {
        "id": "801d0142043cd019",
        "type": "switch",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "newState",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 2560,
        "wires": [
            [
                "e4d6be1f0b1154d3"
            ],
            [
                "be6c3d30a055ba91",
                "12e4e07c05e02679"
            ]
        ]
    },
    {
        "id": "e4d6be1f0b1154d3",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater on",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 1395,
        "y": 2540,
        "wires": []
    },
    {
        "id": "be6c3d30a055ba91",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1395,
        "y": 2580,
        "wires": []
    },
    {
        "id": "95e1350423ca2c1f",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "set targettemp",
        "func": "msg.payload = msg.targettemp\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2620,
        "wires": [
            [
                "a5478aaf4daf1591"
            ]
        ]
    },
    {
        "id": "a5478aaf4daf1591",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "mqtt heater off",
        "links": [
            "788088e08e7292d0"
        ],
        "x": 1395,
        "y": 2620,
        "wires": []
    },
    {
        "id": "434e76ee2bdc87f1",
        "type": "delay",
        "z": "71d2baa986138c38",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1300,
        "y": 2660,
        "wires": [
            [
                "7362857190ef0666"
            ]
        ]
    },
    {
        "id": "12e4e07c05e02679",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2700,
        "wires": [
            [
                "434e76ee2bdc87f1"
            ]
        ]
    },
    {
        "id": "502428775bd45b55",
        "type": "delay",
        "z": "71d2baa986138c38",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 2660,
        "wires": [
            [
                "434e76ee2bdc87f1"
            ]
        ]
    },
    {
        "id": "7362857190ef0666",
        "type": "link out",
        "z": "71d2baa986138c38",
        "name": "http heater off",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 1395,
        "y": 2660,
        "wires": []
    },
    {
        "id": "2d3e2b869b235879",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "set heater",
        "info": "",
        "x": 120,
        "y": 2280,
        "wires": []
    },
    {
        "id": "8bbcd0b5b959a099",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "API timer is not visible in dashboard!",
        "info": "",
        "x": 200,
        "y": 2520,
        "wires": []
    },
    {
        "id": "83a41d5b26b990cc",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1300,
        "wires": [
            [
                "68077f1ebd3d0999",
                "7520b7a4dcfdf3ba",
                "2c2b85c4110f1e77",
                "594bde381b531588"
            ]
        ]
    },
    {
        "id": "2d6b55fec1d8afcf",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1460,
        "wires": [
            [
                "efb29c1496917ddd"
            ]
        ]
    },
    {
        "id": "666764d8e8571381",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1500,
        "wires": [
            [
                "3e09278c0b281a73"
            ]
        ]
    },
    {
        "id": "499ff1e401cb0120",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1540,
        "wires": [
            [
                "2e580886c20ecd65"
            ]
        ]
    },
    {
        "id": "5ea20a945b5fb4da",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1580,
        "wires": [
            [
                "dea3ba1cca406842"
            ]
        ]
    },
    {
        "id": "720daf1fe079d789",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "90",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1260,
        "wires": [
            [
                "0b4a73066ca09658"
            ]
        ]
    },
    {
        "id": "0b4a73066ca09658",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "sendmqttstats true?",
        "func": " msg.payload = global.get(\"sendmqttstats\")\n if (msg.payload == true) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1260,
        "wires": [
            [
                "f95db10b5e2548e7",
                "096a543030c32726",
                "ef157e936307904b",
                "d4e1378e34f71834",
                "9f5d99a090b671fd",
                "3075aa43999ca314",
                "196da47b40565b0c",
                "e38d0f381033c354"
            ]
        ]
    },
    {
        "id": "a4d2d92c0a8a2f07",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "send stats every 5min",
        "info": "",
        "x": 280,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1d081150f1c98a30",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay1/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 580,
        "wires": [
            [
                "db184f2aa79e6e91"
            ]
        ]
    },
    {
        "id": "fb19f56ead20dc2f",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay1_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "3fd0544fc1b89d87"
            ],
            [
                "638e1b231683be40"
            ]
        ]
    },
    {
        "id": "638e1b231683be40",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 580,
        "wires": [
            [
                "b3daf59bcadd64f7"
            ]
        ]
    },
    {
        "id": "b3daf59bcadd64f7",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay1/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 580,
        "wires": []
    },
    {
        "id": "bd29985538cb7f6b",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "076b4419c39bca29"
            ]
        ]
    },
    {
        "id": "ab70935f14976852",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 700,
        "wires": [
            [
                "c194897c9bfc3b8a"
            ]
        ]
    },
    {
        "id": "0c443b23c650813e",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 780,
        "wires": [
            [
                "fa0f1d98be9bd11f"
            ]
        ]
    },
    {
        "id": "2e35e42b1863652c",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 860,
        "wires": [
            [
                "3c597d636ed35d64"
            ]
        ]
    },
    {
        "id": "d5247048c6c2c8f9",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 940,
        "wires": [
            [
                "3e0f2a0270a8f3df"
            ]
        ]
    },
    {
        "id": "dae2bc4181462a40",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "f4cefc9b8614abd9"
            ]
        ]
    },
    {
        "id": "c95e44689881e04e",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert string to boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "18f278f3256181fc"
            ]
        ]
    },
    {
        "id": "5532dc2a56d1cb95",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay2/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 660,
        "wires": [
            [
                "bd29985538cb7f6b"
            ]
        ]
    },
    {
        "id": "65975f6261511623",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay3/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 740,
        "wires": [
            [
                "ab70935f14976852"
            ]
        ]
    },
    {
        "id": "61c33555827a2692",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay4/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 820,
        "wires": [
            [
                "0c443b23c650813e"
            ]
        ]
    },
    {
        "id": "99e1ffb43b363c42",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay5/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 900,
        "wires": [
            [
                "2e35e42b1863652c"
            ]
        ]
    },
    {
        "id": "42ecd25a0b3356f9",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay6/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 980,
        "wires": [
            [
                "d5247048c6c2c8f9"
            ]
        ]
    },
    {
        "id": "3d14115d067fb949",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay7/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "dae2bc4181462a40"
            ]
        ]
    },
    {
        "id": "59696d965947dd5c",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay8/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1140,
        "wires": [
            [
                "c95e44689881e04e"
            ]
        ]
    },
    {
        "id": "fcb32d2be06ce675",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay2_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 620,
        "wires": [
            [
                "9dd26b7e1d5ac224"
            ],
            [
                "52c37f61c38f190d"
            ]
        ]
    },
    {
        "id": "f6d16398be364060",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay3_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 700,
        "wires": [
            [
                "1c9927c15d6977bb"
            ],
            [
                "664930b38dd6951d"
            ]
        ]
    },
    {
        "id": "773190450a671ed4",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay4_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "e91031657d64fafd"
            ],
            [
                "67b18776cc3c880f"
            ]
        ]
    },
    {
        "id": "704168d24a4fac79",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay5_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 860,
        "wires": [
            [
                "7532d427c865f268"
            ],
            [
                "11f0a9a36a85dd08"
            ]
        ]
    },
    {
        "id": "e0177058c8cadf8e",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay6_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 940,
        "wires": [
            [
                "1501d47eb0d666a9"
            ],
            [
                "100980fbbc169471"
            ]
        ]
    },
    {
        "id": "091a2ac70f1f4009",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay7_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1020,
        "wires": [
            [
                "509db69f7fbe9191"
            ],
            [
                "0335188612e0bba6"
            ]
        ]
    },
    {
        "id": "574c34b8b393d13d",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "tasmota/shelly?",
        "func": "var firmware = global.get(\"wrelay8_firmware\")\n\nif (firmware == \"tasmota\") {\n    return [msg, null];\n}\n//return both to send command to homebridge and shelly\nelse if (firmware == \"shelly\") {\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1100,
        "wires": [
            [
                "1fe9ae9afe629957"
            ],
            [
                "44a7a4abc8b6b905"
            ]
        ]
    },
    {
        "id": "52c37f61c38f190d",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 660,
        "wires": [
            [
                "7df90b03d93707dc"
            ]
        ]
    },
    {
        "id": "664930b38dd6951d",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 740,
        "wires": [
            [
                "9e8c3cd2793e3d86"
            ]
        ]
    },
    {
        "id": "67b18776cc3c880f",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 820,
        "wires": [
            [
                "f41f8ae5aafb0aa3"
            ]
        ]
    },
    {
        "id": "11f0a9a36a85dd08",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 900,
        "wires": [
            [
                "286ece6e0aa7c00a"
            ]
        ]
    },
    {
        "id": "100980fbbc169471",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 980,
        "wires": [
            [
                "35189fa29e1b5266"
            ]
        ]
    },
    {
        "id": "0335188612e0bba6",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1060,
        "wires": [
            [
                "c9e8867757cba76c"
            ]
        ]
    },
    {
        "id": "44a7a4abc8b6b905",
        "type": "change",
        "z": "71d2baa986138c38",
        "name": "convert boolean to string",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1140,
        "wires": [
            [
                "7554f21bcb7f3d50"
            ]
        ]
    },
    {
        "id": "7df90b03d93707dc",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay2/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 660,
        "wires": []
    },
    {
        "id": "9e8c3cd2793e3d86",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay3/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 740,
        "wires": []
    },
    {
        "id": "f41f8ae5aafb0aa3",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay4/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 820,
        "wires": []
    },
    {
        "id": "286ece6e0aa7c00a",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay5/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 900,
        "wires": []
    },
    {
        "id": "35189fa29e1b5266",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay6/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 980,
        "wires": []
    },
    {
        "id": "c9e8867757cba76c",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay7/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7554f21bcb7f3d50",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "shellies/shellyRelay8/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "298d23902efd2f29",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "300",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "3a4276384de21628",
                "26a02d69deb4de52",
                "c2414abee8e7f023",
                "5b9af5509ccb574d",
                "e47bcf64b1def248",
                "2dddd45930cb8759",
                "2530cbc2d5bd7588",
                "e1ac5fd143aea8c3"
            ]
        ]
    },
    {
        "id": "73828c6d930b6aa9",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "inject to sync with HB on startup",
        "info": "",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "3a4276384de21628",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get one",
        "func": "msg.payload = global.get(\"one\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 100,
        "wires": [
            [
                "2074e9d605439834"
            ]
        ]
    },
    {
        "id": "26a02d69deb4de52",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get two",
        "func": "msg.payload = global.get(\"two\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "f43809f3173a44bf"
            ]
        ]
    },
    {
        "id": "c2414abee8e7f023",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get three",
        "func": "msg.payload = global.get(\"three\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "c8efce5699d02327"
            ]
        ]
    },
    {
        "id": "5b9af5509ccb574d",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get four",
        "func": "msg.payload = global.get(\"four\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "f392f502296a6232"
            ]
        ]
    },
    {
        "id": "e47bcf64b1def248",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get five",
        "func": "msg.payload = global.get(\"five\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 260,
        "wires": [
            [
                "3735167f9f619201"
            ]
        ]
    },
    {
        "id": "2dddd45930cb8759",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get six",
        "func": "msg.payload = global.get(\"six\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "4a2c0ad9ea94e045"
            ]
        ]
    },
    {
        "id": "2530cbc2d5bd7588",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get seven",
        "func": "msg.payload = global.get(\"seven\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "deb408ae953cf4cc"
            ]
        ]
    },
    {
        "id": "e1ac5fd143aea8c3",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get eight",
        "func": "msg.payload = global.get(\"eight\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "3b8b7be9db74a220"
            ]
        ]
    },
    {
        "id": "6127d1f877b2751f",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Weight",
        "func": "msg.payload = global.get(\"Weight\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1140,
        "wires": [
            [
                "574c34b8b393d13d"
            ]
        ]
    },
    {
        "id": "b3fb9a4de43fa92a",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wseven",
        "func": "msg.payload = global.get(\"Wseven\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1060,
        "wires": [
            [
                "091a2ac70f1f4009"
            ]
        ]
    },
    {
        "id": "703314b88b9ed601",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wsix",
        "func": "msg.payload = global.get(\"Wsix\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 980,
        "wires": [
            [
                "e0177058c8cadf8e"
            ]
        ]
    },
    {
        "id": "513080f43eaa4da5",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wfive",
        "func": "msg.payload = global.get(\"Wfive\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 900,
        "wires": [
            [
                "704168d24a4fac79"
            ]
        ]
    },
    {
        "id": "8c7047560882a12a",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wfour",
        "func": "msg.payload = global.get(\"Wfour\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 820,
        "wires": [
            [
                "773190450a671ed4"
            ]
        ]
    },
    {
        "id": "e13621fce7de10cc",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wthree",
        "func": "msg.payload = global.get(\"Wthree\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 740,
        "wires": [
            [
                "f6d16398be364060"
            ]
        ]
    },
    {
        "id": "abb2ac075dc347b7",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wtwo",
        "func": "msg.payload = global.get(\"Wtwo\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 660,
        "wires": [
            [
                "fcb32d2be06ce675"
            ]
        ]
    },
    {
        "id": "0d48772851f9cb18",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get Wone",
        "func": "msg.payload = global.get(\"Wone\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 580,
        "wires": [
            [
                "fb19f56ead20dc2f"
            ]
        ]
    },
    {
        "id": "03d9faceef4a0c50",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "300",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 820,
        "wires": [
            [
                "0d48772851f9cb18",
                "abb2ac075dc347b7",
                "e13621fce7de10cc",
                "8c7047560882a12a",
                "513080f43eaa4da5",
                "703314b88b9ed601",
                "b3fb9a4de43fa92a",
                "6127d1f877b2751f"
            ]
        ]
    },
    {
        "id": "ea36229f0a795e0c",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "inject to sync with HB on startup",
        "info": "",
        "x": 790,
        "y": 860,
        "wires": []
    },
    {
        "id": "172d5b8f9c836ba3",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "a7ca589d0e044163"
            ]
        ]
    },
    {
        "id": "6b8e6b984c95174a",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "batt level",
        "func": "msg.topic = \"pkw/stat/battery/level\"\nmsg.payload = global.get(\"MainBattSoc\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1720,
        "wires": [
            [
                "55e769758107ec42"
            ]
        ]
    },
    {
        "id": "55e769758107ec42",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 810,
        "y": 1720,
        "wires": []
    },
    {
        "id": "61dda3368f80066f",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "batt stats",
        "func": "msg.topic = \"pkw/stat/battery/stats\"\nmsg.payload = {\n    \"volts\": global.get(\"MainBattVolt\"),\n    \"ampere\": global.get(\"MainBattAmps\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "55e769758107ec42"
            ]
        ]
    },
    {
        "id": "0d9da973f7f7c98e",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "send batt stats to homebridge every 5min",
        "info": "",
        "x": 420,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d11fa43b2ac9eec2",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/bms",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1580,
        "wires": [
            [
                "196da47b40565b0c"
            ]
        ]
    },
    {
        "id": "196da47b40565b0c",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get bms stats",
        "func": "msg = {\n    \"stats\":\"bms\",\n    \"payload\": {\n        \"BMSamps\":global.get(\"BMSamps\"),\n        \"BMScap\":global.get(\"BMScap\"),\n        \"BMScell1\":(global.get(\"BMScell1\")/1000).toFixed(2),\n        \"BMScell2\":(global.get(\"BMScell2\")/1000).toFixed(2),\n        \"BMScell3\":(global.get(\"BMScell3\")/1000).toFixed(2),\n        \"BMScell4\":(global.get(\"BMScell4\")/1000).toFixed(2),\n        \"BMSmaxcap\":global.get(\"BMSmaxcap\"),\n        \"BMSmaxvolt\":global.get(\"BMSmaxvolt\"),\n        \"BMSminvolt\":global.get(\"BMSminvolt\"),\n        \"BMSpower\":global.get(\"BMSpower\"),\n        \"BMSsoc\":global.get(\"BMSsoc\"),\n        \"BMStemp\":global.get(\"BMStemp\"),\n        \"BMSvolt\":global.get(\"BMSvolt\"),\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1580,
        "wires": [
            [
                "61bcef853ce1828c"
            ]
        ]
    },
    {
        "id": "61bcef853ce1828c",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/bms",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 710,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a7ca589d0e044163",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1720,
        "wires": [
            [
                "6b8e6b984c95174a",
                "61dda3368f80066f"
            ]
        ]
    },
    {
        "id": "45174b5ba9fe9885",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "Switch everything off (relays, w-relays, dimmers)",
        "info": "",
        "x": 240,
        "y": 2720,
        "wires": []
    },
    {
        "id": "be3321f07bcd1cca",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/cmnd/switchall/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2760,
        "wires": [
            [
                "c2d226a366a62010"
            ]
        ]
    },
    {
        "id": "c2d226a366a62010",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "set request for http API",
        "func": "if (msg.payload == \"off\" || msg.payload == \"false\") {\n    msg.url = \"http://127.0.0.1:1880/switchall/false\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2760,
        "wires": [
            [
                "c39f5c5fede7f3ea"
            ]
        ]
    },
    {
        "id": "c39f5c5fede7f3ea",
        "type": "http request",
        "z": "71d2baa986138c38",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "5ac9093b762dc035",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/stat/info",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1620,
        "wires": [
            [
                "e38d0f381033c354"
            ]
        ]
    },
    {
        "id": "e38d0f381033c354",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get info stats",
        "func": "msg = {\n    \"stats\":\"info\",\n    \"payload\": {\n        \"VanPi_Ctrl\":global.get(\"currentVersion\"),\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "4311fbbb451380ab"
            ]
        ]
    },
    {
        "id": "4311fbbb451380ab",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "pkw/tele/info",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 710,
        "y": 1620,
        "wires": []
    },
    {
        "id": "3a815abb3d709803",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1450,
        "y": 1620,
        "wires": []
    },
    {
        "id": "6067203d20e41750",
        "type": "link in",
        "z": "71d2baa986138c38",
        "name": "Mqtt in dimmytemps",
        "links": [
            "18b9fb11d95404fb"
        ],
        "x": 1175,
        "y": 1620,
        "wires": [
            [
                "74eb033bb302c0d2"
            ]
        ]
    },
    {
        "id": "74eb033bb302c0d2",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "hb active?",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    if (msg.dimmytemp1 != \"\") {\n        msg.payload = msg.dimmytemp1\n        msg.topic = \"pkw/dimmytemp1/temp\"\n        node.send(msg);\n    }\n    if (msg.dimmytemp2 != \"\") {\n        msg.payload = msg.dimmytemp2\n        msg.topic = \"pkw/dimmytemp2/temp\"\n        node.send(msg);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1620,
        "wires": [
            [
                "3a815abb3d709803"
            ]
        ]
    },
    {
        "id": "f238e55bb99086a1",
        "type": "mqtt in",
        "z": "71d2baa986138c38",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0a25611d0d28288e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 630,
        "y": 3060,
        "wires": [
            [
                "0ec017da42311a27"
            ]
        ]
    },
    {
        "id": "9c98d4eeebec09e6",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 3060,
        "wires": [
            [
                "b63e0a9225891825"
            ]
        ]
    },
    {
        "id": "4a2a646d20216668",
        "type": "inject",
        "z": "71d2baa986138c38",
        "name": "disconnect",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "x": 440,
        "y": 3020,
        "wires": [
            [
                "f238e55bb99086a1"
            ]
        ]
    },
    {
        "id": "0ec017da42311a27",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "get topics and respond",
        "func": "msg.function = msg.topic.split(\"/\")\nlet topic = msg.function[0]\nmsg.function = msg.function[1];\n\nif (msg.topic.includes(\"ans\") || msg.topic.includes(\"NRconnection\")) {\n    return null\n}\n\nif (msg.function == \"heat\" && (msg.payload == true || msg.payload == false)) {\n    msg.url = \"http://127.0.0.1:1880/heater/\" + msg.payload.toString()\n    msg.topic = topic + \"/heatans\"\n    msg.method = \"PUT\"\n    return msg\n}\n\n\nif (msg.payload.includes(\"dimmerId\")) {\n    let Donoff = \"\"\n    var split_colon = msg.payload.split(\":\")\n    Donoff = parseInt(split_colon[2].substring(0, msg.payload.length-1))\n    \n    msg.payload = msg.payload.split(\",\")\n    msg.payload = msg.payload[0].substring(13,msg.payload[0].length-1)\n    msg.url = \"http://127.0.0.1:1880/dimmer/\"+msg.payload+\"/\"+Donoff\n    msg.topic = topic + \"/dimmerans\"\n    msg.method =\"PUT\"\n    if (msg.payload == \"one\") {msg.payload=\"0\"}\n    else if (msg.payload == \"two\") {msg.payload=\"1\"}\n    else if (msg.payload == \"three\") {msg.payload=\"2\"}\n    else if (msg.payload == \"four\") {msg.payload=\"3\"}\n    else if (msg.payload == \"five\") {msg.payload=\"4\"}\n    else if (msg.payload == \"six\") {msg.payload=\"5\"}\n    else if (msg.payload == \"seven\") {msg.payload=\"6\"}\n    else if (msg.payload == \"eight\") {msg.payload=\"7\"}\n    msg.payload = \"dimmer\"+msg.payload\n    global.set(msg.payload, Donoff)\n    return msg\n}\n\nif (msg.payload.includes(\"wrelayId\")) {\n    var Wonoff = false\n    if (msg.payload.includes(\"false\")){\n        Wonoff = false\n    }\n    else if (msg.payload.includes(\"true\")){\n        Wonoff = true\n    }\n    msg.payload = msg.payload.split(\",\")\n    msg.payload = msg.payload[0].substring(13,msg.payload[0].length-1)\n    msg.url = \"http://127.0.0.1:1880/wrelay/\"+msg.payload+\"/\"+Wonoff\n    msg.topic = topic + \"/wrelayans\"\n    msg.method =\"PUT\"\n    msg.payload = \"W\"+msg.payload\n    global.set(msg.payload, Wonoff)\n    return msg\n}\n\nif (msg.payload.includes(\"relayId\")) {\n    var onoff = false\n    if (msg.payload.includes(\"false\")){\n        onoff = false\n    }\n    else if (msg.payload.includes(\"true\")){\n        onoff = true\n    }\n    msg.payload = msg.payload.split(\",\")\n    msg.payload = msg.payload[0].substring(12,msg.payload[0].length-1)\n    msg.url = \"http://127.0.0.1:1880/relay/\"+msg.payload+\"/\"+onoff\n    msg.topic = topic + \"/relayans\"\n    msg.method =\"PUT\"\n    global.set(msg.payload, onoff)\n    return msg\n}\n\nif (msg.function == \"batt\") {\n    msg.url = \"http://127.0.0.1:1880/batt\"\n    msg.topic = topic + \"/battans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"bms\") {\n    msg.url = \"http://127.0.0.1:1880/bms\"\n    msg.topic = topic + \"/bmsans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"conniot\") {\n    msg.url = \"http://127.0.0.1:1880/conniot\"\n    msg.topic = topic + \"/conniotans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"heat\") {\n    msg.url = \"http://127.0.0.1:1880/heater\"\n    msg.topic = topic + \"/heatans\"\n    msg.method =\"GET\"\n    return msg\n}\nif (msg.function == \"temp\") {\n    msg.url = \"http://127.0.0.1:1880/temp\"\n    msg.topic = topic + \"/tempans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"relay\") {\n    msg.url = \"http://127.0.0.1:1880/relay\"\n    msg.topic = topic + \"/relayans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"wrelay\") {\n    msg.url = \"http://127.0.0.1:1880/wrelay\"\n    msg.topic = topic + \"/wrelayans\"\n    msg.method =\"GET\"\n    return msg\n}\nif (msg.function == \"dimmer\") {\n    msg.url = \"http://127.0.0.1:1880/dimmer\"\n    msg.topic = topic + \"/dimmerans\"\n    msg.method =\"GET\"\n    return msg\n}\n\nif (msg.function == \"level\") {\n    msg.url = \"http://127.0.0.1:1880/level\"\n    msg.topic = topic + \"/levelans\"\n    msg.method =\"GET\"\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3060,
        "wires": [
            [
                "308d0d31393c73ea"
            ]
        ]
    },
    {
        "id": "308d0d31393c73ea",
        "type": "http request",
        "z": "71d2baa986138c38",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 450,
        "y": 3120,
        "wires": [
            [
                "8b717a49bf9bf770"
            ]
        ]
    },
    {
        "id": "8e40daaeb2a6fa46",
        "type": "mqtt out",
        "z": "71d2baa986138c38",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0a25611d0d28288e",
        "x": 890,
        "y": 3120,
        "wires": []
    },
    {
        "id": "fa6658a1901192d8",
        "type": "json",
        "z": "71d2baa986138c38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 770,
        "y": 3120,
        "wires": [
            [
                "8e40daaeb2a6fa46"
            ]
        ]
    },
    {
        "id": "4ec031ece6e24049",
        "type": "comment",
        "z": "71d2baa986138c38",
        "name": "Preparation to use a custom cloud MQTT Server",
        "info": "",
        "x": 540,
        "y": 2960,
        "wires": []
    },
    {
        "id": "b63e0a9225891825",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "set broker & pass",
        "func": "let broker =  \"\" // set broker\nlet username = \"\"  // set username\nlet password = \"\" // set password\nlet port = 8883 // or 1883\n\nmsg.action = \"connect\"\nmsg.broker = {\n    \"broker\": broker, \n    \"port\": 8883, \n    \"force\": true,\n    \"username\": username,\n    \"password\": password\n}\nnode.send(msg)\nmsg.action = \"subscribe\"\nmsg.topic = username + \"/#\" //set topic to subscribe to\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3060,
        "wires": [
            [
                "f238e55bb99086a1"
            ]
        ]
    },
    {
        "id": "8b717a49bf9bf770",
        "type": "function",
        "z": "71d2baa986138c38",
        "name": "check http ans",
        "func": "if (msg.payload.includes(\"<!DOCTYPE html>\")) {\n    return null\n}\nelse {\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 3120,
        "wires": [
            [
                "fa6658a1901192d8"
            ]
        ]
    },
    {
        "id": "ed79f12a.87ac3",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Phonenix Inverter",
        "func": "msg.payload = msg.payload.toString();\nmsg.payload = msg.payload.split(\"\\n\");\n\nmsg.payload = {\n    \"PID\": msg.payload[1].substring(4),\n    \"FW\": msg.payload[2].substring(3),\n    \"SER\": msg.payload[3].substring(5),\n    \"MODE\": msg.payload[4].substring(5),\n    \"CS\": msg.payload[5].substring(3),\n    \"AC_V\": parseFloat(msg.payload[6].substring(9)/100),\n    \"AC_I\": parseFloat(msg.payload[7].substring(9)/10),\n    \"Vin\": parseFloat(msg.payload[8].substring(2)/1000),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 380,
        "wires": [
            [
                "8269f666.7fd638",
                "1196f630.4fabda",
                "27fa1c85.f39654"
            ]
        ]
    },
    {
        "id": "9fdb2e33.f2421",
        "type": "link in",
        "z": "f3c72e93.fad02",
        "name": "Serial Connect Ve.direct",
        "links": [
            "ab8dbfe0.b4c1",
            "dcf120f2.3a0fc",
            "ddff7ce8.7cad2",
            "b97f6ab9c83a2c4a",
            "a541737f385d4565",
            "e1cafd6a1b405058",
            "788c0148719bd99c",
            "1abad3b522bc0cdb",
            "9a58f3a0ce2f303c",
            "6a7fd365793465ff",
            "1f60a35e099f02b6",
            "928bc0b2d6c6c62d"
        ],
        "x": 95,
        "y": 440,
        "wires": [
            [
                "a0781c97.42aca",
                "9b3e1b24.732198"
            ]
        ]
    },
    {
        "id": "a0781c97.42aca",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "search PID",
        "func": "\nmsg.pid = msg.payload.toString();\nmsg.pid = msg.pid.split(\"\\n\");\n\n\n\n\nmsg.pid = msg.pid[1].substring(4,10);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 440,
        "wires": [
            [
                "e59fa82dda4fdc1b",
                "a31e07f8c5078cc9",
                "014b4b49e2485f5c",
                "375b71c2677a9097",
                "8e57e2256d308cf7"
            ]
        ]
    },
    {
        "id": "39e7c8d1.ada598",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "4b3907bf.1686b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "AC Voltage",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "8269f666.7fd638",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "AC_V",
        "func": "msg.payload=msg.payload.AC_V;\nglobal.set(\"VE_AC_V\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 240,
        "wires": [
            [
                "39e7c8d1.ada598"
            ]
        ]
    },
    {
        "id": "8f9a082f.7bf378",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "4b3907bf.1686b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "AC Current",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "1196f630.4fabda",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "AC_I",
        "func": "msg.payload=msg.payload.AC_I;\nglobal.set(\"VE_AC_i\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "8f9a082f.7bf378"
            ]
        ]
    },
    {
        "id": "e5a00f4c.5aa3f",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "4b3907bf.1686b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vin",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "27fa1c85.f39654",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Vin",
        "func": "msg.payload=msg.payload.Vin;\nglobal.set(\"VE_Vin\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 320,
        "wires": [
            [
                "e5a00f4c.5aa3f"
            ]
        ]
    },
    {
        "id": "6e02359a.74d92c",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Smart Solar MPPT",
        "func": "msg.payload = msg.payload.toString();\nmsg.payload = msg.payload.split(\"\\n\");\n\nmsg.payload = {\n    \"PID\": msg.payload[1].substring(4),\n    \"FW\": msg.payload[2].substring(3),\n    \"SER\": msg.payload[3].substring(5),\n    \"Vbatt\": parseFloat(msg.payload[4].substring(2)/1000),\n    \"Current\": parseFloat(msg.payload[5].substring(2)),\n    \"PanelVolt\": parseFloat(msg.payload[6].substring(4)/1000),\n    \"PanelPower\": parseFloat(msg.payload[7].substring(4)),\n    \"Error\": msg.payload[10].substring(4),\n    \"Iload\": parseFloat(msg.payload[12].substring(3)),\n    \"kwhcounter\": parseFloat(msg.payload[13].substring(4)),\n    \"kwhcountertoday\": parseFloat(msg.payload[14].substring(4)),\n    \"maxPowerToday\": parseFloat(msg.payload[15].substring(4)),\n    \"kwhcounterYesterday\": parseFloat(msg.payload[16].substring(4)),\n    \"maxPowerYesterday\": parseFloat(msg.payload[17].substring(4))\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "454d399e.668218",
                "a6806580.6c7768",
                "ab5a1b9c.655a58",
                "9c82eea7.846e8"
            ]
        ]
    },
    {
        "id": "a355822d.33497",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "7bd243ed.9f706c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PanelVolt",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 420,
        "wires": []
    },
    {
        "id": "454d399e.668218",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "PanelVolt",
        "func": "msg.payload=msg.payload.PanelVolt;\nglobal.set(\"VE_PanelVolt\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 420,
        "wires": [
            [
                "a355822d.33497"
            ]
        ]
    },
    {
        "id": "23562fab.f0e18",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "7bd243ed.9f706c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PanelPower",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 460,
        "wires": []
    },
    {
        "id": "a6806580.6c7768",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "PanelPower",
        "func": "msg.payload=msg.payload.PanelPower;\nglobal.set(\"VE_PanelPower\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 460,
        "wires": [
            [
                "23562fab.f0e18"
            ]
        ]
    },
    {
        "id": "c3746840.b11f28",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "7bd243ed.9f706c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Battery Volt",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 500,
        "wires": []
    },
    {
        "id": "ab5a1b9c.655a58",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "BatteryVolt",
        "func": "msg.payload=msg.payload.Vbatt;\nglobal.set(\"VE_BatteryVolt\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 500,
        "wires": [
            [
                "c3746840.b11f28"
            ]
        ]
    },
    {
        "id": "a7336406.d04d28",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "",
        "func": "msg.payload={\"group\":{\"hide\":[\"Info_Victron_Inverter\",\"Info_Victron_SmartSolar\",\"Info_Victron_Shunt\"]}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "8b0c55f0.514648"
            ]
        ]
    },
    {
        "id": "fcea699a.ca4e98",
        "type": "inject",
        "z": "f3c72e93.fad02",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "a7336406.d04d28"
            ]
        ]
    },
    {
        "id": "8b0c55f0.514648",
        "type": "ui_ui_control",
        "z": "f3c72e93.fad02",
        "name": "",
        "events": "all",
        "x": 420,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "61ad70e.cdf839",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Shunt",
        "func": "msg.payload = msg.payload.toString();\nmsg.payload = msg.payload.split(\"\\n\");\n\nmsg.payload = {\n    \"PID\": msg.payload[1].substring(4),\n    \"Vbatt\":parseFloat(msg.payload[2].substring(2)/1000),\n    \"Vaux\": parseFloat(msg.payload[3].substring(2)),\n    \"Current\": parseFloat(msg.payload[4].substring(2)/1000),\n    \"Power\": parseFloat(msg.payload[5].substring(2)),\n    \"CE\": parseFloat(msg.payload[6].substring(3)/1000),\n    \"SOC\": parseFloat(msg.payload[7].substring(4)/10),\n    \"TTG\": parseFloat(msg.payload[8].substring(4)),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 500,
        "wires": [
            [
                "9a122059.ced38",
                "7d770282.c3b87c",
                "ba3f7de0.c0358",
                "24c9eec2.f47ae2",
                "507effe8.c2505",
                "fc04bea7.fa8b2",
                "8a24d208.9a8e9",
                "729cc57e1e32f632"
            ]
        ]
    },
    {
        "id": "b0bcdeff.c34af",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MainBattery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 600,
        "wires": []
    },
    {
        "id": "9a122059.ced38",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "MainBattery",
        "func": "msg.payload=msg.payload.Vbatt.toFixed(2);\nglobal.set(\"VE_Mainbattery\",msg.payload);\nglobal.set(\"BATTvolt\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 600,
        "wires": [
            [
                "b0bcdeff.c34af"
            ]
        ]
    },
    {
        "id": "7d770282.c3b87c",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Vaux",
        "func": "msg.payload=msg.payload.Vaux;\nglobal.set(\"VE_Aux\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 640,
        "wires": [
            [
                "d048c76a.576308"
            ]
        ]
    },
    {
        "id": "ba3f7de0.c0358",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Current",
        "func": "msg.payload=msg.payload.Current;\nglobal.set(\"VE_Current\",msg.payload);\nglobal.set(\"BATTamps\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 680,
        "wires": [
            [
                "6d3fef41.8faca"
            ]
        ]
    },
    {
        "id": "fc04bea7.fa8b2",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Consumed AMPHOurs",
        "func": "msg.payload=msg.payload.CE;\nglobal.set(\"VE_consumedAH\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 760,
        "wires": [
            [
                "98a00a4c.165978"
            ]
        ]
    },
    {
        "id": "37389301.e3768c",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Max Main VOLT",
        "func": "msg.payload=msg.payload.H8;\nglobal.set(\"VE_maxVolt\",0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 980,
        "wires": [
            [
                "b3ed2c8d.3179a"
            ]
        ]
    },
    {
        "id": "61daf104.145a3",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "MinVolt",
        "func": "msg.payload=msg.payload.H7;\nglobal.set(\"VE_minVolt\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1020,
        "wires": [
            [
                "37d14a3a.012196"
            ]
        ]
    },
    {
        "id": "24c9eec2.f47ae2",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "TimeToGo",
        "func": "msg.payload=msg.payload.TTG;\nif(msg.payload == -1)\nmsg.payload=\"charging\"\nglobal.set(\"VE_timetogo\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 840,
        "wires": [
            [
                "bee06e75.f9b53"
            ]
        ]
    },
    {
        "id": "d048c76a.576308",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "AuxChannel",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 640,
        "wires": []
    },
    {
        "id": "6d3fef41.8faca",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 680,
        "wires": []
    },
    {
        "id": "98a00a4c.165978",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Consumed Ah",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 760,
        "wires": []
    },
    {
        "id": "b3ed2c8d.3179a",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max Volt",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 980,
        "wires": []
    },
    {
        "id": "37d14a3a.012196",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Min Volt",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bee06e75.f9b53",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Time To Go",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 840,
        "wires": []
    },
    {
        "id": "9c82eea7.846e8",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "solarCurrent",
        "func": "msg.payload=msg.payload.Current;\nglobal.set(\"VE_solarCurrent\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 540,
        "wires": [
            [
                "8490c2c1.c7f9c"
            ]
        ]
    },
    {
        "id": "8490c2c1.c7f9c",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "7bd243ed.9f706c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Charge Current",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 540,
        "wires": []
    },
    {
        "id": "9b3e1b24.732198",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Check H Values",
        "func": "msg.h = msg.payload.toString();\nmsg.h = msg.h.split(\"\\n\");\nmsg.h = msg.h[1].substring(0,2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1020,
        "wires": [
            [
                "6a6689dd.b9d128"
            ]
        ]
    },
    {
        "id": "6a6689dd.b9d128",
        "type": "switch",
        "z": "f3c72e93.fad02",
        "name": "",
        "property": "h",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "H1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "9a7e9cd9.48382"
            ]
        ]
    },
    {
        "id": "9a7e9cd9.48382",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Shunt H values",
        "func": "msg.payload = msg.payload.toString();\nmsg.payload = msg.payload.split(\"\\n\");\n\nmsg.payload = {\n    \"H1\": parseFloat(msg.payload[1].substring(3)/1000),\n    \"H2\":parseFloat(msg.payload[2].substring(3)/1000),\n    \"H3\": msg.payload[3].substring(3),\n    \"H4\": parseFloat(msg.payload[4].substring(3)/1000),\n    \"H5\": parseFloat(msg.payload[5].substring(3)),\n    \"H6\": msg.payload[6].substring(3),\n    \"H7\":parseFloat(msg.payload[7].substring(3)/1000),\n    \"H8\":parseFloat(msg.payload[8].substring(3)/1000),\n    \"H9\": parseFloat(msg.payload[9].substring(3)/1000)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "37389301.e3768c",
                "61daf104.145a3"
            ]
        ]
    },
    {
        "id": "507effe8.c2505",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Power",
        "func": "msg.payload=msg.payload.Power;\nglobal.set(\"VE_Power\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 720,
        "wires": [
            [
                "fda27fb7.f65fd"
            ]
        ]
    },
    {
        "id": "fda27fb7.f65fd",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 720,
        "wires": []
    },
    {
        "id": "1c926150.7c008f",
        "type": "ui_text",
        "z": "f3c72e93.fad02",
        "group": "6ea26502.8c263c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SOC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 800,
        "wires": []
    },
    {
        "id": "28350f17.6ea84",
        "type": "comment",
        "z": "f3c72e93.fad02",
        "name": "globals",
        "info": "/////VE.direct\n//Inverter\nglobal.set(\"VE_AC_V\",0);\nglobal.set(\"VE_AC_i\",0);\nglobal.set(\"VE_Vin\",0);\n//SmartSolar\nglobal.set(\"VE_PanelVolt\",0);\nglobal.set(\"VE_PanelPower\",0);\nglobal.set(\"VE_BatteryVolt\",0);\nglobal.set(\"VE_solarCurrent\",0);\n//Shunt\nglobal.set(\"VE_Mainbattery\",0);\nglobal.set(\"VE_StarterBattery\",0);\nglobal.set(\"VE_Current\",0);\nglobal.set(\"VE_Power\",0);\nglobal.set(\"VE_consumedAH\",0);\nglobal.set(\"VE_SOC\",0);\nglobal.set(\"VE_maxVolt\",0);\nglobal.set(\"VE_minVolt\",0);\nglobal.set(\"VE_timetogo\",0);\n",
        "x": 1090,
        "y": 200,
        "wires": []
    },
    {
        "id": "8a24d208.9a8e9",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "SOC",
        "func": "msg.payload=msg.payload.SOC;\nglobal.set(\"VE_SOC\",msg.payload);\nglobal.set(\"BATTsoc\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 800,
        "wires": [
            [
                "1c926150.7c008f"
            ]
        ]
    },
    {
        "id": "d2e9d8ed.e192a8",
        "type": "inject",
        "z": "f3c72e93.fad02",
        "name": "every 2min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "50",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "6cf4cc07.9d5924"
            ]
        ]
    },
    {
        "id": "6cf4cc07.9d5924",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "reset globals",
        "func": "/////VE.direct\n//Inverter\nglobal.set(\"VE_AC_V\",\"\");\nglobal.set(\"VE_AC_i\",\"\");\nglobal.set(\"VE_Vin\",\"\");\n//SmartSolar\nglobal.set(\"VE_PanelVolt\",\"\");\nglobal.set(\"VE_PanelPower\",\"\");\nglobal.set(\"VE_BatteryVolt\",\"\");\nglobal.set(\"VE_solarCurrent\",\"\");\n//Shunt\nglobal.set(\"VE_Mainbattery\",\"\");\nglobal.set(\"VE_StarterBattery\",\"\");\nglobal.set(\"VE_Current\",\"\");\nglobal.set(\"VE_Power\",\"\");\nglobal.set(\"VE_consumedAH\",\"\");\nglobal.set(\"VE_SOC\",\"\");\nglobal.set(\"VE_maxVolt\",\"\");\nglobal.set(\"VE_minVolt\",\"\");\nglobal.set(\"VE_timetogo\",\"\");\n\nmsg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 140,
        "wires": [
            [
                "39e7c8d1.ada598",
                "8f9a082f.7bf378",
                "e5a00f4c.5aa3f",
                "a355822d.33497",
                "23562fab.f0e18",
                "c3746840.b11f28",
                "8490c2c1.c7f9c",
                "b0bcdeff.c34af",
                "d048c76a.576308",
                "6d3fef41.8faca",
                "fda27fb7.f65fd",
                "98a00a4c.165978",
                "1c926150.7c008f"
            ]
        ]
    },
    {
        "id": "4acdfe2f.c4724",
        "type": "debug",
        "z": "f3c72e93.fad02",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "8e57e2256d308cf7",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "test",
        "func": "msg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": [
            [
                "4acdfe2f.c4724"
            ]
        ]
    },
    {
        "id": "e59fa82dda4fdc1b",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "usbPortcheck",
        "func": "if(msg.pid != null) \nglobal.set(\"usbPortcheck_victron\", \"ok\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a31e07f8c5078cc9",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Check Phoenix Inverter",
        "func": "\n//https://git.pekaway.de/Karl/campercontrol/-/blob/master/ve%20direct/VE.Direct-Protocol-3.29.pdf\n\n\nif(msg.pid == \"0xA201\")\nreturn msg;\n\n\nif(msg.pid == \"0xA202\")\nreturn msg;\n\nif(msg.pid == \"0xA204\")\nreturn msg;\n\n\nif(msg.pid == \"0xA211\")\nreturn msg;\n\nif(msg.pid == \"0xA212\")\nreturn msg;\n\n\nif(msg.pid == \"0xA214\")\nreturn msg;\n\nif(msg.pid == \"0xA221\")\nreturn msg;\n\n\nif(msg.pid == \"0xA222\")\nreturn msg;\n\nif(msg.pid == \"0xA224\")\nreturn msg;\n\n\nif(msg.pid == \"0xA231\")\nreturn msg;\n\nif(msg.pid == \"0xA232\")\nreturn msg;\n\n\nif(msg.pid == \"0xA234\")\nreturn msg;\n\nif(msg.pid == \"0xA239\")\nreturn msg;\n\n\nif(msg.pid == \"0xA23A\")\nreturn msg;\n\nif(msg.pid == \"0xA23C\")\nreturn msg;\n\n\nif(msg.pid == \"0xA251\")\nreturn msg;\n\nif(msg.pid == \"0xA252\")\nreturn msg;\n\n\nif(msg.pid == \"0xA254\")\nreturn msg;\n\nif(msg.pid == \"0xA259\")\nreturn msg;\n\n\nif(msg.pid == \"0xA25A\")\nreturn msg;\n\nif(msg.pid == \"0xA25C\")\nreturn msg;\n\n\nif(msg.pid == \"0xA261\")\nreturn msg;\n\nif(msg.pid == \"0xA262\")\nreturn msg;\n\n\nif(msg.pid == \"0xA264\")\nreturn msg;\n\n\nif(msg.pid == \"0xA269\")\nreturn msg;\n\n\nif(msg.pid == \"0xA26A\")\nreturn msg;\n\nif(msg.pid == \"0xA26C\")\nreturn msg;\n\n\nif(msg.pid == \"0xA271\")\nreturn msg;\n\nif(msg.pid == \"0xA272\")\nreturn msg;\n\n\nif(msg.pid == \"0xA274\")\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "ed79f12a.87ac3"
            ]
        ]
    },
    {
        "id": "014b4b49e2485f5c",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Check Smart Solar",
        "func": "\n//https://git.pekaway.de/Karl/campercontrol/-/blob/master/ve%20direct/VE.Direct-Protocol-3.29.pdf\n\n\n//Solar MPPT \n\n\nif(msg.pid == \"0x0300\")\nreturn msg;\n\nif(msg.pid == \"0xA040\")\nreturn msg;\n\nif(msg.pid == \"0xA041\")\nreturn msg;\n\nif(msg.pid == \"0xA042\")\nreturn msg;\n\nif(msg.pid == \"0xA043\")\nreturn msg;\n\nif(msg.pid == \"0xA044\")\nreturn msg;\n\nif(msg.pid == \"0xA045\")\nreturn msg;\n\nif(msg.pid == \"0xA046\")\nreturn msg;\n\nif(msg.pid == \"0xA047\")\nreturn msg;\n\nif(msg.pid == \"0xA049\")\nreturn msg;\n\nif(msg.pid == \"0xA04A\")\nreturn msg;\n\nif(msg.pid == \"0xA04B\")\nreturn msg;\n\nif(msg.pid == \"0xA04C\")\nreturn msg;\n\nif(msg.pid == \"0xA04D\")\nreturn msg;\n\nif(msg.pid == \"0xA04E\")\nreturn msg;\n\nif(msg.pid == \"0xA04F\")\nreturn msg;\n\nif(msg.pid == \"0xA050\")\nreturn msg;\n\nif(msg.pid == \"0xA051\")\nreturn msg;\n\nif(msg.pid == \"0xA052\")\nreturn msg;\n\nif(msg.pid == \"0xA053\")\nreturn msg;\n\nif(msg.pid == \"0xA054\")\nreturn msg;\n\nif(msg.pid == \"0xA055\")\nreturn msg;\n\nif(msg.pid == \"0xA056\")\nreturn msg;\n\nif(msg.pid == \"0xA057\")\nreturn msg;\n\nif(msg.pid == \"0xA058\")\nreturn msg;\n\nif(msg.pid == \"0xA059\")\nreturn msg;\n\n\nif(msg.pid == \"0xA05A\")\nreturn msg;\n\nif(msg.pid == \"0xA05B\")\nreturn msg;\n\nif(msg.pid == \"0xA05C\")\nreturn msg;\n\nif(msg.pid == \"0xA05D\")\nreturn msg;\n\nif(msg.pid == \"0xA05F\")\nreturn msg;\n\nif(msg.pid == \"0xA060\")\nreturn msg;\n\nif(msg.pid == \"0xA061\")\nreturn msg;\n\nif(msg.pid == \"0xA062\")\nreturn msg;\n\nif(msg.pid == \"0xA062\")\nreturn msg;\n\nif(msg.pid == \"0xA063\")\nreturn msg;\n\nif(msg.pid == \"0xA064\")\nreturn msg;\n\nif(msg.pid == \"0xA064\")\nreturn msg;\n\n\nif(msg.pid == \"0xA066\")\nreturn msg;\n\nif(msg.pid == \"0xA067\")\nreturn msg;\n\nif(msg.pid == \"0xA068\")\nreturn msg;\n\nif(msg.pid == \"0xA069\")\nreturn msg;\n\nif(msg.pid == \"0xA06A\")\nreturn msg;\n\nif(msg.pid == \"0xA06B\")\nreturn msg;\n\nif(msg.pid == \"0xA06C\")\nreturn msg;\n\nif(msg.pid == \"0xA06D\")\nreturn msg;\n\nif(msg.pid == \"0xA06E\")\nreturn msg;\n\nif(msg.pid == \"0xA06F\")\nreturn msg;\n\nif(msg.pid == \"0xA070\")\nreturn msg;\n\nif(msg.pid == \"0xA071\")\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 440,
        "wires": [
            [
                "6e02359a.74d92c"
            ]
        ]
    },
    {
        "id": "375b71c2677a9097",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Check SHUNT ",
        "func": "//https://git.pekaway.de/Karl/campercontrol/-/blob/master/ve%20direct/VE.Direct-Protocol-3.29.pdf\n//Smart Shunt 500\n\nif(msg.pid == \"0xA389\")\nreturn msg;\n\n//BMV??? not tested yet\nif(msg.pid == \"0x203\")\nreturn msg;\n\n//BMV??? not tested yet\nif(msg.pid == \"0x204\")\nreturn msg;\n\n//BMV??? not tested yet\nif(msg.pid == \"0x204\")\nreturn msg;\n\n//BMV??? not tested yet\nif(msg.pid == \"0xA381\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 500,
        "wires": [
            [
                "61ad70e.cdf839"
            ]
        ]
    },
    {
        "id": "77a94c9aaa2e1eab",
        "type": "ui_ui_control",
        "z": "f3c72e93.fad02",
        "name": "",
        "x": 1340,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "dd0f73883adf319e",
        "type": "function",
        "z": "f3c72e93.fad02",
        "name": "Show in INFO",
        "func": "msg.payload = {\"group\":{\"show\":[\"Info_Victron_Shunt\"]}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 880,
        "wires": [
            [
                "77a94c9aaa2e1eab"
            ]
        ]
    },
    {
        "id": "729cc57e1e32f632",
        "type": "delay",
        "z": "f3c72e93.fad02",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 920,
        "y": 880,
        "wires": [
            [
                "dd0f73883adf319e"
            ]
        ]
    },
    {
        "id": "e49629f91f0f9ee1",
        "type": "inject",
        "z": "f3c72e93.fad02",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 940,
        "wires": [
            [
                "dd0f73883adf319e"
            ]
        ]
    },
    {
        "id": "b6f2fc46.ef14a",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get available Wifi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "b06d7c1f.367c6"
            ]
        ]
    },
    {
        "id": "28d3c615.beb8da",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/APtoNonAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 140,
        "wires": [
            [
                "a08b10dd.3db4",
                "b07c7f89c9746918"
            ],
            [],
            []
        ]
    },
    {
        "id": "f4332868.4ef4a8",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "8658c804.bdab38"
            ]
        ]
    },
    {
        "id": "b06d7c1f.367c6",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "msg.payload = \"Raspi will close the Access point, scan available Networks, reboot and then reopen the Access Point. Please wait ~2min, reconnect to the Access Point and then refresh this site!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "f4332868.4ef4a8"
            ]
        ]
    },
    {
        "id": "8658c804.bdab38",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "check pop up",
        "func": "if (msg.payload == \"Ok!\") {\n    return [msg, null]\n}\n\nif (msg.payload == \"Cancel\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 140,
        "wires": [
            [
                "28d3c615.beb8da"
            ],
            []
        ]
    },
    {
        "id": "b7db3f92.dfaf",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/NonAPtoAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1770,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e60b12c1.93bb3",
        "type": "inject",
        "z": "8a3d660f.83b628",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "ef049cd6.cc084",
                "2dfcb808.8ed9b8"
            ]
        ]
    },
    {
        "id": "9a5d37ea.dd91f8",
        "type": "file in",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/WifiScanResult.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "31fa6218.3d62ae"
            ]
        ]
    },
    {
        "id": "a010e67b.bc3368",
        "type": "ui_dropdown",
        "z": "8a3d660f.83b628",
        "name": "wifis dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select Wifi",
        "group": "b6314699.049798",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1120,
        "y": 260,
        "wires": [
            [
                "ca0a9a83.2462c8"
            ]
        ]
    },
    {
        "id": "31fa6218.3d62ae",
        "type": "split",
        "z": "8a3d660f.83b628",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "e46a940.4a84a7"
            ]
        ]
    },
    {
        "id": "e46a940.4a84a7",
        "type": "join",
        "z": "8a3d660f.83b628",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "fe4d7783.e4f968"
            ]
        ]
    },
    {
        "id": "fe4d7783.e4f968",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "",
        "func": "msg.options = []\n\nfor (var i = 0; i < msg.payload.length-1; i++) {\n    msg.options.push(msg.payload[i])  \n}    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 260,
        "wires": [
            [
                "a010e67b.bc3368"
            ]
        ]
    },
    {
        "id": "ef049cd6.cc084",
        "type": "change",
        "z": "8a3d660f.83b628",
        "name": "set payload = \"\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 260,
        "wires": [
            [
                "9a5d37ea.dd91f8"
            ]
        ]
    },
    {
        "id": "223ba7f5.582128",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1560,
        "y": 100,
        "wires": [
            [
                "b7db3f92.dfaf"
            ]
        ]
    },
    {
        "id": "fd96a230.0cc41",
        "type": "ui_text",
        "z": "8a3d660f.83b628",
        "group": "b6314699.049798",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Wifi list updated: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "a08b10dd.3db4",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "date > pekaway/wifiUpdated.txt",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1180,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2dfcb808.8ed9b8",
        "type": "file in",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/wifiUpdated.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 310,
        "y": 300,
        "wires": [
            [
                "fd96a230.0cc41"
            ]
        ]
    },
    {
        "id": "1cb824ed.29708b",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "prompt",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1450,
        "y": 260,
        "wires": [
            [
                "bd7a253e.3527e8",
                "3227264448d984e9"
            ]
        ]
    },
    {
        "id": "ca0a9a83.2462c8",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "flow.set(\"newWifiSSID\", msg.payload);\nmsg.payload = \"Connecting to '\" + flow.get(\"newWifiSSID\") + \"'. Please enter the password below. (Remember that this site will be accessible only via the new network connection!). \\n If no new IP-address can be obtained after 20s (e.g. wrong password) Raspi will switch back to AP-mode.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 260,
        "wires": [
            [
                "1cb824ed.29708b"
            ]
        ]
    },
    {
        "id": "bd7a253e.3527e8",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "var psk = msg.payload\nvar wifi = flow.get(\"newWifiSSID\");\nflow.set(\"newPSK\", psk)\n\nif (msg.payload != \"Cancel\" && msg.payload != \"\") {\n    msg.payload = \"echo \\'\" + 'network={\\n ssid=\\\"'+ wifi + '\\\"\\n key_mgmt=WPA-PSK\\n psk=\\\"' + psk + '\\\" \\n}' + '\\'' + ' > pekaway/newWifi.txt'\n    return msg\n}\n\nif (msg.payload == \"Cancel\") {\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 260,
        "wires": [
            [
                "83968746.6e18f8"
            ]
        ]
    },
    {
        "id": "83968746.6e18f8",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "newWifi.txt",
        "x": 1790,
        "y": 260,
        "wires": [
            [
                "1d830af8.07ead5"
            ],
            [],
            []
        ]
    },
    {
        "id": "1d830af8.07ead5",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/changeWPA.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "append wpa_supplicant",
        "x": 1990,
        "y": 260,
        "wires": [
            [
                "25a044f3.9dd52c"
            ],
            [],
            []
        ]
    },
    {
        "id": "25a044f3.9dd52c",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo pekaway/APtoNonAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2290,
        "y": 260,
        "wires": [
            [
                "dd5daf53.77257"
            ],
            [],
            []
        ]
    },
    {
        "id": "2a5ab3e9.378ffc",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/NonAPtoAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 890,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3d458c8.9c6f874",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Switch to Access Point mode",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "f3d4231a.c6aa1"
            ]
        ]
    },
    {
        "id": "559b959c.2f63fc",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "77a907a4.561b68"
            ]
        ]
    },
    {
        "id": "f3d4231a.c6aa1",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "msg.payload = \"Raspi needs to reboot to open the Access Point! Please stand by!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 540,
        "wires": [
            [
                "559b959c.2f63fc"
            ]
        ]
    },
    {
        "id": "77a907a4.561b68",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "if (msg.payload == \"Ok!\") {\n    global.set(\"accesspoint\", \"active\")\n    msg.payload = \"active\"\n    return [msg, null]\n}\n\nif (msg.payload == \"Cancel\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 540,
        "wires": [
            [
                "2a5ab3e9.378ffc",
                "a529f61f833bcf84",
                "054d7c59f50a2d10"
            ],
            []
        ]
    },
    {
        "id": "99635a96.6fb2b8",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip address wlan0",
        "x": 1730,
        "y": 560,
        "wires": [
            [
                "4ff4fc96.1156f4"
            ],
            [],
            []
        ]
    },
    {
        "id": "fa1101f6.e8d0a",
        "type": "inject",
        "z": "8a3d660f.83b628",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1370,
        "y": 560,
        "wires": [
            [
                "9bb95617916b7de6"
            ]
        ]
    },
    {
        "id": "4f97f124.c42f7",
        "type": "comment",
        "z": "8a3d660f.83b628",
        "name": "if no ip address after 20s after reboot or network change, change back to ap-mode",
        "info": "",
        "x": 2020,
        "y": 520,
        "wires": []
    },
    {
        "id": "dd5daf53.77257",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1490,
        "y": 520,
        "wires": [
            [
                "99635a96.6fb2b8"
            ]
        ]
    },
    {
        "id": "4ff4fc96.1156f4",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "",
        "func": "if (msg.payload == \"\"){\n    flow.set(\"wlan0ip\", msg.payload)\n    return [msg, null, null]\n}\nelse if (msg.payload.substring(0, 8) == \"169.254.\"){\n    flow.set(\"wlan0ip\", msg.payload)\n    return [null, msg, null]\n}\nelse {\n    flow.set(\"wlan0ip\", msg.payload)\n        if (msg.payload.trim() == \"192.168.4.1\") {\n            global.set(\"accesspoint\", \"active\")\n            msg.payload = \"active\"\n        }\n        else {\n            global.set(\"accesspoint\", \"inactive\")\n            msg.payload = \"inactive\"\n        }\n    return [null,null,  msg]\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 560,
        "wires": [
            [
                "d3752dc9b570b187"
            ],
            [
                "1f726c10.09c6b4"
            ],
            [
                "fafbe6dc0a8ed03c",
                "1870ec7f583c94a4",
                "90136cedd9633fd9"
            ]
        ]
    },
    {
        "id": "c3d1336b.f41b8",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/NonAPtoAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2570,
        "y": 580,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4d643b95.fe8c54",
        "type": "inject",
        "z": "8a3d660f.83b628",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2040,
        "y": 220,
        "wires": [
            [
                "25a044f3.9dd52c"
            ]
        ]
    },
    {
        "id": "f90dc650.fe5cc8",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo pekaway/scanWifi.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1340,
        "y": 100,
        "wires": [
            [
                "223ba7f5.582128"
            ],
            [],
            []
        ]
    },
    {
        "id": "8e28d9af.839bc8",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn off Access Point",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "c2e0e182.70896"
            ]
        ]
    },
    {
        "id": "8dd18cd4.224ad",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "topic": "",
        "name": "show pop up",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "936893b9.2049f"
            ]
        ]
    },
    {
        "id": "c2e0e182.70896",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "msg.payload = \"Once turned off, you will not be able to connect via Wifi anymore if there are no saved Wifi-Networks! \\nPlease proceed with caution!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 620,
        "wires": [
            [
                "8dd18cd4.224ad"
            ]
        ]
    },
    {
        "id": "936893b9.2049f",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "if (msg.payload == \"Ok!\") {\n    global.set(\"accesspoint\", \"inactive\")\n    msg.payload = \"inactive\"\n    return [msg, null]\n}\n\nif (msg.payload == \"Cancel\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 620,
        "wires": [
            [
                "79fa1251.6a96fc",
                "a529f61f833bcf84",
                "054d7c59f50a2d10"
            ],
            []
        ]
    },
    {
        "id": "79fa1251.6a96fc",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo pekaway/APtoNonAP.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 910,
        "y": 620,
        "wires": [
            [
                "dd5daf53.77257"
            ],
            [],
            []
        ]
    },
    {
        "id": "1f726c10.09c6b4",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2130,
        "y": 620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "768d189f7517ac29",
        "type": "inject",
        "z": "8a3d660f.83b628",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 700,
        "wires": [
            [
                "4d6ec85fd218da09",
                "50f839016486796d"
            ]
        ]
    },
    {
        "id": "2313f0517cddc023",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "get RPI serial",
        "x": 580,
        "y": 700,
        "wires": [
            [
                "e22e0de9e2df13e0",
                "efb80e677df96f5f",
                "5b63900be796379f"
            ],
            [],
            []
        ]
    },
    {
        "id": "4d6ec85fd218da09",
        "type": "file in",
        "z": "8a3d660f.83b628",
        "name": "firstboot?",
        "filename": "pekaway/firstboot",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 270,
        "y": 700,
        "wires": [
            [
                "07ff6e2dc5628ace"
            ]
        ]
    },
    {
        "id": "07ff6e2dc5628ace",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "",
        "func": "if (msg.payload.includes(\"no\")) {\nreturn null;\n}\nelse if (msg.payload.includes(\"yes\")) {\n    global.set(\"BatteryDataDelivery\", \"\")\n    msg.hostkey = \"yes\"\n    var max = Math.floor(Math.random() * (13 - 11 + 1)) + 11\n    msg.payload = \"cat /sys/firmware/devicetree/base/serial-number | cut -c 9-\" + max\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 700,
        "wires": [
            [
                "2313f0517cddc023",
                "f188d381d993594b",
                "608493ade5b607d6",
                "7390bfb1e76d0b4f"
            ]
        ]
    },
    {
        "id": "f69d8a5e71f0ba40",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/firstboot",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1030,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e22e0de9e2df13e0",
        "type": "change",
        "z": "8a3d660f.83b628",
        "name": "set firstboot= \"no\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "no",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 680,
        "wires": [
            [
                "f69d8a5e71f0ba40"
            ]
        ]
    },
    {
        "id": "efb80e677df96f5f",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "set SSID",
        "func": "msg.payload = msg.payload.trim()\nmsg.shuffled = msg.payload.split('').sort(function () { return 0.5 - Math.random() }).join('');\nvar SSID = \"ssid=VanPiControl_\" + msg.shuffled;\nvar WPA = \"wpa_passphrase=pekawayfetzt\"\nmsg.payload = \"sudo sed -i 's/^.*ssid=.*$/\" + SSID + \"/' /etc/hostapd/hostapd.conf && sudo sed -i 's/^.*wpa_passphrase=.*$/\" + WPA + \"/' /etc/hostapd/hostapd.conf\"\nnode.send([msg, null]);\n\nglobal.set(\"ssid\", SSID);\nvar ssid = global.get(\"ssid\")\nglobal.set(\"wpa\", \"pekawayfetzt\")\nvar wpa = \"wpa_passphrase=\" + global.get(\"wpa\");\nmsg.payload = { \"ssid\": ssid, \"wpa\": wpa };\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 720,
        "wires": [
            [
                "6ecb6d9e88d97d72"
            ],
            [
                "2679bc97f8d56b11"
            ]
        ]
    },
    {
        "id": "6ecb6d9e88d97d72",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "set new ssid",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "a93d8d9ca11ff112"
            ],
            [],
            []
        ]
    },
    {
        "id": "9e6d9ca207e47ece",
        "type": "comment",
        "z": "8a3d660f.83b628",
        "name": "set AP ssid on first boot",
        "info": "",
        "x": 160,
        "y": 660,
        "wires": []
    },
    {
        "id": "2e2c05fbc6d3022a",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo systemctl restart hostapd dnsmasq",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "restart hostapd dnsmasq",
        "x": 1390,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2679bc97f8d56b11",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/wpasettings",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b3c32f7e6be8edf6",
        "type": "link in",
        "z": "8a3d660f.83b628",
        "name": "wifilistUpdated",
        "links": [
            "6ec4d1a3adbefe7a"
        ],
        "x": 95,
        "y": 300,
        "wires": [
            [
                "2dfcb808.8ed9b8"
            ]
        ]
    },
    {
        "id": "a93d8d9ca11ff112",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 720,
        "wires": [
            [
                "2e2c05fbc6d3022a"
            ]
        ]
    },
    {
        "id": "b07c7f89c9746918",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1110,
        "y": 100,
        "wires": [
            [
                "f90dc650.fe5cc8"
            ]
        ]
    },
    {
        "id": "bfc83edf4ad97cf8",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "get mac",
        "func": "msg.mac = msg.payload.toUpperCase()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 920,
        "wires": [
            [
                "b291135a2213c04a"
            ]
        ]
    },
    {
        "id": "b291135a2213c04a",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "shuf -i 10000000-65000000 -n 1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "generate random code",
        "x": 980,
        "y": 920,
        "wires": [
            [
                "a25ae62d19c60fbd"
            ],
            [],
            []
        ]
    },
    {
        "id": "a25ae62d19c60fbd",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "get code and set command",
        "func": "msg.code = msg.payload.substring(0,3)+'-'+msg.payload.substring(3,5)+'-'+msg.payload.substring(5,8)\nmsg.mac = msg.mac.substring(0, msg.mac.length-1)\n\nmsg.payload = \"sudo cp /var/lib/homebridge/config.json /var/lib/homebridge/config_backup.json && cp /var/lib/homebridge/config.json pekaway/homebridge_config1.json && jq '.bridge.username |= \\\"\"+msg.mac+\"\\\"' pekaway/homebridge_config1.json > pekaway/homebridge_config2.json && jq '.bridge.pin |= \\\"\"+msg.code+\"\\\"' pekaway/homebridge_config2.json > pekaway/homebridge_config.json\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 920,
        "wires": [
            [
                "181e6678b916ca0d"
            ]
        ]
    },
    {
        "id": "b584b42f30021cc4",
        "type": "comment",
        "z": "8a3d660f.83b628",
        "name": "HOMEBRIDGE on first boot get eth0 mac and generate pin code, then restart homebridge",
        "info": "",
        "x": 370,
        "y": 800,
        "wires": []
    },
    {
        "id": "a4c801f8a4318a8a",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "cp /var/lib/homebridge/config.json pekaway/homebridge_config.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy homebridge config",
        "x": 390,
        "y": 920,
        "wires": [
            [
                "dd539ac7a7305639"
            ],
            [],
            []
        ]
    },
    {
        "id": "181e6678b916ca0d",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "generate new homebridge config file",
        "x": 1510,
        "y": 920,
        "wires": [
            [
                "bfdbb6f47132d73b"
            ],
            [],
            []
        ]
    },
    {
        "id": "ddb2b533cdd8dd8a",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2070,
        "y": 920,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bfdbb6f47132d73b",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "copy new config and restart homebridge",
        "func": "msg.payload = \"sudo cp pekaway/homebridge_config.json /var/lib/homebridge/config.json && sudo systemctl restart homebridge.service\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 920,
        "wires": [
            [
                "ddb2b533cdd8dd8a"
            ]
        ]
    },
    {
        "id": "f188d381d993594b",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 920,
        "wires": [
            [
                "a4c801f8a4318a8a"
            ]
        ]
    },
    {
        "id": "dd539ac7a7305639",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "openssl rand -hex 6 | sed 's/\\(..\\)/\\1:/g; s/:$//'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "get random mac",
        "x": 620,
        "y": 920,
        "wires": [
            [
                "bfc83edf4ad97cf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "8bba605cd01e680b",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo raspi-config --expand-rootfs",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "expand filesystem",
        "x": 370,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "608493ade5b607d6",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 980,
        "wires": [
            [
                "8bba605cd01e680b"
            ]
        ]
    },
    {
        "id": "37027edae796f708",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 21,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset Homebridge",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "0c9dfa779c9b640e"
            ]
        ]
    },
    {
        "id": "71d6a54b65b3b3d3",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "bb7e4c66fdfe07e0"
            ]
        ]
    },
    {
        "id": "0c9dfa779c9b640e",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "msg.payload = \"This will reset Homebridge access data, you will have to remove this instance from your Apple Home and add it again!\" \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 860,
        "wires": [
            [
                "71d6a54b65b3b3d3"
            ]
        ]
    },
    {
        "id": "bb7e4c66fdfe07e0",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "pop up",
        "func": "if (msg.payload == \"Ok!\") {\n    return [msg, null]\n}\n\nif (msg.payload == \"Cancel\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 860,
        "wires": [
            [
                "a4c801f8a4318a8a",
                "94e6b47e378d1a11"
            ],
            []
        ]
    },
    {
        "id": "b1f66d75b1b7b6d2",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3227264448d984e9",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "connect notification",
        "func": "var wifi = flow.get(\"newWifiSSID\")\n\nif (msg.payload != \"Cancel\" && msg.payload != \"\") {\n    msg.payload = \"System will now try to connect Wifi: \" + wifi;\n    return msg\n}\n\nif (msg.payload == \"Cancel\") {\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 220,
        "wires": [
            [
                "b1f66d75b1b7b6d2"
            ]
        ]
    },
    {
        "id": "f466a3bb3fc1964f",
        "type": "link in",
        "z": "8a3d660f.83b628",
        "name": "switch to access point",
        "links": [
            "8adef63a8cf50849"
        ],
        "x": 705,
        "y": 500,
        "wires": [
            [
                "2a5ab3e9.378ffc"
            ]
        ]
    },
    {
        "id": "7390bfb1e76d0b4f",
        "type": "delay",
        "z": "8a3d660f.83b628",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "b82da1c043d34bcf",
                "ca4d108deff4e5cb",
                "011fdec6e6c8df85",
                "60a4e0412c5d273b",
                "0ddf664fa0d5ea69",
                "3b9c9cb9a173d445",
                "389c27845925dc9c",
                "4e277a27d7065ff8",
                "61efd6e53d6ef6c7"
            ]
        ]
    },
    {
        "id": "3b7d1b4c32c82915",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer0",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "b82da1c043d34bcf",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "dimmer values",
        "func": "msg.payload=0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1400,
        "wires": [
            [
                "3b7d1b4c32c82915",
                "e629e6ba28409f2a",
                "52e42b28f4dc0857",
                "7b5776a1a2df05cc",
                "b4b3f555b312372a",
                "2630976cc15cd6f1",
                "85faec63bbce2594",
                "8d508dd416617892"
            ]
        ]
    },
    {
        "id": "e629e6ba28409f2a",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer1",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "52e42b28f4dc0857",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer2",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "7b5776a1a2df05cc",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer3",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b3f555b312372a",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer4",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "2630976cc15cd6f1",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer5",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "85faec63bbce2594",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer6",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "8d508dd416617892",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/dimmer7",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "6851cc7af40d5e52",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer0",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "ca4d108deff4e5cb",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer0",
        "func": "msg.payload=\"Dimmer 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "6851cc7af40d5e52"
            ]
        ]
    },
    {
        "id": "bb2f691e3e9f752e",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer1",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "2fd58a3db02a3d72",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer2",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "aac7df75f4fd5271",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer3",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba6d0fee8933165",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer4",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "48e7ca1f92a459c8",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer5",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "f961d33732b82ae7",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer6",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "1e51b615a12d1829",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/Ndimmer7",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "011fdec6e6c8df85",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer1",
        "func": "msg.payload=\"Dimmer 2\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "bb2f691e3e9f752e"
            ]
        ]
    },
    {
        "id": "60a4e0412c5d273b",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer2",
        "func": "msg.payload=\"Dimmer 3\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1160,
        "wires": [
            [
                "2fd58a3db02a3d72"
            ]
        ]
    },
    {
        "id": "0ddf664fa0d5ea69",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer3",
        "func": "msg.payload=\"Dimmer 4\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1200,
        "wires": [
            [
                "aac7df75f4fd5271"
            ]
        ]
    },
    {
        "id": "3b9c9cb9a173d445",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer4",
        "func": "msg.payload=\"Dimmer 5\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1240,
        "wires": [
            [
                "7ba6d0fee8933165"
            ]
        ]
    },
    {
        "id": "389c27845925dc9c",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer5",
        "func": "msg.payload=\"Dimmer 6\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "48e7ca1f92a459c8"
            ]
        ]
    },
    {
        "id": "4e277a27d7065ff8",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer6",
        "func": "msg.payload=\"Dimmer 7\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "f961d33732b82ae7"
            ]
        ]
    },
    {
        "id": "61efd6e53d6ef6c7",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "Ndimmer7",
        "func": "msg.payload=\"Dimmer 8\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "1e51b615a12d1829"
            ]
        ]
    },
    {
        "id": "e15a294d23a77fb6",
        "type": "comment",
        "z": "8a3d660f.83b628",
        "name": "set dimmer names and values on first boot",
        "info": "",
        "x": 460,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d3752dc9b570b187",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo ifconfig eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip address eth0",
        "x": 2140,
        "y": 560,
        "wires": [
            [
                "440efab7255bcba3"
            ],
            [],
            []
        ]
    },
    {
        "id": "440efab7255bcba3",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "",
        "func": "if (msg.payload == \"\"){\n    flow.set(\"eth0ip\", msg.payload)\n        if (flow.get(\"wlan0ip\").trim() == \"192.168.4.1\") {\n            global.set(\"accesspoint\", \"active\")\n            msg.payload = \"active\"\n        }\n        else {\n            global.set(\"accesspoint\", \"inactive\")\n            msg.payload = \"inactive\"\n        }\n    return [msg, null, null]\n}\nelse if (msg.payload == \"169.254.136.181/\"){\n    flow.set(\"eth0ip\", msg.payload)\n    return [null, msg, null]\n}\nelse {\n    flow.set(\"eth0ip\", msg.payload)\n    global.set(\"accesspoint\", \"active\")\n    return [null,null,  msg]\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 560,
        "wires": [
            [
                "c3d1336b.f41b8",
                "3ac8d71adc5e5621"
            ],
            [],
            []
        ]
    },
    {
        "id": "fafbe6dc0a8ed03c",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "connect notification",
        "func": "if (flow.get(\"reboot\") == true) {\n    flow.set(\"reboot\", false)\n    return null\n}\nelse if (msg.payload.trim() == \"192.168.4.1\") {\n    flow.set(\"reboot\", false)\n    return null\n}\nelse {\n    var wifiSSID = flow.get(\"manualwifiSSID\") == undefined ? flow.get(\"newWifiSSID\") : flow.get(\"manualwifSSID\")\n    var wifiSSID = flow.get(\"newWifiSSID\") == undefined ? flow.get(\"manualwifSSID\") : flow.get(\"newWifiSSID\")\n\n    msg.payload = \"successfully connected to '\" + wifiSSID + \"' with IP \" + msg.payload\n    flow.set(\"reboot\", false)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 680,
        "wires": [
            [
                "225df001dd1fcf72"
            ]
        ]
    },
    {
        "id": "225df001dd1fcf72",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2310,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "9bb95617916b7de6",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "reboot = true",
        "func": "flow.set(\"reboot\", true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 560,
        "wires": [
            [
                "99635a96.6fb2b8"
            ]
        ]
    },
    {
        "id": "a529f61f833bcf84",
        "type": "ui_text",
        "z": "8a3d660f.83b628",
        "group": "b6314699.049798",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Access Point: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 640,
        "y": 580,
        "wires": []
    },
    {
        "id": "054d7c59f50a2d10",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/accesspoint",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 880,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "50f839016486796d",
        "type": "file in",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/accesspoint",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 220,
        "y": 580,
        "wires": [
            [
                "cbc9f26d97acc9ba"
            ]
        ]
    },
    {
        "id": "cbc9f26d97acc9ba",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "active?",
        "func": "if (msg.payload == \"true\"){\n    global.set(\"accesspoint\", \"active\")\n    msg.payload = \"active\"\n}\nelse if (msg.payload == \"false\"){\n    global.set(\"accesspoint\", \"inactive\")\n    msg.payload = \"inactive\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 580,
        "wires": [
            [
                "a529f61f833bcf84"
            ]
        ]
    },
    {
        "id": "1870ec7f583c94a4",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/accesspoint",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2140,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3ac8d71adc5e5621",
        "type": "file",
        "z": "8a3d660f.83b628",
        "name": "",
        "filename": "pekaway/accesspoint",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2560,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "90136cedd9633fd9",
        "type": "link out",
        "z": "8a3d660f.83b628",
        "name": "txtAPout",
        "links": [
            "b0eff2df4db22fe4"
        ],
        "x": 2055,
        "y": 760,
        "wires": []
    },
    {
        "id": "b0eff2df4db22fe4",
        "type": "link in",
        "z": "8a3d660f.83b628",
        "name": "txtAPin",
        "links": [
            "90136cedd9633fd9"
        ],
        "x": 475,
        "y": 500,
        "wires": [
            [
                "a529f61f833bcf84"
            ]
        ]
    },
    {
        "id": "36a3b99b9c591983",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1050,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5b63900be796379f",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "generate new ssh host key",
        "func": "if (msg.hostkey == \"yes\") {\n    msg.payload = \"sudo rm /etc/ssh/ssh_host* && sudo ssh-keygen -A && sudo systemctl restart sshd\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 800,
        "wires": [
            [
                "36a3b99b9c591983"
            ]
        ]
    },
    {
        "id": "92d179cc8acfaa8f",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "top right",
        "displayTime": "4",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "94e6b47e378d1a11",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "create reset notification",
        "func": "msg.payload = \"Resetting Homebridge, please allow up to 1min...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 860,
        "wires": [
            [
                "92d179cc8acfaa8f"
            ]
        ]
    },
    {
        "id": "32bf32db79842773",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Manually insert Wifi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Please insert the SSID",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "05ca323bfeb18b21"
            ]
        ]
    },
    {
        "id": "05ca323bfeb18b21",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "prompt",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "89688908054c0716"
            ]
        ]
    },
    {
        "id": "89688908054c0716",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "get ssid",
        "func": "if (msg.payload == \"Cancel\") {\n    return null\n}\nelse if (msg.payload == \"\") {\n    msg.payload = \"SSID cannot be empty. Aborting...\"\n    return [msg, null]\n}\nelse {\n    flow.set(\"manualwifiSSID\", msg.payload)\n    msg.payload = \"Please enter the password for \\\"\" + flow.get(\"manualwifiSSID\") + \"\\\"\"\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 380,
        "wires": [
            [
                "700b236a814799e9"
            ],
            [
                "b51cce063abf54e8",
                "7a629a332583c18c"
            ]
        ]
    },
    {
        "id": "b51cce063abf54e8",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "prompt",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 690,
        "y": 380,
        "wires": [
            [
                "08d55910af5d7cce"
            ]
        ]
    },
    {
        "id": "08d55910af5d7cce",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "get pass",
        "func": "if (msg.payload == \"Cancel\") {\n    return null\n}\nelse if (msg.payload == \"\") {\n    msg.payload = \"Password cannot be empty. Aborting...\"\n    return [msg, null]\n}\nelse {\n    flow.set(\"manualwifiPASS\", msg.payload)\n    msg.payload = \"Do you want to add \\\"\" + flow.get(\"manualwifiSSID\") + \"\\\" with password \\\"\" + flow.get(\"manualwifiPASS\") + \"\\\" to your wifi settings file?\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 380,
        "wires": [
            [
                "abb9357dffc2b3d0"
            ],
            [
                "738a81fcdfe02751"
            ]
        ]
    },
    {
        "id": "a5463267c3f0dee4",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "check ok/cancel",
        "func": "if (msg.payload == \"Cancel\") {\n    return null\n}\nelse {\n    var manualwifiSSID = flow.get(\"manualwifiSSID\") \n    var manualwifiPASS = flow.get(\"manualwifiPASS\")\n    msg.payload = \"echo \\'\" + 'network={\\n ssid=\\\"' + manualwifiSSID + '\\\"\\n key_mgmt=WPA-PSK\\n psk=\\\"' + manualwifiPASS + '\\\" \\n}' + '\\'' + ' > pekaway/newWifi.txt'\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 380,
        "wires": [
            [
                "723ee89c87405334"
            ]
        ]
    },
    {
        "id": "700b236a814799e9",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 690,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "abb9357dffc2b3d0",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1030,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "738a81fcdfe02751",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "a5463267c3f0dee4"
            ]
        ]
    },
    {
        "id": "723ee89c87405334",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "newWifi.txt",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "ef6ceba9cfd948f5"
            ],
            [],
            []
        ]
    },
    {
        "id": "b2220ec4471c6b1c",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo cat /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "show wpa_supplicant.conf",
        "x": 910,
        "y": 440,
        "wires": [
            [
                "41dbddd606b2b11e"
            ],
            [],
            []
        ]
    },
    {
        "id": "41dbddd606b2b11e",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "format html",
        "func": "msg.payload = \"<center>new wpa_suppplicant.conf:</center> <br><br><pre>\" + msg.payload +\"</pre><br><br><center>Is this correct?</center>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 440,
        "wires": [
            [
                "4c3e1120eb15f780"
            ]
        ]
    },
    {
        "id": "4c3e1120eb15f780",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Revert",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1270,
        "y": 440,
        "wires": [
            [
                "bb07087436eb017c"
            ]
        ]
    },
    {
        "id": "6ecbaf305cd2ecd7",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "pekaway/changeWPA.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "append wpa_supplicant",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "b2220ec4471c6b1c"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef6ceba9cfd948f5",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo cp /etc/wpa_supplicant/wpa_supplicant.conf /etc/wpa_supplicant/.wpa_supplicant.conf.backup",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "backup wpa_supplicant",
        "x": 430,
        "y": 440,
        "wires": [
            [
                "6ecbaf305cd2ecd7"
            ],
            [],
            []
        ]
    },
    {
        "id": "bb07087436eb017c",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "check ok/revert",
        "func": "if (msg.payload == \"Revert\") {\n    return [msg, null]\n}\nelse {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 380,
        "wires": [
            [
                "302ec377f0d5f0a4"
            ],
            [
                "991904035ddda2bd"
            ]
        ]
    },
    {
        "id": "302ec377f0d5f0a4",
        "type": "exec",
        "z": "8a3d660f.83b628",
        "command": "sudo mv /etc/wpa_supplicant/.wpa_supplicant.conf.backup /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "revert wpa_supplicant",
        "x": 1620,
        "y": 320,
        "wires": [
            [
                "3fee49feb41587aa"
            ],
            [],
            []
        ]
    },
    {
        "id": "991904035ddda2bd",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "AP off?",
        "func": "msg.payload = \"Do you want to try to connect to the new SSID now?\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 380,
        "wires": [
            [
                "4014b979d5fd1db2"
            ]
        ]
    },
    {
        "id": "4014b979d5fd1db2",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1770,
        "y": 380,
        "wires": [
            [
                "08663515479a8be6"
            ]
        ]
    },
    {
        "id": "08663515479a8be6",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "check ok/cancel",
        "func": "if (msg.payload == \"Cancel\") {\n    return null\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 380,
        "wires": [
            [
                "25a044f3.9dd52c"
            ]
        ]
    },
    {
        "id": "360aafccc1442171",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1970,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3fee49feb41587aa",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "restored",
        "func": "msg.payload = \"Previous wpa_supplicant.conf has been restored.\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 320,
        "wires": [
            [
                "360aafccc1442171"
            ]
        ]
    },
    {
        "id": "7a629a332583c18c",
        "type": "debug",
        "z": "8a3d660f.83b628",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 300,
        "wires": []
    },
    {
        "id": "e7977a47.099d28",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "check OK/cancel",
        "func": "if(msg.payload==\"OK\") {\n    var max = Math.floor(Math.random() * (13 - 11 + 1)) + 11\n    msg.payload = \"cat /sys/firmware/devicetree/base/serial-number | cut -c 9-\" + max\n    return msg;\n}\nelse {\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "2313f0517cddc023"
            ]
        ]
    },
    {
        "id": "8d776b1e.ad0138",
        "type": "ui_button",
        "z": "8a3d660f.83b628",
        "name": "",
        "group": "b6314699.049798",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset WIFI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "a0b9b221.7e699"
            ]
        ]
    },
    {
        "id": "a0b9b221.7e699",
        "type": "function",
        "z": "8a3d660f.83b628",
        "name": "reset",
        "func": "msg.payload =\"Your system will be set to default SSID: 'VanPiControl_xxx' with passphrase: 'pekawayfetzt'.<br>Please stand by.\"; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 760,
        "wires": [
            [
                "64563058.d6b9e"
            ]
        ]
    },
    {
        "id": "64563058.d6b9e",
        "type": "ui_toast",
        "z": "8a3d660f.83b628",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 390,
        "y": 760,
        "wires": [
            [
                "e7977a47.099d28"
            ]
        ]
    },
    {
        "id": "b1a7918a8c55b102",
        "type": "inject",
        "z": "527dade3be53f8eb",
        "name": "1m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "2ba5918224221607",
                "10792133cf604598",
                "47aabeda59429fbd",
                "7bf5b3eb905782b8",
                "cc06bc613a170d3c",
                "d47210a741fbe0dc",
                "5c218770f9f2b821"
            ]
        ]
    },
    {
        "id": "6b541d3eb0359e36",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "592e6d4c2e6f23cb",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "Capacity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2ba5918224221607",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get capacity",
        "func": "var check = global.get(\"MainBattSoc\");\nmsg.payload = check;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 300,
        "wires": [
            [
                "6b541d3eb0359e36"
            ]
        ]
    },
    {
        "id": "10792133cf604598",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get volts",
        "func": "var check2 = global.get(\"MainBattVolt\");\ncheck2 = parseFloat(check2)\ncheck2 = Math.round(check2 * 10.0) / 10.0;\n\nmsg.payload = check2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "60fe72c85ae31518"
            ]
        ]
    },
    {
        "id": "60fe72c85ae31518",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "592e6d4c2e6f23cb",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "Volts",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "7",
        "ymax": "15",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "47aabeda59429fbd",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get amps",
        "func": "var check1 = global.get(\"MainBattAmps\");\ncheck1 = parseFloat(check1)\ncheck1 = Math.round(check1 * 10.0) / 10.0;\n\nmsg.payload= check1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "b64e5582f284b88e"
            ]
        ]
    },
    {
        "id": "b64e5582f284b88e",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "592e6d4c2e6f23cb",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "Amps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "-100",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "911cec3fc4707f16",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "Temp1",
        "group": "84acc58546c6e0c3",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "{{topic}}: {{msg.payload}}°C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "117df5814ca8e4a6",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "Temp2",
        "group": "84acc58546c6e0c3",
        "order": 2,
        "width": "6",
        "height": "4",
        "label": "{{topic}}: {{msg.payload}}°C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a6dd3816242a16fc",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "Temp3",
        "group": "84acc58546c6e0c3",
        "order": 3,
        "width": "6",
        "height": "4",
        "label": "{{topic}}: {{msg.payload}}°C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7bf5b3eb905782b8",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get temp1",
        "func": "var temp1 = global.get(\"temp1\");\nvar name = global.get(\"Ntemp1\");\n\ntemp1 = parseFloat(temp1)\ntemp1 = Math.round(temp1 * 10.0) / 10.0;\n\nmsg.payload = temp1;\nmsg.topic = name; \n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "911cec3fc4707f16"
            ]
        ]
    },
    {
        "id": "cc06bc613a170d3c",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get temp2",
        "func": "var temp1 = global.get(\"temp2\");\nvar name = global.get(\"Ntemp2\");\n\ntemp1 = parseFloat(temp1)\ntemp1 = Math.round(temp1 * 10.0) / 10.0;\n\nmsg.payload = temp1;\nmsg.topic = name; \n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "117df5814ca8e4a6"
            ]
        ]
    },
    {
        "id": "d47210a741fbe0dc",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get temp3",
        "func": "var temp1 = global.get(\"temp3\");\nvar name = global.get(\"Ntemp3\");\n\ntemp1 = parseFloat(temp1)\ntemp1 = Math.round(temp1 * 10.0) / 10.0;\n\nmsg.payload = temp1;\nmsg.topic = name; \n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "a6dd3816242a16fc"
            ]
        ]
    },
    {
        "id": "5c218770f9f2b821",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "get temp4",
        "func": "var temp1 = global.get(\"temp4\");\nvar name = global.get(\"Ntemp4\");\n\ntemp1 = parseFloat(temp1)\ntemp1 = Math.round(temp1 * 10.0) / 10.0;\n\nmsg.payload = temp1;\nmsg.topic = name; \n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "b3972853af65c53f"
            ]
        ]
    },
    {
        "id": "b3972853af65c53f",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "Temp4",
        "group": "84acc58546c6e0c3",
        "order": 4,
        "width": "6",
        "height": "4",
        "label": "{{topic}}: {{msg.payload}}°C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 680,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "419e0eda07d88b5d",
        "type": "comment",
        "z": "527dade3be53f8eb",
        "name": "battery stats",
        "info": "",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "3381b8e66b5f861b",
        "type": "comment",
        "z": "527dade3be53f8eb",
        "name": "temp stats",
        "info": "",
        "x": 490,
        "y": 40,
        "wires": []
    },
    {
        "id": "225aca95bb7ddf93",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "format",
        "func": "msg.payload = parseFloat(msg.payload).toFixed(1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 440,
        "wires": [
            [
                "167b13aa19eb6288"
            ]
        ]
    },
    {
        "id": "167b13aa19eb6288",
        "type": "ui_gauge",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "e1aef104cda6dd6b",
        "order": 1,
        "width": "3",
        "height": "4",
        "gtype": "donut",
        "title": "CPU Temp",
        "label": "",
        "format": "{{value}}°C",
        "min": "20",
        "max": "90",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "65",
        "className": "",
        "x": 840,
        "y": 440,
        "wires": []
    },
    {
        "id": "64722222f15de962",
        "type": "cpu",
        "z": "527dade3be53f8eb",
        "name": "",
        "msgCore": false,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": false,
        "x": 500,
        "y": 480,
        "wires": [
            [
                "2771cf0f4f491204",
                "ad45411ee62ca659"
            ]
        ]
    },
    {
        "id": "c723b90d714a39e0",
        "type": "cpu",
        "z": "527dade3be53f8eb",
        "name": "",
        "msgCore": false,
        "msgOverall": false,
        "msgArray": false,
        "msgTemp": true,
        "x": 500,
        "y": 440,
        "wires": [
            [
                "225aca95bb7ddf93"
            ]
        ]
    },
    {
        "id": "2771cf0f4f491204",
        "type": "ui_gauge",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "e1aef104cda6dd6b",
        "order": 2,
        "width": "3",
        "height": "4",
        "gtype": "donut",
        "title": "CPU Usage",
        "label": "",
        "format": "{{value}}%",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "80",
        "className": "",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "ad45411ee62ca659",
        "type": "ui_chart",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "e1aef104cda6dd6b",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "CPU usage chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "waiting for readings",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "600",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "7ca6ecb.7512014",
        "type": "ui_gauge",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "e1aef104cda6dd6b",
        "order": 5,
        "width": "3",
        "height": "4",
        "gtype": "donut",
        "title": "Disk",
        "label": "Usage",
        "format": "{{value}} %",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "70",
        "seg2": "90",
        "className": "",
        "x": 1160,
        "y": 560,
        "wires": []
    },
    {
        "id": "3283a8b7dccf942b",
        "type": "memory",
        "z": "527dade3be53f8eb",
        "name": "",
        "relativeValues": false,
        "unitType": "gb",
        "totalMemory": true,
        "usedMemory": false,
        "freeMemory": true,
        "availableMemory": false,
        "activeMemory": true,
        "buffersMemory": false,
        "cachedMemory": false,
        "slabMemory": false,
        "buffcacheMemory": false,
        "freeAvailableMemory": false,
        "swapTotalMemory": false,
        "swapUsedMemory": false,
        "swapFreeMemory": false,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "4e97fc1244330caa"
            ]
        ]
    },
    {
        "id": "59fb6bdf4316a12e",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "format",
        "func": "var memory_free = (msg.payload.memory_total-msg.payload.memory_active)\nvar memory_active = msg.payload.memory_active\nvar memory_total = parseFloat(msg.payload.memory_total).toFixed(2)\nvar seq1 = memory_total*0.5;\nvar seq2 = memory_total-memory_total*0.15\n\nmsg = {\n    ui_control:{\n    max:memory_total,\n    seg1:seq1,\n    seg2:seq2\n    },\n    payload: parseFloat(memory_active).toFixed(2)\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 620,
        "wires": [
            [
                "e4a287bfd075cc14"
            ]
        ]
    },
    {
        "id": "4e97fc1244330caa",
        "type": "join",
        "z": "527dade3be53f8eb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 620,
        "y": 620,
        "wires": [
            [
                "59fb6bdf4316a12e"
            ]
        ]
    },
    {
        "id": "e4a287bfd075cc14",
        "type": "ui_gauge",
        "z": "527dade3be53f8eb",
        "name": "",
        "group": "e1aef104cda6dd6b",
        "order": 4,
        "width": "3",
        "height": "4",
        "gtype": "donut",
        "title": "Memory used",
        "label": "RAM",
        "format": "{{value}} GB",
        "min": 0,
        "max": "8",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 910,
        "y": 620,
        "wires": []
    },
    {
        "id": "41894d2f19885c65",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "filter",
        "func": "if (msg.payload != \"\" && msg.payload.includes(\"%\")) {\n    msg.payload = msg.payload.substring(0, msg.payload.length-1)\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "7ca6ecb.7512014"
            ]
        ]
    },
    {
        "id": "1f8f4c57afedb27c",
        "type": "split",
        "z": "527dade3be53f8eb",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 900,
        "y": 560,
        "wires": [
            [
                "41894d2f19885c65"
            ]
        ]
    },
    {
        "id": "8a83977ee0a05493",
        "type": "switch",
        "z": "527dade3be53f8eb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/dev/root",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 560,
        "wires": [
            [
                "1f8f4c57afedb27c"
            ]
        ]
    },
    {
        "id": "f2719bd23e8e4d8a",
        "type": "split",
        "z": "527dade3be53f8eb",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 560,
        "wires": [
            [
                "8a83977ee0a05493"
            ]
        ]
    },
    {
        "id": "40e5e17a7246a1b8",
        "type": "exec",
        "z": "527dade3be53f8eb",
        "command": "df -h",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Disk Usage",
        "x": 500,
        "y": 560,
        "wires": [
            [
                "f2719bd23e8e4d8a"
            ],
            [],
            []
        ]
    },
    {
        "id": "745d3a2d6d5592da",
        "type": "exec",
        "z": "527dade3be53f8eb",
        "command": "uptime -p | sed 's/up //g'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Uptime",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "f0744f664c4052e6"
            ],
            [],
            []
        ]
    },
    {
        "id": "f0744f664c4052e6",
        "type": "ui_text",
        "z": "527dade3be53f8eb",
        "group": "e1aef104cda6dd6b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Uptime",
        "label": "System Uptime",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 890,
        "y": 680,
        "wires": []
    },
    {
        "id": "2f3d2efb794fee4c",
        "type": "ui_ui_control",
        "z": "527dade3be53f8eb",
        "name": "",
        "events": "change",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "b169b4f3be799217"
            ]
        ]
    },
    {
        "id": "b169b4f3be799217",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "check tab",
        "func": "if (msg.payload == \"change\" && msg.name == \"Monitor\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 100,
        "wires": [
            [
                "7bf5b3eb905782b8",
                "cc06bc613a170d3c",
                "d47210a741fbe0dc",
                "5c218770f9f2b821"
            ]
        ]
    },
    {
        "id": "f8149639d5c33863",
        "type": "inject",
        "z": "527dade3be53f8eb",
        "name": "35s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "35",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "c723b90d714a39e0",
                "64722222f15de962",
                "40e5e17a7246a1b8",
                "3283a8b7dccf942b",
                "745d3a2d6d5592da"
            ]
        ]
    },
    {
        "id": "e7f029f566aa24f4",
        "type": "comment",
        "z": "527dade3be53f8eb",
        "name": "RPI stats (30s)",
        "info": "",
        "x": 230,
        "y": 400,
        "wires": []
    },
    {
        "id": "79d5e37cc5569cb9",
        "type": "function",
        "z": "527dade3be53f8eb",
        "name": "",
        "func": "var volt = global.get(\"MainBattVolt\");\nvar soc = global.get(\"MainBattSoc\");\nvar amps = parseFloat(global.get(\"MainBattAmps\"));\nvar cap = global.get(\"BMScap\");\n\nif (amps > 0) {\n    msg.payload = \"charging\"\n}\nelse if (amps == 0) {\n    msg.payload = \"not using power\";\n}\nelse {\n    amps = amps*-1\n    msg.payload = cap/amps;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 780,
        "wires": [
            [
                "df251edf04052165"
            ]
        ]
    },
    {
        "id": "db80af084c544e62",
        "type": "inject",
        "z": "527dade3be53f8eb",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 220,
        "y": 780,
        "wires": [
            [
                "79d5e37cc5569cb9"
            ]
        ]
    },
    {
        "id": "5dee0368d5acdea1",
        "type": "comment",
        "z": "527dade3be53f8eb",
        "name": "calculate ttgo",
        "info": "",
        "x": 220,
        "y": 740,
        "wires": []
    },
    {
        "id": "df251edf04052165",
        "type": "ui_text",
        "z": "527dade3be53f8eb",
        "group": "592e6d4c2e6f23cb",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TTGO",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "644fa12fc1c339ab",
        "type": "exec",
        "z": "40d4ba5c28e4a6be",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1510,
        "y": 400,
        "wires": [
            [
                "7aeba5e204728a19",
                "353103819310b910"
            ],
            [],
            []
        ]
    },
    {
        "id": "9291b1703d76d674",
        "type": "exec",
        "z": "40d4ba5c28e4a6be",
        "command": "sudo timeout -s SIGINT 5s hcitool -i hci0 lescan",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1180,
        "y": 120,
        "wires": [
            [
                "62b997a53a55195a"
            ],
            [],
            []
        ]
    },
    {
        "id": "62b997a53a55195a",
        "type": "split",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "4ad5ee9a24660da3"
            ]
        ]
    },
    {
        "id": "d09cbcf3e10d346f",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "search for mac",
        "func": "for (var i = 1; i < msg.payload.length-1; i++) {\n    //var str = msg.payload[i];\n    var parts = msg.payload[i].split(\" \");\n\n    if(parts[1].match(/^[0-9]+$/) != null) {\n        msg.liontron = {\n            mac: parts[0],\n            name: parts[1]\n        }\n    }\n}\n\nif (msg.liontron != undefined) {\n    msg.payload = msg.liontron\n}\nelse {\n    msg.payload = \"Not found\"\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 120,
        "wires": [
            [
                "6c09c6cb63c6082d"
            ]
        ]
    },
    {
        "id": "76afa36016244c9d",
        "type": "file",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2090,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "979d093027d95f0b",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "liontron.py",
        "func": "msg.payload = global.get(\"btbat\");\nif(msg.payload == undefined || msg.payload == \"turn off\" || msg.payload == 0 || msg.payload == \"turned off\" || msg.payload == \"Scan Bluetooth first\" || msg.payload == \"\") {\n    return [null, msg];\n}\nelse {\n    msg.payload = \"sudo python3 pekaway/ble_py/liontronBmsInfo.py -d \"+global.get(\"btbat\");\n    return [msg, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "644fa12fc1c339ab"
            ],
            []
        ]
    },
    {
        "id": "93056cfe32d048da",
        "type": "inject",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "979d093027d95f0b"
            ]
        ]
    },
    {
        "id": "11968c1ca6462bbb",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "set global",
        "func": "//battery\nglobal.set(\"BMSamps\",msg.payload.Imain);\nglobal.set(\"BMScap\",msg.payload.RemainAh);\nglobal.set(\"BMSmaxcap\", (msg.payload.NominalAh * msg.payload.Vmain).toFixed(2));\nglobal.set(\"BMSvolt\",msg.payload.Vmain)\nglobal.set(\"BMStemp\",msg.payload.TempC1);\nglobal.set(\"BMScell1\",msg.payload.Vcell1*1000);\nglobal.set(\"BMScell2\",msg.payload.Vcell2*1000);\nglobal.set(\"BMScell3\",msg.payload.Vcell3*1000);\nglobal.set(\"BMScell4\",msg.payload.Vcell4*1000);\nglobal.set(\"BMSsoc\",msg.payload.SoC);\n\nif (global.get(\"BatteryDataDelivery\") == \"1\") {\n    return null\n}\n\nvar BMSmaxvolt = global.get(\"BMSvolt\")\nvar BMSminvolt = global.get(\"BMSvolt\")\nvar BMSmaxcap = global.get(\"BMSmaxcap\")\n\nif (global.get(\"BMSmaxvolt\") == \"wait\" || global.get(\"BMSmaxvolthighest\") == \"wait\" || BMSmaxvolt > global.get(\"BMSmaxvolthighest\")) {\n    global.set(\"BMSmaxvolthighest\", BMSmaxvolt)\n    global.set(\"BMSmaxvolt\", BMSmaxvolt.toString())\n}\nif (global.get(\"BMSminvolt\") == \"wait\" || global.get(\"BMSminvoltlowest\") == \"wait\" || BMSminvolt < global.get(\"BMSminvoltlowest\")) {\n    global.set(\"BMSminvoltlowest\", BMSminvolt)\n    global.set(\"BMSminvolt\", BMSminvolt.toString())\n}\nif (global.get(\"BMSmaxcap\") == \"wait\" || global.get(\"BMSmaxcaphighest\") == \"wait\" || BMSmaxcap > global.get(\"BMSmaxcaphighest\")) {\n    global.set(\"BMSmaxcaphighest\", BMSmaxcap)\n    global.set(\"BMSmaxcap\", BMSmaxcap.toString())\n}\n\nvar power = msg.payload.Imain * msg.payload.Vmain;\npower = power.toFixed(1);\nglobal.set(\"BMSpower\",power);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7aeba5e204728a19",
        "type": "json",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1690,
        "y": 400,
        "wires": [
            [
                "11968c1ca6462bbb"
            ]
        ]
    },
    {
        "id": "07e319417d773d02",
        "type": "ui_toast",
        "z": "40d4ba5c28e4a6be",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2070,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6c09c6cb63c6082d",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == \"Not found\") {\n    msg.payload = \"No LionTron Battery found\";\n    node.send([msg, null])\n    msg.payload = 0\n}\nelse {\n    var mac = msg.payload.mac\n    msg.payload = \"Found LionTron Battery \"+ msg.payload.name;\n    global.set(\"btbat\", mac);\n    node.send([msg, null])\n    msg.payload = mac;\n    global.set(\"btbat\", mac)\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 120,
        "wires": [
            [
                "07e319417d773d02"
            ],
            [
                "76afa36016244c9d",
                "2f9d8231155d5456"
            ]
        ]
    },
    {
        "id": "46bea67ce26c2ef1",
        "type": "ui_toast",
        "z": "40d4ba5c28e4a6be",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 180,
        "wires": []
    },
    {
        "id": "78e78c4e6ca42667",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "msg.payload = \"searching battery..... \";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "46bea67ce26c2ef1"
            ]
        ]
    },
    {
        "id": "2a8dce871dd3bd7b",
        "type": "inject",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "e1d241a12e7cde2c"
            ]
        ]
    },
    {
        "id": "e1d241a12e7cde2c",
        "type": "exec",
        "z": "40d4ba5c28e4a6be",
        "command": "sudo timeout -s SIGINT 5s hcitool -i hci0 lescan",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "78a7c7e1a717c311"
            ],
            [],
            []
        ]
    },
    {
        "id": "7344abfca935d13c",
        "type": "ui_dropdown",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "label": "GOK Senso4s",
        "tooltip": "",
        "place": "Select option",
        "group": "c3110bd0cd79c2a1",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 760,
        "y": 600,
        "wires": [
            [
                "8a7ad70a77881edc"
            ]
        ]
    },
    {
        "id": "78a7c7e1a717c311",
        "type": "split",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 480,
        "wires": [
            [
                "cf4db23c1032a082"
            ]
        ]
    },
    {
        "id": "cf4db23c1032a082",
        "type": "join",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 480,
        "wires": [
            [
                "68cb82938d031d23"
            ]
        ]
    },
    {
        "id": "68cb82938d031d23",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "create dropdown options",
        "func": "msg.payload[0] = \"no bt scale\"\nmsg.payload[msg.payload.length-1] = \"insert manually\"\nmsg.options = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 480,
        "wires": [
            [
                "7344abfca935d13c",
                "a42dfd6e47be2ec0"
            ]
        ]
    },
    {
        "id": "8a7ad70a77881edc",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == \"\" || msg.payload == \"no bt scale\") {\n    global.set(\"scalemac\", 0)\n    msg.payload = 0\n    return [msg, null];\n}\nelse if (msg.payload == \"insert manually\") {\n    msg.payload = \"Please enter the MAC adddress:\"\n    return [null, msg]\n}\nelse {\n    msg.scalemac = msg.payload.substring(0,17);\n    global.set(\"scalemac\", msg.scalemac)\n    msg.payload = msg.scalemac\n    return [msg, null];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 600,
        "wires": [
            [
                "b965f0e05d674b8b",
                "bd1eede2780cebf7"
            ],
            [
                "499e5ee09bb144b0"
            ]
        ]
    },
    {
        "id": "0c69cbd98298fc86",
        "type": "exec",
        "z": "40d4ba5c28e4a6be",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1450,
        "y": 700,
        "wires": [
            [
                "3404009d3efa656f"
            ],
            [],
            []
        ]
    },
    {
        "id": "3404009d3efa656f",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload.includes(\"timed out\")) {\n    return msg\n}\nelse {\n    msg.payload = msg.payload.substring(2,msg.payload.length-2);\n    msg.payload = parseInt(msg.payload,16)+ \"%\";\n    global.set(\"gokvalue\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 700,
        "wires": [
            [
                "dfb2ee3a1059628f"
            ]
        ]
    },
    {
        "id": "bd1eede2780cebf7",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "global get device MAC",
        "func": "msg.payload = global.get(\"scalemac\");\nif(msg.payload == undefined || msg.payload == \"turn off\" || msg.payload == 0 || msg.payload == \"turned off\" || msg.payload == \"Scan Bluetooth first\") {\n    return null;\n}\nelse {\n    msg.payload = \"python3 pekaway/ble_py/goksenso4.py -d \" + global.get(\"scalemac\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 700,
        "wires": [
            [
                "0c69cbd98298fc86"
            ]
        ]
    },
    {
        "id": "e6e313ba570b1c43",
        "type": "inject",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10800",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 700,
        "wires": [
            [
                "bd1eede2780cebf7"
            ]
        ]
    },
    {
        "id": "499e5ee09bb144b0",
        "type": "ui_toast",
        "z": "40d4ba5c28e4a6be",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "a37638159bf60e43"
            ]
        ]
    },
    {
        "id": "a37638159bf60e43",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == \"Cancel\") {\n    global.set(\"scalemac\", 0)\n    return null\n}\nelse {\n    global.set(\"scalemac\", msg.payload.trim())\n    msg.payload = global.get(\"scalemac\");\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 600,
        "wires": [
            [
                "b4323fc4266da3fc",
                "bd1eede2780cebf7"
            ]
        ]
    },
    {
        "id": "b965f0e05d674b8b",
        "type": "file",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtscale",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1300,
        "y": 540,
        "wires": [
            [
                "12a38b124dd8b4e4"
            ]
        ]
    },
    {
        "id": "b4323fc4266da3fc",
        "type": "file",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtscale",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1420,
        "y": 600,
        "wires": [
            [
                "12a38b124dd8b4e4"
            ]
        ]
    },
    {
        "id": "e967355a82fcdf34",
        "type": "inject",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "60c4446af7b83bfc",
                "2a57e6e2dc577a62",
                "c1c032bdd9d99712",
                "94b32c67a767772c"
            ]
        ]
    },
    {
        "id": "60c4446af7b83bfc",
        "type": "file in",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtscale",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1300,
        "y": 500,
        "wires": [
            [
                "12a38b124dd8b4e4"
            ]
        ]
    },
    {
        "id": "38528e2ba5d0f2f2",
        "type": "ui_text",
        "z": "40d4ba5c28e4a6be",
        "group": "c3110bd0cd79c2a1",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Currently set (Senso4s): ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1810,
        "y": 560,
        "wires": []
    },
    {
        "id": "12a38b124dd8b4e4",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == 0) {\n    msg.payload = \"turned off\"\n    node.send([null, msg])\n    global.set(\"scalemac\", msg.payload)\n}\nelse if (msg.payload == \"Scan Bluetooth first\") {\n    var scanfirst = msg.payload\n    msg.payload = \"turned off\"\n    node.send([null, msg])\n    global.set(\"scalemac\", msg.payload)\n    msg.payload = scanfirst\n}\nelse {\n    global.set(\"scalemac\", msg.payload)\n}\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 560,
        "wires": [
            [
                "38528e2ba5d0f2f2"
            ],
            [
                "dfb2ee3a1059628f"
            ]
        ]
    },
    {
        "id": "dfb2ee3a1059628f",
        "type": "ui_text",
        "z": "40d4ba5c28e4a6be",
        "group": "c3110bd0cd79c2a1",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "GOK Senso4s:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 700,
        "wires": []
    },
    {
        "id": "4ad5ee9a24660da3",
        "type": "join",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "3",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1570,
        "y": 120,
        "wires": [
            [
                "d09cbcf3e10d346f"
            ]
        ]
    },
    {
        "id": "3857e80bd8da78e2",
        "type": "ui_button",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "group": "c3110bd0cd79c2a1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Scan Bluetooth",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 400,
        "wires": [
            [
                "e1d241a12e7cde2c",
                "6cc6855cceed426b"
            ]
        ]
    },
    {
        "id": "f18b8c2559bbe822",
        "type": "ui_toast",
        "z": "40d4ba5c28e4a6be",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 430,
        "y": 400,
        "wires": []
    },
    {
        "id": "dffeaa6ec6dea5ae",
        "type": "ui_dropdown",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "label": "Liontron/JBD Bat",
        "tooltip": "",
        "place": "Select option",
        "group": "c3110bd0cd79c2a1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 180,
        "wires": [
            [
                "95931cd0f0779dc7"
            ]
        ]
    },
    {
        "id": "a42dfd6e47be2ec0",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "create dropdown options",
        "func": "msg.payload[0] = \"no bt battery\"\nmsg.payload[msg.payload.length-1] = \"insert manually\"\nmsg.payload[msg.payload.length] = \"search battery automatically\"\nmsg.options = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "dffeaa6ec6dea5ae"
            ]
        ]
    },
    {
        "id": "95931cd0f0779dc7",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == \"\" || msg.payload == \"no bt battery\") {\n    global.set(\"btbat\", 0)\n    msg.payload = 0\n    return [null, msg, null];\n}\nelse if (msg.payload == \"search battery automatically\") {\n    return [msg, null, null]\n}\nelse if (msg.payload == \"insert manually\") {\n    msg.payload = \"Please enter the MAC adddress:\"\n    return [null, null, msg]\n}\nelse {\n    msg.batmac = msg.payload.substring(0,17);\n    global.set(\"btbat\", msg.batmac)\n    msg.payload = msg.batmac\n    return [null, msg, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 180,
        "wires": [
            [
                "78e78c4e6ca42667",
                "9291b1703d76d674"
            ],
            [
                "cd72ee16ac95ce3a",
                "979d093027d95f0b"
            ],
            [
                "e3e73105d4e879d5"
            ]
        ]
    },
    {
        "id": "4fe37ef9a16718a8",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == \"Cancel\") {\n    global.set(\"btbat\", 0)\n    return null\n}\nelse {\n    global.set(\"btbat\", msg.payload.trim())\n    msg.payload = global.get(\"btbat\");\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 300,
        "wires": [
            [
                "243d250461e97d1c",
                "979d093027d95f0b"
            ]
        ]
    },
    {
        "id": "e3e73105d4e879d5",
        "type": "ui_toast",
        "z": "40d4ba5c28e4a6be",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "4fe37ef9a16718a8"
            ]
        ]
    },
    {
        "id": "6cc6855cceed426b",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "msg.payload = \"scanning bluetooth...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "f18b8c2559bbe822"
            ]
        ]
    },
    {
        "id": "243d250461e97d1c",
        "type": "file",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1410,
        "y": 300,
        "wires": [
            [
                "2f9d8231155d5456"
            ]
        ]
    },
    {
        "id": "12cee2b9d35f3f95",
        "type": "ui_text",
        "z": "40d4ba5c28e4a6be",
        "group": "c3110bd0cd79c2a1",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Currently set (Battery): ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1720,
        "y": 240,
        "wires": []
    },
    {
        "id": "2f9d8231155d5456",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "func": "if (msg.payload == 0) {\n    msg.payload = \"turned off\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 240,
        "wires": [
            [
                "12cee2b9d35f3f95"
            ]
        ]
    },
    {
        "id": "cd72ee16ac95ce3a",
        "type": "file",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 260,
        "wires": [
            [
                "2f9d8231155d5456"
            ]
        ]
    },
    {
        "id": "2a57e6e2dc577a62",
        "type": "file in",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "2f9d8231155d5456"
            ]
        ]
    },
    {
        "id": "9facfc06429879c1",
        "type": "comment",
        "z": "40d4ba5c28e4a6be",
        "name": "Scan bluetooth and set options for bat and scale",
        "info": "",
        "x": 200,
        "y": 340,
        "wires": []
    },
    {
        "id": "c5883179193b6d11",
        "type": "comment",
        "z": "40d4ba5c28e4a6be",
        "name": "Request value from bt scale",
        "info": "",
        "x": 1060,
        "y": 660,
        "wires": []
    },
    {
        "id": "6c6af4d528fa7f0e",
        "type": "comment",
        "z": "40d4ba5c28e4a6be",
        "name": "Request values from bt battery",
        "info": "",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "c1c032bdd9d99712",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "create dropdown options on startup",
        "func": "msg.options = [ \"no bt battery\", \"insert manually\", \"search battery automatically\" ]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "dffeaa6ec6dea5ae"
            ]
        ]
    },
    {
        "id": "94b32c67a767772c",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "create dropdown options on startup",
        "func": "msg.options = [ \"no bt scale\", \"insert manually\" ]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 600,
        "wires": [
            [
                "7344abfca935d13c"
            ]
        ]
    },
    {
        "id": "353103819310b910",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "turn off if BMS not reachable",
        "func": "if (msg.payload.trim() != \"{}\") {\n    global.set(\"ble_bms_empty_counter\", 0)\n    global.set(\"ble_retry\", 0)\n    msg.reset = true\n    return [null, msg]\n}\n\nelse if (msg.payload.trim() == \"{}\") {\n    global.set(\"ble_bms_empty_counter\", global.get(\"ble_bms_empty_counter\")+1)\n}\n\nif (global.get(\"ble_bms_empty_counter\") == 6) {\n    flow.set(\"btbat_set\", global.get(\"btbat\"))\n    global.set(\"btbat\", \"turned off\")\n    global.set(\"ble_bms_empty_counter\", 0)\n    msg.delay = 3600000 // 1 hour\n    msg.payload = 0\n    return [ msg, msg];\n}\n\nreturn null",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 360,
        "wires": [
            [
                "2f9d8231155d5456",
                "1198b26bcd1f527a"
            ],
            [
                "1198b26bcd1f527a"
            ]
        ]
    },
    {
        "id": "1198b26bcd1f527a",
        "type": "delay",
        "z": "40d4ba5c28e4a6be",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1980,
        "y": 360,
        "wires": [
            [
                "4afdc5c3f8a100eb"
            ]
        ]
    },
    {
        "id": "4afdc5c3f8a100eb",
        "type": "function",
        "z": "40d4ba5c28e4a6be",
        "name": "turn back on",
        "func": "flow.get(\"btbat_set\")\nglobal.set(\"btbat\", flow.get(\"btbat_set\"))\nmsg.payload = flow.get(\"btbat_set\")\n\nif (global.get(\"ble_retry\") == 3) {\n    msg.payload = \"turned off\"\n    global.set(\"btbat\", \"turned off\")\n    return msg\n}\n\nglobal.set(\"ble_retry\", global.get(\"ble_retry\")+1)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 360,
        "wires": [
            [
                "2f9d8231155d5456"
            ]
        ]
    },
    {
        "id": "ac927c1652fef0aa",
        "type": "mqtt in",
        "z": "c60a5166bd6dac41",
        "name": "",
        "topic": "tele/WifiTouch/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 380,
        "wires": [
            [
                "740fc61d902b8e9a"
            ]
        ]
    },
    {
        "id": "90320e2e4bf06b24",
        "type": "mqtt out",
        "z": "c60a5166bd6dac41",
        "name": "",
        "topic": "cmnd/WifiTouch/Nextion",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1250,
        "y": 260,
        "wires": []
    },
    {
        "id": "740fc61d902b8e9a",
        "type": "json",
        "z": "c60a5166bd6dac41",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "784e05ee9718151b"
            ]
        ]
    },
    {
        "id": "784e05ee9718151b",
        "type": "switch",
        "z": "c60a5166bd6dac41",
        "name": "",
        "property": "payload.CustomRecv",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "page,switch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,button8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "page,info",
                "vt": "str"
            },
            {
                "t": "regex",
                "v": "dimm[0-9],\\d+(?:\\.\\d{1,3})?$",
                "vt": "str",
                "case": true
            },
            {
                "t": "eq",
                "v": "event,buttonVentilat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "page,dimmer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "page,battery",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "page,level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,Ambiente",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,heateroff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event,heateron",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 18,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "a26674eb4ac8a98c"
            ],
            [
                "13c9b7dea65f1375"
            ],
            [
                "faf52076255ae61d"
            ],
            [
                "15750a78ce819dee"
            ],
            [
                "18211a7094dc838b"
            ],
            [
                "ae00b77036a95ee4"
            ],
            [
                "c86e30dba830d888"
            ],
            [
                "bf8a54d124dc3c39"
            ],
            [
                "b70d9411f96b354c"
            ],
            [
                "81a661cdbda984d2"
            ],
            [
                "212a57e0167cb29b"
            ],
            [],
            [
                "38ca210401aa23bb"
            ],
            [
                "26516a896f62feaf"
            ],
            [
                "120b81952ef31149"
            ],
            [],
            [
                "cd8aee961c1b28ab"
            ],
            [
                "7e4dd6723e584edd"
            ]
        ]
    },
    {
        "id": "a26674eb4ac8a98c",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "load relays",
        "func": "msg.payload.relay1 = global.get(\"one\");\nmsg.payload.relay2 = global.get(\"two\");\nmsg.payload.relay3 = global.get(\"three\");\nmsg.payload.relay4 = global.get(\"four\");\nmsg.payload.relay5 = global.get(\"five\");\nmsg.payload.relay6 = global.get(\"six\");\nmsg.payload.relay7 = global.get(\"seven\");\nmsg.payload.relay8 = global.get(\"eight\");\nmsg.payload.check = 0xDD\n\n\nif(msg.payload.relay1==false)\nmsg.payload.relay1=0x02;\n\nif(msg.payload.relay2==false)\nmsg.payload.relay2=0x02;\n\nif(msg.payload.relay3==false)\nmsg.payload.relay3=0x02;\n\nif(msg.payload.relay4==false)\nmsg.payload.relay4=0x02;\n\nif(msg.payload.relay5==false)\nmsg.payload.relay5=0x02;\n\nif(msg.payload.relay6==false)\nmsg.payload.relay6=0x02;\n\nif(msg.payload.relay7==false)\nmsg.payload.relay7=0x02;\n\nif(msg.payload.relay8==false)\nmsg.payload.relay8=0x02;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 40,
        "wires": [
            [
                "9a2c65739762090a"
            ]
        ]
    },
    {
        "id": "9a2c65739762090a",
        "type": "buffer-maker",
        "z": "c60a5166bd6dac41",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "check",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.check"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay1"
            },
            {
                "name": "item3",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay2"
            },
            {
                "name": "item4",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay3"
            },
            {
                "name": "item5",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay4"
            },
            {
                "name": "item6",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay5"
            },
            {
                "name": "item7",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay6"
            },
            {
                "name": "item8",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay7"
            },
            {
                "name": "item9",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.relay8"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "90320e2e4bf06b24"
            ]
        ]
    },
    {
        "id": "13c9b7dea65f1375",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 1",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "faf52076255ae61d",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 2",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "15750a78ce819dee",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 3",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/3",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "18211a7094dc838b",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 4",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/4",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ae00b77036a95ee4",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 5",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/5",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c86e30dba830d888",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 6",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/6",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "bf8a54d124dc3c39",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 7",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/7",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b70d9411f96b354c",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api toggle relay 8",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:1880/toggle/relay/8",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e56753324c537250",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "name": "api set dimmer",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "81a661cdbda984d2",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "load switch",
        "func": "var van_name = (global.get(\"van_name\") != undefined) ? global.get(\"van_name\") : \"\";\nmsg.payload=\"--\" + van_name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 400,
        "wires": [
            [
                "9a2c65739762090a"
            ]
        ]
    },
    {
        "id": "a969522383e403b3",
        "type": "split",
        "z": "c60a5166bd6dac41",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 440,
        "wires": [
            [
                "b37c9fcf7bf425b3"
            ]
        ]
    },
    {
        "id": "212a57e0167cb29b",
        "type": "change",
        "z": "c60a5166bd6dac41",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.CustomRecv",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "a969522383e403b3"
            ]
        ]
    },
    {
        "id": "b37c9fcf7bf425b3",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "",
        "func": "if (isNaN(parseInt(msg.payload)) == true) {\n    flow.set(\"dimmerno\",msg.payload)\n    return null\n}\nelse {\n    let dimmervalue = msg.payload\n    let dimmerno = flow.get(\"dimmerno\").slice(-1);\n    msg.url = \"http://localhost:1880/dimmer/\"+dimmerno+\"/\"+dimmervalue\n    msg.dimmerno = dimmerno\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 440,
        "wires": [
            [
                "e56753324c537250"
            ]
        ]
    },
    {
        "id": "db6f6f6cb6b671db",
        "type": "buffer-maker",
        "z": "c60a5166bd6dac41",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "check",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.check"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm1"
            },
            {
                "name": "item3",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm2"
            },
            {
                "name": "item4",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm3"
            },
            {
                "name": "item5",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm4"
            },
            {
                "name": "item6",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm5"
            },
            {
                "name": "item7",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm6"
            },
            {
                "name": "item8",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm7"
            },
            {
                "name": "item9",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.dimm8"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 810,
        "y": 480,
        "wires": [
            [
                "90320e2e4bf06b24"
            ]
        ]
    },
    {
        "id": "38ca210401aa23bb",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "load dimmer",
        "func": "msg.payload.dimm1 = global.get(\"dimmer0\");\nmsg.payload.dimm2 = global.get(\"dimmer1\");\nmsg.payload.dimm3 = global.get(\"dimmer2\");\nmsg.payload.dimm4 = global.get(\"dimmer3\");\nmsg.payload.dimm5 = global.get(\"dimmer4\");\nmsg.payload.dimm6 = global.get(\"dimmer5\");\nmsg.payload.dimm7 = global.get(\"dimmer6\");\nmsg.payload.dimm8 = global.get(\"dimmer7\");\nmsg.payload.check = 0xEE\n\n\n//change 0, to send no empty buffer\nif(msg.payload.dimm1<=0)\nmsg.payload.dimm1=0x65;\n\nif(msg.payload.dimm2<=0)\nmsg.payload.dimm2=0x65;\n\nif(msg.payload.dimm3<=0)\nmsg.payload.dimm3=0x65;\n\nif(msg.payload.dimm4<=0)\nmsg.payload.dimm4=0x65;\n\nif(msg.payload.dimm5<=0)\nmsg.payload.dimm5=0x65;\n\nif(msg.payload.dimm6<=0)\nmsg.payload.dimm6=0x65;\n\nif(msg.payload.dimm7<=0)\nmsg.payload.dimm7=0x65;\n\nif(msg.payload.dimm8<=0)\nmsg.payload.dimm8=0x65;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 480,
        "wires": [
            [
                "db6f6f6cb6b671db"
            ]
        ]
    },
    {
        "id": "26516a896f62feaf",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "load battery",
        "func": "msg.payload.soc = Number(global.get(\"MainBattSoc\")).toFixed(0);\nmsg.payload.volt = Number(global.get(\"MainBattVolt\")).toFixed(0);\nmsg.payload.amps = Number(global.get(\"MainBattAmps\")).toFixed(0);\n\nif(msg.payload.amps<0)\n{\nmsg.payload.amps=msg.payload.amps*-1\nmsg.payload.charge=0xFF\n}\nelse\n{msg.payload.charge=0xCC}\n\nmsg.payload.check = 0xBB;\n//value to be ranged //range limits \n\nvar inputrange = [8,16];\n//expected range of input value.an array containing min and max \nvar outputrange = [0,100] // range into the value to be converted. an array containing min and max \n\n\n//brain of the whole thing. hard work is done here\nconst mapNumber = (number, in_min, in_max, out_min, out_max) => {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n\n\nvar output = mapNumber(msg.payload.volt,inputrange[0],inputrange[1],outputrange[0],outputrange[1]); \noutput = parseFloat(output.toFixed(0));\nmsg.payload.percentvolt=output; \nvar inputrange1 = [0,100];\n//expected range of input value. an array containing min and max \nvar outputrange1 = [0,100] \nvar output1 = mapNumber(msg.payload.amps,inputrange1[0],inputrange1[1],outputrange1[0],outputrange1[1]); \noutput1 = parseFloat(output1.toFixed(0)) \nmsg.payload.percentamps=output1; \n\nif(msg.payload.amps==0)\n{\nmsg.payload.amps=0xFF;\nmsg.payload.percentamps=0xFF;\n}\n\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 520,
        "wires": [
            [
                "385ba07d55259151"
            ]
        ]
    },
    {
        "id": "385ba07d55259151",
        "type": "buffer-maker",
        "z": "c60a5166bd6dac41",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "check",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.check"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.soc"
            },
            {
                "name": "item3",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.volt"
            },
            {
                "name": "item4",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.amps"
            },
            {
                "name": "item5",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.percentamps"
            },
            {
                "name": "item6",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.percentvolt"
            },
            {
                "name": "item7",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "msg.payload.charge"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 810,
        "y": 520,
        "wires": [
            [
                "90320e2e4bf06b24"
            ]
        ]
    },
    {
        "id": "120b81952ef31149",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "load Level",
        "func": "msg.payload.level1 = Number(global.get(\"Level1\")).toFixed(0);\nmsg.payload.level2 = Number(global.get(\"Level2\")).toFixed(0);\n\n\nmsg.payload.check = 0xAA;\n//value to be ranged //range limits \n\n\nif(msg.payload.level1<=0)\nmsg.payload.level1=0xFF;\nif(msg.payload.level2<=0)\nmsg.payload.level2=0xFF;\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "641d3cf89d9afecb"
            ]
        ]
    },
    {
        "id": "641d3cf89d9afecb",
        "type": "buffer-maker",
        "z": "c60a5166bd6dac41",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "check",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.check"
            },
            {
                "name": "item2",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.level1"
            },
            {
                "name": "item3",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.level2"
            },
            {
                "name": "item4",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.level2"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 810,
        "y": 560,
        "wires": [
            [
                "90320e2e4bf06b24"
            ]
        ]
    },
    {
        "id": "63c36da990a3d96d",
        "type": "mqtt in",
        "z": "c60a5166bd6dac41",
        "d": true,
        "name": "",
        "topic": "stat/WifiTouch/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "781d6ec6a3798e4d"
            ]
        ]
    },
    {
        "id": "75b87d8eae14806d",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "d": true,
        "name": "Wifitouch action buttons",
        "func": "//HW-Button1 = all off\n//HW-Button2 = toggle dimmer0+1 either off or 60%\nif (flow.get(\"wifitouch_restart\") == true) {\n    return null\n}\n\nif (msg.payload.POWER1 == \"ON\" || msg.payload.POWER1 == \"OFF\") {\n    msg.url = \"http://127.0.0.1:1880/switchall/false\"\n    return [msg, null]\n}\nif (msg.payload.POWER2 == \"ON\" || msg.payload.POWER2 == \"OFF\") {\n    let channel1 = parseInt(global.get(\"dimmer0\"))\n    let channel2 = parseInt(global.get(\"dimmer1\"))\n    if (channel1 != 0 || channel2 != 0 ) {\n        msg.url = \"http://localhost:1880/dimmer/1/0\"\n        node.send([null, msg])\n        msg.url = \"http://localhost:1880/dimmer/2/0\"\n        return [null, msg]\n    }\n    else if (channel1 == 0 && channel2 == 0) {\n        msg.url = \"http://localhost:1880/dimmer/1/60\"\n        node.send([null, msg])\n        msg.url = \"http://localhost:1880/dimmer/2/60\"\n        return [null, msg]\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 740,
        "wires": [
            [
                "6c38c77ebb0162df"
            ],
            [
                "4c27111a595daf88"
            ]
        ]
    },
    {
        "id": "781d6ec6a3798e4d",
        "type": "json",
        "z": "c60a5166bd6dac41",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 740,
        "wires": [
            [
                "75b87d8eae14806d"
            ]
        ]
    },
    {
        "id": "6c38c77ebb0162df",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "d": true,
        "name": "switchall/false",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 740,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4c27111a595daf88",
        "type": "http request",
        "z": "c60a5166bd6dac41",
        "d": true,
        "name": "switch dimmer 1+2",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 750,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "cd8aee961c1b28ab",
        "type": "link out",
        "z": "c60a5166bd6dac41",
        "name": "",
        "mode": "link",
        "links": [
            "8114989ad3d836db"
        ],
        "x": 575,
        "y": 600,
        "wires": []
    },
    {
        "id": "7e4dd6723e584edd",
        "type": "link out",
        "z": "c60a5166bd6dac41",
        "name": "",
        "mode": "link",
        "links": [
            "eb1e92403a6a4490"
        ],
        "x": 575,
        "y": 640,
        "wires": []
    },
    {
        "id": "119ec00a0f1a8961",
        "type": "mqtt in",
        "z": "c60a5166bd6dac41",
        "name": "",
        "topic": "tele/WifiTouch/INFO3",
        "qos": "2",
        "datatype": "auto",
        "broker": "0ddb07c65cbb68bc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 840,
        "wires": [
            [
                "64b3cffd65824f25"
            ]
        ]
    },
    {
        "id": "9db514f3f7a25d87",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "wifistart true",
        "func": "if (msg.payload.hasOwnProperty(\"Info3\")) {\n    flow.set(\"wifitouch_restart\", true)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "c98669cc7d0a03cd"
            ]
        ]
    },
    {
        "id": "c98669cc7d0a03cd",
        "type": "delay",
        "z": "c60a5166bd6dac41",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 840,
        "wires": [
            [
                "da5141b964c11d36"
            ]
        ]
    },
    {
        "id": "da5141b964c11d36",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "wifistart false",
        "func": "flow.set(\"wifitouch_restart\", false)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "64b3cffd65824f25",
        "type": "json",
        "z": "c60a5166bd6dac41",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 840,
        "wires": [
            [
                "9db514f3f7a25d87"
            ]
        ]
    },
    {
        "id": "3008a66bb3d9c0a1",
        "type": "ui_button",
        "z": "c60a5166bd6dac41",
        "name": "Upload NS-Panel file",
        "group": "16c5a1ba154d7a03",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Upload NS-Panel file",
        "tooltip": "Upload a .tft file to flash onto a NS-Panel wifi screen",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "d04597ae6daf3391",
                "02ef6346fc803c18"
            ]
        ]
    },
    {
        "id": "d04597ae6daf3391",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "mkdir -p pekaway/userdata/NSPanel",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "create directory",
        "x": 340,
        "y": 1220,
        "wires": [
            [
                "797e540326abd362"
            ],
            [],
            []
        ]
    },
    {
        "id": "797e540326abd362",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "sudo ifconfig eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip eth0",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "849dc861be50c7c2"
            ],
            [],
            []
        ]
    },
    {
        "id": "849dc861be50c7c2",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\"+msg.payload+\":1880/uploadtft\"\n    return [msg, null]\n}\nelse {\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1220,
        "wires": [
            [
                "68a1f17a735987fa"
            ],
            [
                "aaa0d645623d6739"
            ]
        ]
    },
    {
        "id": "aaa0d645623d6739",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip wlan0",
        "x": 840,
        "y": 1280,
        "wires": [
            [
                "157d155e55fd2ecc"
            ],
            [],
            []
        ]
    },
    {
        "id": "68a1f17a735987fa",
        "type": "template",
        "z": "c60a5166bd6dac41",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div>\n    <p>\n        <a target=\"_blank\"href=\"{{ip}}\" style=\"text-align:center; color:white\">Click here to upload!</a>\n    </p>    \n</div>",
        "output": "str",
        "x": 860,
        "y": 1220,
        "wires": [
            [
                "3c2143187cded753"
            ]
        ]
    },
    {
        "id": "157d155e55fd2ecc",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\" + msg.payload +\":1880/uploadtft\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"An error occurred!\" \n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "68a1f17a735987fa"
            ],
            [
                "c7065060e942ccbe"
            ]
        ]
    },
    {
        "id": "c7065060e942ccbe",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "error",
        "x": 1130,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3c2143187cded753",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "upload link",
        "x": 1010,
        "y": 1220,
        "wires": [
            [
                "02ef6346fc803c18"
            ]
        ]
    },
    {
        "id": "02ef6346fc803c18",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "ls pekaway/userdata/NSPanel/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "search tft files",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "28e10b10087afd5f"
            ],
            [
                "e90fafef0d5d04b9"
            ],
            [
                "e90fafef0d5d04b9"
            ]
        ]
    },
    {
        "id": "28e10b10087afd5f",
        "type": "split",
        "z": "c60a5166bd6dac41",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 1340,
        "wires": [
            [
                "0b5a6930ed1a6eab"
            ]
        ]
    },
    {
        "id": "0b5a6930ed1a6eab",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "filter results",
        "func": "if (msg.payload != \"\"){\n    return msg \n}\nelse {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "49ec96dff9c03645"
            ]
        ]
    },
    {
        "id": "49ec96dff9c03645",
        "type": "join",
        "z": "c60a5166bd6dac41",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "mountpoint",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 750,
        "y": 1340,
        "wires": [
            [
                "78d5e071522ab232"
            ]
        ]
    },
    {
        "id": "e578b22b7c7d306f",
        "type": "ui_dropdown",
        "z": "c60a5166bd6dac41",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "No .tft files found",
        "group": "16c5a1ba154d7a03",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1060,
        "y": 1340,
        "wires": [
            [
                "cd389af689595421"
            ]
        ]
    },
    {
        "id": "78d5e071522ab232",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set placeholder",
        "func": "var failed\n\nif (msg.payload.message != null) {\n    failed = msg.payload.message.substring(0, 14)\n}\nelse {\n    failed = \"not failed\"\n}\n\nif (failed == \"Command failed\") {\n    msg.ui_control = {\"place\":\"found 0 tft files\"}\n    return msg\n} \n\nelse {\n    var files = msg.payload.length\n    msg.options = msg.payload\n    msg.payload = {}\n    node.send(msg)\n    msg.ui_control = {\"place\":\"found \"+files+\" tft files\"}\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1340,
        "wires": [
            [
                "e578b22b7c7d306f"
            ]
        ]
    },
    {
        "id": "e90fafef0d5d04b9",
        "type": "switch",
        "z": "c60a5166bd6dac41",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 1380,
        "wires": [
            [
                "78d5e071522ab232"
            ]
        ]
    },
    {
        "id": "cd389af689595421",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set file",
        "func": "flow.set(\"tftfile_NSPanel\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "1236645e5428ec6e",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "upload tft NSPanel file",
        "info": "",
        "x": 140,
        "y": 1180,
        "wires": []
    },
    {
        "id": "188b78d342f6b2b2",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "upload form for tft NSPanel file",
        "info": "",
        "x": 170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "41799cb843b00d18",
        "type": "http in",
        "z": "c60a5166bd6dac41",
        "name": "",
        "url": "/uploadtft",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "e3cad5921d09b0c2"
            ]
        ]
    },
    {
        "id": "e3cad5921d09b0c2",
        "type": "template",
        "z": "c60a5166bd6dac41",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    \n    :root {\n      --color-green-primary: rgb(51, 204, 51);\n      --color-green-secondary: rgb(26, 101, 26);\n      --color-red-primary: rgb(255, 0, 0);\n      --color-red-secondary: rgba(153,0,0,1);\n      --color-gray-primary: rgba(20,20,20,1);\n      --color-gray-secondary: rgba(65,65,65,1);\n      --color-text-headline: rgb(62, 206, 250);\n      --color-text-headline-secondary: rgb(31, 103, 125);\n      --color-text-primary: rgb(230, 226, 209);\n      --color-widget-border: rgb(84, 78, 78);\n      --color-sidebar-primary: rgba(26, 26, 26, 1)\n    }\n    \n    body {\n        height: 100%;\n        background: linear-gradient(180deg, var(--color-gray-primary)8%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n    }\n    \n    .uploadform {\n        position: absolute;\n        right: 50%;\n        bottom: 50%;\n        transform: translate(50%,50%);\n    }\n    .text {\n        color: var(--color-text-headline); \n    }\n    \n</style>\n\n<body>\n    <div class=\"uploadform\">\n        <h1 class=\"text\">Upload a file here:</h1>\n        \n        <form action=\"/uploadedtft\" method=\"POST\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"myFile\" />\n            <input type=\"submit\" value=\"Submit\">\n        </form>\n        \n        <h2 class=\"text\">Please make sure the filename does not contain any spaces!</h2>\n    </div>\n</body>",
        "output": "str",
        "x": 270,
        "y": 1080,
        "wires": [
            [
                "ceac38b6975cf28f"
            ]
        ]
    },
    {
        "id": "ceac38b6975cf28f",
        "type": "http response",
        "z": "c60a5166bd6dac41",
        "name": "",
        "x": 390,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8c03406073e738b1",
        "type": "template",
        "z": "c60a5166bd6dac41",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    \n    :root {\n      --color-green-primary: rgb(51, 204, 51);\n      --color-green-secondary: rgb(26, 101, 26);\n      --color-red-primary: rgb(255, 0, 0);\n      --color-red-secondary: rgba(153,0,0,1);\n      --color-gray-primary: rgba(20,20,20,1);\n      --color-gray-secondary: rgba(65,65,65,1);\n      --color-text-headline: rgb(62, 206, 250);\n      --color-text-headline-secondary: rgb(31, 103, 125);\n      --color-text-primary: rgb(230, 226, 209);\n      --color-widget-border: rgb(84, 78, 78);\n      --color-sidebar-primary: rgba(26, 26, 26, 1)\n    }\n    \n    body {\n        height: 100%;\n        background: linear-gradient(180deg, var(--color-gray-primary)8%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n    }\n    \n    .textform {\n        position: absolute;\n        right: 50%;\n        bottom: 50%;\n        transform: translate(50%,50%);\n        color: var(--color-text-headline);\n        text-align: center;\n    }\n    \n</style>\n\n<body>\n    <div class=\"textform\">\n        <p></p>File {{name}} uploaded to {{filename}}!</p>\n        <br>\n        <p>You can now close this window.</p>\n    </div>\n</body>",
        "output": "str",
        "x": 450,
        "y": 1120,
        "wires": [
            [
                "0929f591f25eed1f"
            ]
        ]
    },
    {
        "id": "0929f591f25eed1f",
        "type": "http response",
        "z": "c60a5166bd6dac41",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5938c5dfc18563f4",
        "type": "file",
        "z": "c60a5166bd6dac41",
        "name": "save tft file to folder ",
        "filename": "filename",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 490,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "eca2f43df9f7aa25",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "save buffer",
        "func": "msg.name = msg.req.files[0].originalname;\nmsg.filename = \"pekaway/userdata/NSPanel/\"+msg.req.files[0].originalname\nmsg.payload = msg.req.files[0].buffer\nnode.send([null, msg])\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1140,
        "wires": [
            [
                "8c03406073e738b1"
            ],
            [
                "5938c5dfc18563f4"
            ]
        ]
    },
    {
        "id": "cecce3b3952eb184",
        "type": "http in",
        "z": "c60a5166bd6dac41",
        "name": "",
        "url": "/uploadedtft",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "eca2f43df9f7aa25"
            ]
        ]
    },
    {
        "id": "c6b2588f0a13f453",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "Hardware buttons will send a payload on reboot, so we need to be able to filter them",
        "info": "",
        "x": 330,
        "y": 800,
        "wires": []
    },
    {
        "id": "7ecb9001c34efaef",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "Hardware buttons example",
        "info": "",
        "x": 150,
        "y": 700,
        "wires": []
    },
    {
        "id": "e07dcefe8b442887",
        "type": "ui_button",
        "z": "c60a5166bd6dac41",
        "name": "Flash NS Panel",
        "group": "16c5a1ba154d7a03",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Flash NS Panel",
        "tooltip": "Set the file that will be uploaded to the NS Panel",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "4f4a30fa91c892bb"
            ]
        ]
    },
    {
        "id": "683b101dbf175051",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 560,
        "y": 1720,
        "wires": [
            [
                "614df80949c0d63b"
            ]
        ]
    },
    {
        "id": "4f4a30fa91c892bb",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set popup payload",
        "func": "msg.backupfile = flow.get(\"tftfile_NSPanel\")\n\nif (flow.get(\"tftfile_NSPanel\") == null) {\n    msg.payload = \"No .tft file selected!\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"Are you sure you want to flash file '\" + flow.get(\"tftfile_NSPanel\") + \"' to the Panel?\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1700,
        "wires": [
            [
                "83e8f30a3cb88607"
            ],
            [
                "683b101dbf175051"
            ]
        ]
    },
    {
        "id": "83e8f30a3cb88607",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no file selected",
        "x": 560,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "c404e332ca55ebbb",
        "type": "ui_button",
        "z": "c60a5166bd6dac41",
        "name": "Install Berry Driver",
        "group": "16c5a1ba154d7a03",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Install Berry Driver",
        "tooltip": "Berry Driver is needed for NSPanel, has to be done only once",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1600,
        "wires": [
            [
                "6db823e5b54d0e89"
            ]
        ]
    },
    {
        "id": "46caa82ae3fd5d72",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    msg.payload = \"Please activate the panel screen, press OK and check if the panel restarts! <br> If it restarts, the driver should be installed successfully.\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1600,
        "wires": [
            [
                "f1b8d8fb46ac8e42"
            ]
        ]
    },
    {
        "id": "6db823e5b54d0e89",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set popup payload",
        "func": "msg.payload = \"Do you want to install the \\\"berry driver\\\" on the NSPanel?<br>(Only needed when never done before)\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "47a2f53e14ef3ff3"
            ]
        ]
    },
    {
        "id": "47a2f53e14ef3ff3",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 560,
        "y": 1600,
        "wires": [
            [
                "46caa82ae3fd5d72"
            ]
        ]
    },
    {
        "id": "33999b39889b1ace",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "berry driver",
        "func": "msg.topic = \"cmnd/WifiTouch/Backlog\"\nmsg.payload = \"UrlFetch http://pekaway.local/autoexec.be; Restart 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1600,
        "wires": [
            [
                "4080c3fd73e7a539"
            ]
        ]
    },
    {
        "id": "f1b8d8fb46ac8e42",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "install driver",
        "x": 990,
        "y": 1600,
        "wires": [
            [
                "33999b39889b1ace"
            ]
        ]
    },
    {
        "id": "b1a30dad510deccb",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "install berry driver",
        "info": "",
        "x": 120,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4080c3fd73e7a539",
        "type": "mqtt out",
        "z": "c60a5166bd6dac41",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0ddb07c65cbb68bc",
        "x": 1450,
        "y": 1600,
        "wires": []
    },
    {
        "id": "614df80949c0d63b",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    var tftfile = flow.get(\"tftfile_NSPanel\")\n    msg.payload = \"cp -rf ~/pekaway/userdata/NSPanel/\" + tftfile + \" ~/pekaway/VanPI_NSPANEL.tft\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1700,
        "wires": [
            [
                "56354413d78a91e4"
            ]
        ]
    },
    {
        "id": "56354413d78a91e4",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 970,
        "y": 1700,
        "wires": [
            [],
            [],
            [
                "9598c82698c703f7"
            ]
        ]
    },
    {
        "id": "a4fea50ab6c8baf9",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "file set",
        "x": 1310,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "9598c82698c703f7",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set popup",
        "func": "if (msg.payload.code == 0) {\n    msg.payload = \"Panel should now flash, please check the panel!\"\n}\nelse {\n    msg.topic = \"There was an error setting the right file:\"\n    msg.payload = msg.payload.message\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1700,
        "wires": [
            [
                "a4fea50ab6c8baf9",
                "d92361a925f9506f"
            ]
        ]
    },
    {
        "id": "d92361a925f9506f",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "tft file",
        "func": "msg.topic = \"cmnd/WifiTouch/FlashNextion\"\nmsg.payload = \"http://pekaway.local/nspaneltft\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1660,
        "wires": [
            [
                "4080c3fd73e7a539"
            ]
        ]
    },
    {
        "id": "3dbb9d451deef3b0",
        "type": "comment",
        "z": "c60a5166bd6dac41",
        "name": "flash .tft file to NSPanel",
        "info": "",
        "x": 140,
        "y": 1660,
        "wires": []
    },
    {
        "id": "d3cd8aa5bf7d0314",
        "type": "ui_button",
        "z": "c60a5166bd6dac41",
        "name": "Download default .tft file",
        "group": "16c5a1ba154d7a03",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Download default .tft file",
        "tooltip": "Downloads the default VanPi_NSPanel.tft file and berry driver for the Sonoff NS Panel from the internet",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1480,
        "wires": [
            [
                "de055359dea0c1a0"
            ]
        ]
    },
    {
        "id": "de055359dea0c1a0",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "set popup payload",
        "func": "msg.payload = \"Do you want to download the \\\"berry driver\\\" and Pekaway .tft file for the NSPanel?<br>(Internet connection needed)\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1480,
        "wires": [
            [
                "267fef3496c22636"
            ]
        ]
    },
    {
        "id": "267fef3496c22636",
        "type": "ui_toast",
        "z": "c60a5166bd6dac41",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 560,
        "y": 1480,
        "wires": [
            [
                "6caa8a2226b006e6"
            ]
        ]
    },
    {
        "id": "6caa8a2226b006e6",
        "type": "function",
        "z": "c60a5166bd6dac41",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    msg.payload = \"rm ~/pekaway/VanPI_NSPANEL.tft & rm ~/pekaway/autoexec.be & cd ~/pekaway && wget -o /dev/null -N https://git.pekaway.de/Vincent/vanpi/-/raw/main/pi4/NSPanel/autoexec.be & mkdir -p ~/pekaway/userdata/NSPanel && cd ~/pekaway/userdata/NSPanel && wget -o /dev/null -N https://git.pekaway.de/Vincent/vanpi/-/raw/main/pi4/NSPanel/VanPI_NSPANEL.tft\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1480,
        "wires": [
            [
                "72c97f10c004d332"
            ]
        ]
    },
    {
        "id": "72c97f10c004d332",
        "type": "exec",
        "z": "c60a5166bd6dac41",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 970,
        "y": 1480,
        "wires": [
            [
                "02ef6346fc803c18"
            ],
            [],
            []
        ]
    },
    {
        "id": "76b74d08b3a65108",
        "type": "link in",
        "z": "c60a5166bd6dac41",
        "name": "Switch to Update tab",
        "links": [
            "ad8661b48ea2508f"
        ],
        "x": 165,
        "y": 1260,
        "wires": [
            [
                "02ef6346fc803c18"
            ]
        ]
    },
    {
        "id": "4096a22.20e845c",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "group": "f06428cbbee24a1a",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "USB/ETH off",
        "tooltip": "only works on raspberry 3 ",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "5b6db0c3.080d9",
                "e67fe614.c46348"
            ]
        ]
    },
    {
        "id": "1cc8fc3f.c4d5a4",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "group": "f06428cbbee24a1a",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "USB/ETH on",
        "tooltip": "only works on raspberry 3 ",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "2694ec7d.845714",
                "22892ace.42b066"
            ]
        ]
    },
    {
        "id": "2694ec7d.845714",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo echo '1-1'|sudo tee /sys/bus/usb/drivers/usb/bind",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5b6db0c3.080d9",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo echo '1-1'|sudo tee /sys/bus/usb/drivers/usb/unbind",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "43c93106.62c6",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "581519e1.3431d8",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UPDATE Relay Names",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 1260,
        "wires": [
            [
                "f3b81ce4.96da8",
                "9ddfd8e4.663928"
            ]
        ]
    },
    {
        "id": "f3b81ce4.96da8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relayupdate",
        "mode": "link",
        "links": [
            "478c01f0.b35c1",
            "51224a1fccb5c5f9"
        ],
        "x": 475,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3dc72404.c0717c",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "581519e1.3431d8",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Relay INIT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1370,
        "y": 2600,
        "wires": [
            [
                "76297bd2.47bcf4",
                "4f895cd2.d2ebd4"
            ]
        ]
    },
    {
        "id": "76297bd2.47bcf4",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set all relays to false",
        "func": "global.set(\"one\", false);\nglobal.set(\"two\", false);\nglobal.set(\"three\", false);\nglobal.set(\"four\", false);\nglobal.set(\"five\", false);\nglobal.set(\"six\", false);\nglobal.set(\"seven\", false);\nglobal.set(\"eight\", false);\nglobal.set(\"nine\", false);\nglobal.set(\"ten\", false);\nglobal.set(\"Wone\", false);\nglobal.set(\"Wtwo\", false);\nglobal.set(\"Wthree\", false);\nglobal.set(\"Wfour\", false);\nglobal.set(\"Wfive\", false);\nglobal.set(\"Wsix\", false);\nglobal.set(\"Wseven\", false);\nglobal.set(\"Weight\", false);\nglobal.set(\"dimmer0\", 0);\nglobal.set(\"dimmer1\", 0);\nglobal.set(\"dimmer2\", 0);\nglobal.set(\"dimmer3\", 0);\nglobal.set(\"dimmer4\", 0);\nglobal.set(\"dimmer5\", 0);\nglobal.set(\"dimmer6\", 0);\nglobal.set(\"dimmer7\", 0);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "a1972ee9.29679",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Temperatur 1 Name",
        "tooltip": "",
        "group": "3c103828.22b0b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 300,
        "y": 1360,
        "wires": [
            [
                "c7186a00.1f8008"
            ]
        ]
    },
    {
        "id": "86b60f60.a8355",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Temperatur 2 Name",
        "tooltip": "",
        "group": "3c103828.22b0b8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 300,
        "y": 1400,
        "wires": [
            [
                "bf524e30.aee3a"
            ]
        ]
    },
    {
        "id": "9cf97778.139118",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Temperatur 3 Name",
        "tooltip": "",
        "group": "3c103828.22b0b8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1020,
        "y": 1360,
        "wires": [
            [
                "32d6ddd1.a8cf42"
            ]
        ]
    },
    {
        "id": "791aeec7.321cb",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Temperatur 4 Name",
        "tooltip": "",
        "group": "3c103828.22b0b8",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1020,
        "y": 1400,
        "wires": [
            [
                "bd039661.518338"
            ]
        ]
    },
    {
        "id": "3c20ffb4.4a08d",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "3c103828.22b0b8",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "GET TEMP SENSORS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-thermometer-empty",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 2580,
        "wires": [
            [
                "8b8c6d08.c2264",
                "822fb891.c1f2b8",
                "41ec96e0.4009b8"
            ]
        ]
    },
    {
        "id": "eaaee3eb.1855",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "status holen",
        "func": "var check = global.get(\"temp3\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 2580,
        "wires": [
            [
                "7bc5b5a1.1ba19c"
            ]
        ]
    },
    {
        "id": "8b8c6d08.c2264",
        "type": "trigger",
        "z": "67973ee8.553c3",
        "name": "",
        "op1": "true",
        "op2": "0",
        "op1type": "bool",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 510,
        "y": 2580,
        "wires": [
            [
                "eaaee3eb.1855",
                "d16b7f60.c216e",
                "d48c5630.c008c8",
                "27dfd396.69dffc",
                "4b1b92e.a05af6c"
            ]
        ]
    },
    {
        "id": "d16b7f60.c216e",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "status holen",
        "func": "var check = global.get(\"temp1\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2500,
        "wires": [
            [
                "59702ff5.ca82"
            ]
        ]
    },
    {
        "id": "59702ff5.ca82",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "3c103828.22b0b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temp1",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2500,
        "wires": []
    },
    {
        "id": "d48c5630.c008c8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "status holen",
        "func": "var check = global.get(\"temp2\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 2540,
        "wires": [
            [
                "7f0205e6.7d73cc"
            ]
        ]
    },
    {
        "id": "7f0205e6.7d73cc",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "3c103828.22b0b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temp2",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2540,
        "wires": []
    },
    {
        "id": "7bc5b5a1.1ba19c",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "3c103828.22b0b8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temp3",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2580,
        "wires": []
    },
    {
        "id": "e9a6c3da.d93d",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "3c103828.22b0b8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temp4",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 2620,
        "wires": []
    },
    {
        "id": "4b1b92e.a05af6c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "status holen",
        "func": "var check = global.get(\"temp4\");\n\n\n\nmsg.payload = check;  \nreturn msg;\n   \n    \n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 2620,
        "wires": [
            [
                "e9a6c3da.d93d"
            ]
        ]
    },
    {
        "id": "27dfd396.69dffc",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "40",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 2620,
        "wires": [
            [
                "9cbdd980.0a8718"
            ]
        ]
    },
    {
        "id": "9cbdd980.0a8718",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.reset = true; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2620,
        "wires": [
            [
                "8b8c6d08.c2264"
            ]
        ]
    },
    {
        "id": "a960af57.82ed2",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/tempsensor1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 700,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "f44691ed.3a89b",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/tempsensor2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 700,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "ac2e89e2.650558",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/tempsensor3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1380,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "229510f6.d7b4b",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/tempsensor4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1380,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "fe04a8b0.84a428",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "update temp names",
        "group": "3c103828.22b0b8",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UPDATE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 300,
        "y": 1440,
        "wires": [
            [
                "e4c25345.3dbbb",
                "5463afc1.d4cb6"
            ]
        ]
    },
    {
        "id": "e4c25345.3dbbb",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "Updatetempsensor name",
        "links": [
            "32ccfc50.e148f4",
            "3f4ef597.ad8bba",
            "e627c2cc.eae28",
            "eba153df.39d1c"
        ],
        "x": 435,
        "y": 1480,
        "wires": []
    },
    {
        "id": "822fb891.c1f2b8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "",
        "links": [
            "9e42b9a5.058028"
        ],
        "x": 355,
        "y": 2500,
        "wires": []
    },
    {
        "id": "5dd20084.204d4",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "f06428cbbee24a1a",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-power-off",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "5a358113.ba58b"
            ]
        ]
    },
    {
        "id": "11aef79d.9491c8",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo halt",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 940,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fbc74dc0.2725b",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Level 1 Name",
        "tooltip": "",
        "group": "1032e8ff.e5a657",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 300,
        "y": 1640,
        "wires": [
            [
                "8e534e5e.25926"
            ]
        ]
    },
    {
        "id": "a3e020c.60f03e",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Level 2 Name",
        "tooltip": "",
        "group": "1032e8ff.e5a657",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 300,
        "y": 1680,
        "wires": [
            [
                "65ec58d8.2e20d8"
            ]
        ]
    },
    {
        "id": "3385db85.c65384",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Level 3 Name",
        "tooltip": "",
        "group": "1032e8ff.e5a657",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 300,
        "y": 1720,
        "wires": [
            [
                "bf991faf.6b7e3"
            ]
        ]
    },
    {
        "id": "3657d220.a1d6ae",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Level 4 Name",
        "tooltip": "",
        "group": "1032e8ff.e5a657",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 300,
        "y": 1760,
        "wires": [
            [
                "a0728574.b88808"
            ]
        ]
    },
    {
        "id": "95b65521.330658",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/level1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "f948d883.ddefa8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/level2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "1b4df6b1.d5d079",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/level3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "44863f4d.c23ab",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/level4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "28630cf0.2972b4",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "update level names",
        "group": "1032e8ff.e5a657",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UPDATE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 250,
        "y": 1800,
        "wires": [
            [
                "58c59868.e875c8",
                "1a3fe2e8.25e9cd"
            ]
        ]
    },
    {
        "id": "58c59868.e875c8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "linklevel",
        "links": [
            "1f558d99.646cd2",
            "3f4ef597.ad8bba"
        ],
        "x": 415,
        "y": 1840,
        "wires": []
    },
    {
        "id": "71f86e8a.62c81",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Heater Connect Relay",
        "tooltip": "uses heating timer to turn on/off given relaynumber (seperated by comma)",
        "group": "581519e1.3431d8",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "600",
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "8fd09920.7326c8",
                "f04ab494.8fd7a8"
            ]
        ]
    },
    {
        "id": "8fd09920.7326c8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/heatconnect",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 560,
        "y": 2800,
        "wires": [
            [
                "9f4939c57812b402"
            ]
        ]
    },
    {
        "id": "f04ab494.8fd7a8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"heatconnectrelay\", str);\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "133af121.6cebdf",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "f06428cbbee24a1a",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "8a57cd00.34a5"
            ]
        ]
    },
    {
        "id": "6c61cf4f.ced54",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 930,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "307d869f.1c90fa",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "d": true,
        "group": "f06428cbbee24a1a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "System time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1710,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d36d3f1f.0f445",
        "type": "function",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "new Date()",
        "func": "var now = new Date().toLocaleString();\nmsg.payload = now.replace(/\\//g, \".\");\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1620,
        "wires": [
            [
                "307d869f.1c90fa"
            ]
        ]
    },
    {
        "id": "2f3fe90f.6cc036",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 670,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "9ddfd8e4.663928",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"New relaynames set!\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1260,
        "wires": [
            [
                "2f3fe90f.6cc036"
            ]
        ]
    },
    {
        "id": "bb47adcd.38da9",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1790,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4f895cd2.d2ebd4",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"relays initialised!\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2600,
        "wires": [
            [
                "bb47adcd.38da9"
            ]
        ]
    },
    {
        "id": "b0bf63af.d458e",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "5463afc1.d4cb6",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set new names",
        "func": "msg.payload =\"set new temp names\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1440,
        "wires": [
            [
                "b0bf63af.d458e"
            ]
        ]
    },
    {
        "id": "7a4fd53d.ac867c",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "41ec96e0.4009b8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"Reading temps each second for 1 minute!\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "7a4fd53d.ac867c"
            ]
        ]
    },
    {
        "id": "28735428.77a0ac",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 620,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "1a3fe2e8.25e9cd",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "updated",
        "func": "msg.payload =\"waterlevel names updated\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1800,
        "wires": [
            [
                "28735428.77a0ac"
            ]
        ]
    },
    {
        "id": "55642e47.2f49d",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e67fe614.c46348",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"new Shunt : \"+msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "55642e47.2f49d"
            ]
        ]
    },
    {
        "id": "a2447223.1d831",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "22892ace.42b066",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"new Shunt : \"+msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "a2447223.1d831"
            ]
        ]
    },
    {
        "id": "d701e2af.c2f27",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "e97d4b68.6d1a18"
            ]
        ]
    },
    {
        "id": "8a57cd00.34a5",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"Do you want to reboot?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "d701e2af.c2f27"
            ]
        ]
    },
    {
        "id": "e97d4b68.6d1a18",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if(msg.payload==\"OK\")\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "6c61cf4f.ced54"
            ]
        ]
    },
    {
        "id": "3ac2e4b4.95e22c",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "cancel",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "e23c8305.b5711"
            ]
        ]
    },
    {
        "id": "5a358113.ba58b",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"Do you want to shut down?\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 340,
        "wires": [
            [
                "3ac2e4b4.95e22c"
            ]
        ]
    },
    {
        "id": "e23c8305.b5711",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if(msg.payload==\"OK\")\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            [
                "11aef79d.9491c8"
            ]
        ]
    },
    {
        "id": "21b9d534.3f5c5a",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "updateConf",
        "x": 1710,
        "y": 3140,
        "wires": [
            [
                "8163174e.299938"
            ],
            [],
            []
        ]
    },
    {
        "id": "60faf8c.0f21308",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "/etc/hostapd/hostapd.conf",
        "func": "var template = `sudo tee /etc/hostapd/hostapd.conf <<EOF\ncountry_code=DE\ninterface=wlan0\n${msg.payload.ssid}\nhw_mode=g\nchannel=6\nmacaddr_acl=0\nauth_algs=1\nignore_broadcast_ssid=0\nwpa=2\n${msg.payload.wpa}\nwpa_key_mgmt=WPA-PSK\nwpa_pairwise=TKIP\nrsn_pairwise=CCMP\nctrl_interface=/var/run/hostapd\nctrl_interface_group=0\n\n\nEOF\\n\n`\n\nmsg.payload = template\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 3140,
        "wires": [
            [
                "21b9d534.3f5c5a"
            ]
        ]
    },
    {
        "id": "8163174e.299938",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo systemctl reboot",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1900,
        "y": 3140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "66eb2706.ca67a8",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "WIFI-Name (SSID)",
        "tooltip": "",
        "group": "b6314699.049798",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 190,
        "y": 3060,
        "wires": [
            [
                "9fb25143.1e806"
            ]
        ]
    },
    {
        "id": "4abe07c1.3c4398",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Wifi passphrase",
        "tooltip": "",
        "group": "b6314699.049798",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 180,
        "y": 3020,
        "wires": [
            [
                "6d39e770.fe7cb8"
            ]
        ]
    },
    {
        "id": "9fb25143.1e806",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "global set ssid",
        "func": "msg.payload = msg.payload +\"_pekaway\";\n\nglobal.set(\"ssid\",msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "6d39e770.fe7cb8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "global set wpa",
        "func": "\nglobal.set(\"wpa\",msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "b9046a97.664788",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "b6314699.049798",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update WIFI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 3100,
        "wires": [
            [
                "132b987b.c9c818"
            ]
        ]
    },
    {
        "id": "3a0f21dd.2b7cee",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 3140,
        "wires": [
            [
                "f1b37b85.53ca08"
            ]
        ]
    },
    {
        "id": "f1b37b85.53ca08",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "confirmed",
        "func": "if(msg.payload==\"OK\") {\n    \n    var ssid = global.get(\"ssid\");\n    var wpa = global.get(\"wpa\");\n    \n    msg.payload =\"Your system will be set to WIFI \\n NAME: \" + ssid + \" with passphrase: \" + wpa + \".\\n  Raspberry Pi will reboot to adopt to the new settings, please stand by.\"; \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3140,
        "wires": [
            [
                "cb1ce267.97145"
            ]
        ]
    },
    {
        "id": "cb1ce267.97145",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 3140,
        "wires": [
            [
                "9697df58.da1fd"
            ]
        ]
    },
    {
        "id": "9697df58.da1fd",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set payload",
        "func": "var ssid = \"ssid=\"+ global.get(\"ssid\");\nvar wpa = \"wpa_passphrase=\"+global.get(\"wpa\");\n\nif(msg.payload==\"OK\")\n{\nmsg.payload = {\"ssid\":ssid,\n             \"wpa\":wpa};\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3140,
        "wires": [
            [
                "60faf8c.0f21308",
                "5aae899b.dd14b8"
            ]
        ]
    },
    {
        "id": "3565d12f.78d6be",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "",
        "x": 1200,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "2423c6cc.5feaca",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Wifi Relays",
        "tooltip": "toggle wifi-relays on/off",
        "group": "22cf294bc3fa89ec",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 770,
        "y": 3840,
        "wires": [
            [
                "a9a68fae.95ca6",
                "3f4a5376.33decc",
                "e592955d.14c758",
                "5374c7d8.60f108"
            ]
        ]
    },
    {
        "id": "a532ea7e.26e568",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 1",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 260,
        "y": 820,
        "wires": [
            [
                "34989457b37ba41c"
            ]
        ]
    },
    {
        "id": "f21173d1.b7e2",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 2",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 860,
        "wires": [
            [
                "7e5dd808caf3ab80"
            ]
        ]
    },
    {
        "id": "87a6e9a1.831058",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 3",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 900,
        "wires": [
            [
                "3bf82db623790dae"
            ]
        ]
    },
    {
        "id": "f4e37d02.b4d79",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 4",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 940,
        "wires": [
            [
                "b35d7482a80d8a21"
            ]
        ]
    },
    {
        "id": "a0e08ba7.a96ca8",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 5",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 980,
        "wires": [
            [
                "85d8a510243ed37c"
            ]
        ]
    },
    {
        "id": "a745d5e6.e4ccf8",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 6",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 260,
        "y": 1020,
        "wires": [
            [
                "aefa1bb47c92cf22"
            ]
        ]
    },
    {
        "id": "2b70e65a.8006da",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 7",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 1060,
        "wires": [
            [
                "6c2c736dc2343a4e"
            ]
        ]
    },
    {
        "id": "92ebf03e.2a1f3",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relay 8",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "24a53655b9ad63d3"
            ]
        ]
    },
    {
        "id": "650ba9b9.bcbab8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "b01dea90.4b73d8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "673f9b64.ec2644",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "36414bc3.9061f4",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "c246b726.ae57a8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "58df7b5a.591b94",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "457295c0.90b69c",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name8",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "e58353f0.77e45",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "3aecf4d1.8a4b2c",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Raspi Settings",
        "info": "",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "6fb6f913.295448",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Name Settings",
        "info": "",
        "x": 220,
        "y": 780,
        "wires": []
    },
    {
        "id": "32d37ccf.dfe3f4",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Wifi SSID Settings",
        "info": "",
        "x": 190,
        "y": 2980,
        "wires": []
    },
    {
        "id": "52ec021f.c066ec",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Wifi-Relays & Dimmer Show Hide",
        "info": "",
        "x": 330,
        "y": 3700,
        "wires": []
    },
    {
        "id": "2c550a99.a83376",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "System Settings",
        "info": "",
        "x": 190,
        "y": 2540,
        "wires": []
    },
    {
        "id": "a9a68fae.95ca6",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wifirelay",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1010,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "3f4a5376.33decc",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "show/hide",
        "func": "global.set(\"wifirelay\", msg.payload); \n\nif(msg.payload === true) {\n    msg.payload={\"group\":{\"show\":[\"Switches_WIFI\",\"Switches_Settings_Wifi_Relay_Name\"]}};\n}\nelse if(msg.payload === false) {\n    msg.payload={\"group\":{\"hide\":[\"Switches_WIFI\",\"Switches_Settings_Wifi_Relay_Name\"]}};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3740,
        "wires": [
            [
                "3565d12f.78d6be"
            ]
        ]
    },
    {
        "id": "d24a3116.8a4af",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "to 4portwifi",
        "links": [
            "6aecacba.fd3994",
            "7e47707c.5fe7b"
        ],
        "x": 1155,
        "y": 3780,
        "wires": []
    },
    {
        "id": "e592955d.14c758",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "start dhcp search",
        "func": "if(msg.payload===true)\n{\n    global.set(\"wifirelay\",true);\n      global.set(\"wifirelayconnect\",false);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 3780,
        "wires": [
            [
                "d24a3116.8a4af"
            ]
        ]
    },
    {
        "id": "e83f84ce.9bb588",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "label": "Relay 10",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "99ad4eecf4c92220"
            ]
        ]
    },
    {
        "id": "63b739c3.64ea88",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "label": "Relay 9",
        "tooltip": "",
        "group": "581519e1.3431d8",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 260,
        "y": 1140,
        "wires": [
            [
                "0203e81fae960aca"
            ]
        ]
    },
    {
        "id": "509181b6.e2614",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name10",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "61e384a6.28671c",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relay_name9",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "6b6641d3.70cd9",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 1",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 820,
        "wires": [
            [
                "a1db71584261a3d9"
            ]
        ]
    },
    {
        "id": "3acc317.3f09ace",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 2",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1170,
        "y": 860,
        "wires": [
            [
                "c9daedb8c69302ea"
            ]
        ]
    },
    {
        "id": "4560845c.0f056c",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 3",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 900,
        "wires": [
            [
                "472e024995eeab41"
            ]
        ]
    },
    {
        "id": "b23bd3ea.3d33d",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 4",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1170,
        "y": 940,
        "wires": [
            [
                "abbaac35377750a5"
            ]
        ]
    },
    {
        "id": "309c5f90.5e4b1",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "e5500cd0.0a33d",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "16a26d87.c605c2",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "34742d8f.d7f642",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d15bb676.1d4538",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "c3c4f964.612a28",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UPDATE Wifi-Relay Names",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 940,
        "y": 1260,
        "wires": [
            [
                "d3a64b0d.8d56b8",
                "cbe4593e.097ad8"
            ]
        ]
    },
    {
        "id": "d3a64b0d.8d56b8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wifirelayupdate",
        "mode": "link",
        "links": [
            "6e88cc4bca0a8995",
            "7e47707c.5fe7b"
        ],
        "x": 1135,
        "y": 1300,
        "wires": []
    },
    {
        "id": "86a89709.242dd8",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1370,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cbe4593e.097ad8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"New Wifirelaynames set!\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1260,
        "wires": [
            [
                "86a89709.242dd8"
            ]
        ]
    },
    {
        "id": "7c3065e9.6236dc",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wpasettings",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 410,
        "y": 3260,
        "wires": [
            [
                "333d80f9.6331a"
            ]
        ]
    },
    {
        "id": "eb054671.b363b8",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "b6314699.049798",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show Wifi Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 190,
        "y": 3260,
        "wires": [
            [
                "7c3065e9.6236dc"
            ]
        ]
    },
    {
        "id": "5aae899b.dd14b8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wpasettings",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1480,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "15d81949.d144a7",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "333d80f9.6331a",
        "type": "json",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 3260,
        "wires": [
            [
                "7b1d30bc.7657b"
            ]
        ]
    },
    {
        "id": "7b1d30bc.7657b",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set payload",
        "func": "msg.payload = msg.payload.ssid + \" - \" + msg.payload.wpa;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3260,
        "wires": [
            [
                "15d81949.d144a7"
            ]
        ]
    },
    {
        "id": "34c70350.197c7c",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "c3c4f964.612a28",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 3860,
        "wires": []
    },
    {
        "id": "8c69aa07.a8e928",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set status",
        "func": "\nif(global.get(\"IPWIFI4Port\")!== 0 && global.get(\"wifirelayconnect\")===true)\nmsg.payload=\"connected\"\nelse\nmsg.payload=\"not connected\"\n\nif(global.get(\"wifirelayconnect\")== 3)\nmsg.payload = \"checking connection\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3860,
        "wires": [
            [
                "34c70350.197c7c"
            ]
        ]
    },
    {
        "id": "5374c7d8.60f108",
        "type": "trigger",
        "z": "67973ee8.553c3",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1020,
        "y": 3860,
        "wires": [
            [
                "8c69aa07.a8e928",
                "ac5af5c0.eeb438"
            ]
        ]
    },
    {
        "id": "1f639381.ddbffc",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1010,
        "y": 3900,
        "wires": [
            [
                "5374c7d8.60f108"
            ]
        ]
    },
    {
        "id": "ac5af5c0.eeb438",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "reset",
        "func": "msg.reset = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3900,
        "wires": [
            [
                "1f639381.ddbffc"
            ]
        ]
    },
    {
        "id": "976e3078.67044",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "",
        "x": 1640,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e15d3797.d77238",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Relayboard",
        "tooltip": "",
        "group": "22cf294bc3fa89ec",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1170,
        "y": 1140,
        "wires": [
            [
                "1df8f4d8.79972b",
                "5f148948.035418"
            ]
        ]
    },
    {
        "id": "1df8f4d8.79972b",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/stdrelay",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1424,
        "y": 1178,
        "wires": [
            []
        ]
    },
    {
        "id": "5f148948.035418",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if(msg.payload === true)\n{\n msg.payload={\"group\":{\"show\":[\"Switches_Switches\",\"Switches_Settings_Relay_Name\"]}};\n}\n\n\nif(msg.payload === false)\n {\n msg.payload={\"group\":{\"hide\":[\"Switches_Switches\",\"Switches_Settings_Relay_Name\"]}};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1392,
        "y": 1141,
        "wires": [
            [
                "976e3078.67044"
            ]
        ]
    },
    {
        "id": "132b987b.c9c818",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "var ssid = global.get(\"ssid\");\nvar wpa = global.get(\"wpa\");\n\nif( ssid == \"\" || wpa == \"\")\nmsg.payload = true;\nelse\nmsg.payload = false;\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3100,
        "wires": [
            [
                "4414467.adf75b8"
            ]
        ]
    },
    {
        "id": "4414467.adf75b8",
        "type": "switch",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 3100,
        "wires": [
            [
                "455dabf6.f1e884"
            ],
            [
                "d86f3407.1ca778"
            ]
        ]
    },
    {
        "id": "d86f3407.1ca778",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "show warning",
        "func": "\nmsg.payload = \"The network connection will be altered and RPI will reboot. Do you want to continue?\";\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 3140,
        "wires": [
            [
                "3a0f21dd.2b7cee"
            ]
        ]
    },
    {
        "id": "c37fba16.42b528",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "455dabf6.f1e884",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "ssid/wpa not set",
        "func": "\nmsg.payload = \"Please set SSID and Passphrase first.\";\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 3100,
        "wires": [
            [
                "c37fba16.42b528"
            ]
        ]
    },
    {
        "id": "c7186a00.1f8008",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp1\", str);\n \n return msg\n  \n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "a960af57.82ed2"
            ]
        ]
    },
    {
        "id": "32d6ddd1.a8cf42",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp3\", str);\n  \n return msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 1360,
        "wires": [
            [
                "ac2e89e2.650558"
            ]
        ]
    },
    {
        "id": "bf524e30.aee3a",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp2\", str);\n  \n  return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "f44691ed.3a89b"
            ]
        ]
    },
    {
        "id": "bd039661.518338",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"Ntemp4\", str);\n  \n  return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1400,
        "wires": [
            [
                "229510f6.d7b4b"
            ]
        ]
    },
    {
        "id": "8e534e5e.25926",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n  msg.payload = \"Level 1\"\n}\nvar str = msg.payload;\n\nglobal.set(\"NLevel1\", str);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "95b65521.330658"
            ]
        ]
    },
    {
        "id": "65ec58d8.2e20d8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Level 2\"\n}\nvar str = msg.payload;\n\nglobal.set(\"NLevel2\", str); \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1680,
        "wires": [
            [
                "f948d883.ddefa8"
            ]
        ]
    },
    {
        "id": "bf991faf.6b7e3",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Level 3\"\n}\nvar str = msg.payload;\n\nglobal.set(\"NLevel3\", str);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "1b4df6b1.d5d079"
            ]
        ]
    },
    {
        "id": "a0728574.b88808",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Level 4\"\n}\nvar str = msg.payload;\n\nglobal.set(\"NLevel4\", str);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "44863f4d.c23ab"
            ]
        ]
    },
    {
        "id": "b6d8e984.954568",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "inside temp sensor",
        "label": "Inside Temp.",
        "tooltip": "set sensor for heater room temperatur control",
        "place": "Select option",
        "group": "3c103828.22b0b8",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Temp1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Temp2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Temp3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Temp4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Dimmytemp1",
                "value": "5",
                "type": "str"
            },
            {
                "label": "Dimmytemp2",
                "value": "6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 230,
        "y": 1520,
        "wires": [
            [
                "7963c241.48f1dc"
            ]
        ]
    },
    {
        "id": "7963c241.48f1dc",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"heattempsensor\", str);\n  \n return msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1520,
        "wires": [
            [
                "298b3e3f.9dd672",
                "399cfdd3.1ac542"
            ]
        ]
    },
    {
        "id": "2d96e8.2c96e918",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "heatertempsensor",
        "links": [
            "ac1d11c9.c81a7",
            "c96e193f08c63741",
            "f598506a66563ad0"
        ],
        "x": 775,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7b00c6ec.fe47e8",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 723,
        "y": 1558,
        "wires": [
            []
        ]
    },
    {
        "id": "298b3e3f.9dd672",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "updated",
        "func": "msg.payload =\"heater sensor updated\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 571,
        "y": 1557,
        "wires": [
            [
                "7b00c6ec.fe47e8"
            ]
        ]
    },
    {
        "id": "b93f567c.b64d48",
        "type": "ui_slider",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "hysteresis",
        "tooltip": "",
        "group": "3c103828.22b0b8",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "2",
        "max": "8",
        "step": 1,
        "className": "",
        "x": 1900,
        "y": 1900,
        "wires": [
            [
                "664f77bb.262658"
            ]
        ]
    },
    {
        "id": "664f77bb.262658",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": " var str = msg.payload;\n\n global.set(\"hysteresis\", str);\n  \n return msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1900,
        "wires": [
            [
                "76126b6b.0a18a4"
            ]
        ]
    },
    {
        "id": "399cfdd3.1ac542",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/heattempsensor",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1520,
        "wires": [
            [
                "2d96e8.2c96e918"
            ]
        ]
    },
    {
        "id": "76126b6b.0a18a4",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/hysteresis",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2230,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "4b928b46.123ae4",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "VANPI Shunt",
        "tooltip": "",
        "group": "00c90244e8033802",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 470,
        "y": 2900,
        "wires": [
            [
                "be06b78e.767668",
                "5e8bcabd2d44273c",
                "b02ef607f0a0cf56"
            ]
        ]
    },
    {
        "id": "be06b78e.767668",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/pekwayShuntactive",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 800,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "79a6a7cf.134c68",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set Van Name",
        "tooltip": "Put your Van-Name on the Startpage of the display",
        "group": "bc06df1c.ad422",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "c631356c.5b1368"
            ]
        ]
    },
    {
        "id": "c631356c.5b1368",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "change van name",
        "func": "var buf = [];\nglobal.set(\"van_name\", msg.payload)\nmsg.payload = \"t07.txt=\\\"\"+msg.payload+\"\\\"\"\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n  var ascii =str.charCodeAt(i);\n  buf.push(ascii);\n}\n \nbuf.push(255);\n buf.push(255);\n  buf.push(255);\n \nmsg.payload = new Buffer(buf)\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "7938723c.552f5c",
                "a02ec32.5976e4"
            ]
        ]
    },
    {
        "id": "7938723c.552f5c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "",
        "links": [
            "cb6f7cbc.d75",
            "4072e3719dc859b6",
            "149f7856ccf5def5"
        ],
        "x": 595,
        "y": 720,
        "wires": []
    },
    {
        "id": "5dc0fa87.519a34",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "save eeprom",
        "func": "var buf = [];\nvar oldStr = msg.payload\nvar newStr = oldStr.slice(0, oldStr.length-1);\n\nmsg.payload = \"wepo t07.txt,700\";\nvar str = msg.payload;\n\nfor (var i=0, l = str.length; i < l; i++) {\n  var ascii =str.charCodeAt(i);\n  buf.push(ascii);\n}\n \nbuf.push(255);\n buf.push(255);\n  buf.push(255);\n \nmsg.payload = new Buffer(buf)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "7938723c.552f5c"
            ]
        ]
    },
    {
        "id": "a02ec32.5976e4",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 760,
        "wires": [
            [
                "5dc0fa87.519a34"
            ]
        ]
    },
    {
        "id": "a8281a2b.53a04",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Set WTS full",
        "group": "1032e8ff.e5a657",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set {{msg.payload}} full",
        "tooltip": "calibrate water sensor (full)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "aa793ae.1d9e748"
            ]
        ]
    },
    {
        "id": "32e1d9a9.01b266",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "9f5119e2.e52ce8",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "set WTS empty",
        "group": "1032e8ff.e5a657",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set {{msg.payload}} empty",
        "tooltip": "calibrate water sensor (empty)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 460,
        "y": 2140,
        "wires": [
            [
                "a4e18ee7.f4656"
            ]
        ]
    },
    {
        "id": "59d65d81.10cca4",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 2097,
        "wires": [
            []
        ]
    },
    {
        "id": "ca514266.3d0b7",
        "type": "json",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 770,
        "y": 2020,
        "wires": [
            [
                "3228f93a.35a336",
                "c7adc46c.6f7ea8"
            ]
        ]
    },
    {
        "id": "3228f93a.35a336",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (flow.get(\"wtsno\") === \"all\") {\n    global.set(\"levelfull\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [msg, null, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #1\") {\n    global.set(\"levelfull1\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [null, msg, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #2\") {\n    global.set(\"levelfull2\",Number(msg.payload.level2));\n    msg.payload  = Number(msg.payload.level2);\n    return [null, null, msg, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #3\") {\n    global.set(\"levelfull3\",Number(msg.payload.level3));\n    msg.payload  = Number(msg.payload.level3);\n    return [null, null, null, msg, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #4\") {\n    global.set(\"levelfull4\",Number(msg.payload.level4));\n    msg.payload  = Number(msg.payload.level4);\n    return [null, null, null, null, msg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2020,
        "wires": [
            [
                "32e1d9a9.01b266"
            ],
            [
                "f022ed0e.4d5648"
            ],
            [
                "9543b258.cb22a8"
            ],
            [
                "2d900f7a.ea0398"
            ],
            [
                "45875e65.b9478"
            ]
        ]
    },
    {
        "id": "149a2d4e.2c1adb",
        "type": "json",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 770,
        "y": 2140,
        "wires": [
            [
                "4158f3ca.1afa1c",
                "dc2d7003.41447"
            ]
        ]
    },
    {
        "id": "4158f3ca.1afa1c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (flow.get(\"wtsno\") === \"all\") {\n    global.set(\"levelempty\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [msg, null, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #1\") {\n    global.set(\"levelempty1\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [null, msg, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #2\") {\n    global.set(\"levelempty2\",Number(msg.payload.level2));\n    msg.payload  = Number(msg.payload.level2);\n    return [null, null, msg, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #3\") {\n    global.set(\"levelempty3\",Number(msg.payload.level3));\n    msg.payload  = Number(msg.payload.level3);\n    return [null, null, null, msg, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #4\") {\n    global.set(\"levelempty4\",Number(msg.payload.level4));\n    msg.payload  = Number(msg.payload.level4);\n    return [null, null, null, null, msg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2140,
        "wires": [
            [
                "59d65d81.10cca4"
            ],
            [
                "7d3a4fd1.3102c"
            ],
            [
                "12a2603c.149268"
            ],
            [
                "8d9a6988.fac8c8"
            ],
            [
                "554aef94.df2c8"
            ]
        ]
    },
    {
        "id": "aa793ae.1d9e748",
        "type": "http request",
        "z": "67973ee8.553c3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/levels",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 630,
        "y": 2020,
        "wires": [
            [
                "ca514266.3d0b7"
            ]
        ]
    },
    {
        "id": "a4e18ee7.f4656",
        "type": "http request",
        "z": "67973ee8.553c3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:8080/levels",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 630,
        "y": 2140,
        "wires": [
            [
                "149a2d4e.2c1adb"
            ]
        ]
    },
    {
        "id": "fe62faf5.b36d4",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "level set full",
        "x": 1070,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "5bd49c74.317eb4",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "lvl set empty",
        "x": 1070,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "dc2d7003.41447",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "\n\nmsg.payload  = \"ok - empty level set (\" + flow.get(\"wtsno\") + \")\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 2220,
        "wires": [
            [
                "5bd49c74.317eb4"
            ]
        ]
    },
    {
        "id": "c7adc46c.6f7ea8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "\n\n\nmsg.payload  = \"ok - full level set (\" + flow.get(\"wtsno\") + \")\" ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1940,
        "wires": [
            [
                "fe62faf5.b36d4"
            ]
        ]
    },
    {
        "id": "81d3f06d.64b0c8",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "set sensors",
        "tooltip": "Set full/empty levels of water tank sensors.",
        "place": "Select sensor",
        "group": "1032e8ff.e5a657",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Level #1",
                "value": "sensor #1",
                "type": "str"
            },
            {
                "label": "Level #2",
                "value": "sensor #2",
                "type": "str"
            },
            {
                "label": "Level #3",
                "value": "sensor #3",
                "type": "str"
            },
            {
                "label": "Level #4",
                "value": "sensor #4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "wtsno",
        "topicType": "str",
        "className": "",
        "x": 110,
        "y": 2020,
        "wires": [
            [
                "e848ef58.d36be",
                "55becc0420716d9e"
            ]
        ]
    },
    {
        "id": "e848ef58.d36be",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "save no. wts",
        "func": "flow.set(\"wtsno\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 2020,
        "wires": [
            [
                "a8281a2b.53a04",
                "9f5119e2.e52ce8"
            ]
        ]
    },
    {
        "id": "f022ed0e.4d5648",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "9543b258.cb22a8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "2d900f7a.ea0398",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "45875e65.b9478",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "7d3a4fd1.3102c",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "12a2603c.149268",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "8d9a6988.fac8c8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "554aef94.df2c8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "aca23ac0.836d8",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "calibrate water tank sensors",
        "info": "",
        "x": 240,
        "y": 1960,
        "wires": []
    },
    {
        "id": "c2fbca3f.f52d18",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "1032e8ff.e5a657",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Calibrate water tank sensors (method 2):",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ef0e00c6.650d",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "display reboot",
        "links": [
            "52ac6cc2.5f5d44"
        ],
        "x": 775,
        "y": 220,
        "wires": [
            [
                "6c61cf4f.ced54"
            ]
        ]
    },
    {
        "id": "22c74477.00184c",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "display shutdown",
        "links": [
            "8c51241.9d5ffd8"
        ],
        "x": 775,
        "y": 300,
        "wires": [
            [
                "11aef79d.9491c8"
            ]
        ]
    },
    {
        "id": "7d5ca8e6.bdf388",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "83efe75b9db71cfa",
        "name": "Stylesheet Dashboard",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary: rgba(20,20,20,1);\n  --color-gray-secondary: rgba(65,65,65,1);\n  --color-text-headline: rgb(62, 206, 250);\n  --color-text-headline-secondary: rgb(31, 103, 125);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n  --color-sidebar-primary: rgba(26, 26, 26, 1)\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-gray-primary)8%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n}\n\nmd-sidenav.md-sidenav-left._md {\n    background: linear-gradient(180deg, var(--color-sidebar-primary)6%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    /*box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;*/\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    /*border-radius: 15px;*/\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n \nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 10px;\n    /*border: 1px solid var(--color-widget-border);*/\n}\n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-headline);\n    text-align: center;\n}\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-headline);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n\n.md-toolbar-tools {\n    background-color: var(--color-gray-primary);\n}\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n    color: var(--color-text-primary);\n}\n\n\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 240,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "2561524ad7783b21",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "calibrate water tank sensors resistance",
        "info": "",
        "x": 170,
        "y": 2300,
        "wires": []
    },
    {
        "id": "71314982df94a954",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Choose sensor to set resistance",
        "tooltip": "",
        "place": "Set resistance",
        "group": "1032e8ff.e5a657",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level #1 empty",
                "value": "ohm1empty",
                "type": "str"
            },
            {
                "label": "Level #1 full",
                "value": "ohm1full",
                "type": "str"
            },
            {
                "label": "Level #2 empty",
                "value": "ohm2empty",
                "type": "str"
            },
            {
                "label": "Level #2 full",
                "value": "ohm2full",
                "type": "str"
            },
            {
                "label": "Level  #3 empty",
                "value": "ohm3empty",
                "type": "str"
            },
            {
                "label": "Level #3 full",
                "value": "ohm3full",
                "type": "str"
            },
            {
                "label": "Level #4 empty",
                "value": "ohm4empty",
                "type": "str"
            },
            {
                "label": "Level #4 full",
                "value": "ohm4full",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 2340,
        "wires": [
            [
                "11d0a95c8eea8c3d"
            ]
        ]
    },
    {
        "id": "11d0a95c8eea8c3d",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "get names",
        "func": "flow.set(\"ohm#\", msg.payload)\nmsg.label = \"set \" + msg.payload\nmsg.filename = \"pekaway/\"+msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2340,
        "wires": [
            [
                "965e73914d4b5235"
            ]
        ]
    },
    {
        "id": "5592e29398c5d7dd",
        "type": "switch",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "ohm#",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "ohm1empty",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm1full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm2empty",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm2full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm3empty",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm3full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm4empty",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ohm4full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 950,
        "y": 2340,
        "wires": [
            [
                "01a50be6cfa375b1"
            ],
            [
                "7409e2bf94d31042"
            ],
            [
                "7eb0ece423b192c2"
            ],
            [
                "cf508ce4840b36e2"
            ],
            [
                "2a4dde3ac83d9f90"
            ],
            [
                "58a01c863a406468"
            ],
            [
                "49cddacb8518209c"
            ],
            [
                "aff944b5dd2fd87b"
            ]
        ]
    },
    {
        "id": "01a50be6cfa375b1",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm1empty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 2280,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "7409e2bf94d31042",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm1full",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 2300,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "7eb0ece423b192c2",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm2empty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 2320,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "cf508ce4840b36e2",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm2full",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 2340,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "2a4dde3ac83d9f90",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm3empty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 2360,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "58a01c863a406468",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm3full",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 2380,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "49cddacb8518209c",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm4empty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 2400,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "aff944b5dd2fd87b",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/ohm4full",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 2420,
        "wires": [
            [
                "54869cddb3de8f50"
            ]
        ]
    },
    {
        "id": "e1224c89f68d163e",
        "type": "ui_slider",
        "z": "67973ee8.553c3",
        "name": "WaterResistance",
        "label": "ohm",
        "tooltip": "",
        "group": "1032e8ff.e5a657",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "400",
        "step": "10",
        "className": "",
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "5592e29398c5d7dd"
            ]
        ]
    },
    {
        "id": "965e73914d4b5235",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 540,
        "y": 2340,
        "wires": [
            [
                "e1224c89f68d163e",
                "93842c753d78b1bb"
            ]
        ]
    },
    {
        "id": "60a7d576491c8b40",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "resistance set",
        "x": 1480,
        "y": 2380,
        "wires": []
    },
    {
        "id": "54869cddb3de8f50",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "dialog",
        "func": "global.set(flow.get(\"ohm#\"), msg.payload)\nvar filename = \"\"\nvar ohmwert = msg.payload\nmsg.payload = msg.payload*22.47\n\nif (flow.get(\"ohm#\") == \"ohm1empty\") { filename = \"levelempty1\"; global.set(\"levelempty1\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm2empty\") { filename = \"levelempty2\"; global.set(\"levelempty2\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm3empty\") { filename = \"levelempty3\"; global.set(\"levelempty3\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm4empty\") { filename = \"levelempty4\"; global.set(\"levelempty4\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm1full\") { filename = \"levelfull1\"; global.set(\"levelfull1\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm2full\") { filename = \"levelfull2\"; global.set(\"levelfull2\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm3full\") { filename = \"levelfull3\"; global.set(\"levelfull3\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm4full\") { filename = \"levelfull4\"; global.set(\"levelfull4\", msg.payload)}\n\nmsg.filename = \"pekaway/\"+filename\nnode.send([msg, null])\n\nmsg.payload = flow.get(\"ohm#\") +\" set to \" + ohmwert\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 2340,
        "wires": [
            [
                "f551e1fc13fd6d58"
            ],
            [
                "60a7d576491c8b40"
            ]
        ]
    },
    {
        "id": "f551e1fc13fd6d58",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "write level",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1460,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "1b9137de79562796",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "1032e8ff.e5a657",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Calibrate water tank sensors (method 1):",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 180,
        "y": 2260,
        "wires": []
    },
    {
        "id": "b09f2cdaf0ee0dad",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "loadconfig_shunt",
        "links": [
            "eb009e6dc5ee5d3d",
            "a15a3bb816cffe11"
        ],
        "x": 145,
        "y": 2900,
        "wires": [
            [
                "0c014a1b25c21e2c"
            ]
        ]
    },
    {
        "id": "0c014a1b25c21e2c",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 2900,
        "wires": [
            [
                "4b928b46.123ae4"
            ]
        ]
    },
    {
        "id": "866facb36782aed3",
        "type": "comment",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "TIME SYNC",
        "info": "",
        "x": 1490,
        "y": 1580,
        "wires": []
    },
    {
        "id": "e86e662e40d3eb19",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Enable/Disable Homebridge",
        "tooltip": "Turn Homebridge for Apple Homekit on or off (to save cpu power). Please wait a few seconds for the command to be executed correctly!",
        "group": "b6314699.049798",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1220,
        "y": 140,
        "wires": [
            [
                "19f7cc440ae05386"
            ]
        ]
    },
    {
        "id": "19f7cc440ae05386",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set homebridge cmd",
        "func": "if(msg.payload == true){\n    msg.payload = \"sudo systemctl start homebridge.service && sudo systemctl enable homebridge.service\"\n    msg.homebridge = \"active\"\n    global.set(\"homebridge\", \"active\")\n}\nelse if (msg.payload == false){\n    msg.payload = \"sudo systemctl stop homebridge.service && sudo systemctl disable homebridge.service\"\n    msg.homebridge = \"inactive\"\n    global.set(\"homebridge\", \"inactive\")\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 140,
        "wires": [
            [
                "138ca6b4ca850483",
                "3977a211a63f1d2f"
            ]
        ]
    },
    {
        "id": "138ca6b4ca850483",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1650,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8504bb326a35fbdb",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "b6314699.049798",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Homebridge: ",
        "format": "{{msg.homebridge}}",
        "layout": "row-spread",
        "className": "",
        "x": 1460,
        "y": 180,
        "wires": []
    },
    {
        "id": "377622784ccef961",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "enable/disable homebridge.service",
        "info": "",
        "x": 1240,
        "y": 100,
        "wires": []
    },
    {
        "id": "e031c3d6a22b90b3",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "b6314699.049798",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show Homebridge pin",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1200,
        "y": 320,
        "wires": [
            [
                "e468cc7e01b65165"
            ]
        ]
    },
    {
        "id": "b7c84001bd39a9ec",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1690,
        "y": 300,
        "wires": [
            [
                "10575426bbba714f"
            ],
            [],
            []
        ]
    },
    {
        "id": "e468cc7e01b65165",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set cmd",
        "func": "if (global.get(\"homebridge\") == \"active\") {\n    msg.payload = 'grep -Po \\'\"pin\": *\\\\K\\\"[^\"]*\\\"\\' /var/lib/homebridge/config.json'\n    return [msg, null]\n}\nelse if (global.get(\"homebridge\") == \"inactive\") {\n    msg.payload = \"Homebridge is currently not running, please activate Homebridge first\"\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 320,
        "wires": [
            [
                "b7c84001bd39a9ec"
            ],
            [
                "487e0da486841d42"
            ]
        ]
    },
    {
        "id": "487e0da486841d42",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "10575426bbba714f",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1830,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3977a211a63f1d2f",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "8504bb326a35fbdb"
            ]
        ]
    },
    {
        "id": "3654343794b0d60b",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 5",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 980,
        "wires": [
            [
                "0bc9ca67d5625ccb"
            ]
        ]
    },
    {
        "id": "4855ce8c394f0474",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 6",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 1020,
        "wires": [
            [
                "147ea82a0a7ce441"
            ]
        ]
    },
    {
        "id": "9bd28c61cc5d0f60",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 7",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 1060,
        "wires": [
            [
                "397efcecaf802fa1"
            ]
        ]
    },
    {
        "id": "5f1077a1c97e442a",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "wifiRelay 8",
        "tooltip": "",
        "group": "c3c4f964.612a28",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1170,
        "y": 1100,
        "wires": [
            [
                "3af6428de4e19057"
            ]
        ]
    },
    {
        "id": "262ce9d6fe0c435a",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "7250317779b3a060",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "41c094a230c84a0b",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name8",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "79b2b5b702fa38cf",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelay_name5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1ef27c0cbab0e0de",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "b6314699.049798",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show IP-Address",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "87b7fec233e024d5"
            ]
        ]
    },
    {
        "id": "87b7fec233e024d5",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip wlan0",
        "x": 389,
        "y": 3301,
        "wires": [
            [
                "4ef92a05a92e71cf"
            ],
            [],
            []
        ]
    },
    {
        "id": "4ef92a05a92e71cf",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set payload",
        "func": "msg.wlan0 = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3300,
        "wires": [
            [
                "4bc277312fd99b0a"
            ]
        ]
    },
    {
        "id": "4bc277312fd99b0a",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo ifconfig eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip eth0",
        "x": 770,
        "y": 3300,
        "wires": [
            [
                "5a3c23a0d34b3900"
            ],
            [],
            []
        ]
    },
    {
        "id": "5a3c23a0d34b3900",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set payload",
        "func": "msg.eth0 = msg.payload\n\nmsg.payload = \"wlan0: \" + msg.wlan0 + \"; eth0: \" + msg.eth0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3300,
        "wires": [
            [
                "6c025fafa85dd298"
            ]
        ]
    },
    {
        "id": "6c025fafa85dd298",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "0e7441c62c171f6f",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "41f7b355ba96c4ec"
            ]
        ]
    },
    {
        "id": "41f7b355ba96c4ec",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo systemctl status homebridge.service | grep 'Active: ' | cut -d: -f2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1570,
        "y": 240,
        "wires": [
            [
                "b0046da13d5ad795"
            ],
            [],
            []
        ]
    },
    {
        "id": "b0046da13d5ad795",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check homebridge",
        "func": "if(msg.payload.includes(\"running\")){\n    msg.homebridge = \"active\"\n    global.set(\"homebridge\", \"active\")\n    msg.payload = true\n}\nelse if (msg.payload.includes(\"failed\") || msg.payload.includes(\"dead\")){\n    msg.homebridge = \"inactive\"\n    global.set(\"homebridge\", \"inactive\")\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 240,
        "wires": [
            [
                "8504bb326a35fbdb",
                "e86e662e40d3eb19"
            ]
        ]
    },
    {
        "id": "cdb1d29471cfeb6a",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "13",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 2540,
        "wires": [
            [
                "d16b7f60.c216e",
                "d48c5630.c008c8",
                "eaaee3eb.1855",
                "4b1b92e.a05af6c"
            ]
        ]
    },
    {
        "id": "fd8536fd09e0e20b",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Resize filesystem",
        "tooltip": "Resize the filesystem to use the full size of the SD-Card. A Click will show you the current size.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "a0f1ff4814bae290"
            ]
        ]
    },
    {
        "id": "06d28184382dc6ae",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "7",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok!",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "show pop up",
        "x": 1770,
        "y": 460,
        "wires": [
            [
                "558cce328d9d56a6"
            ]
        ]
    },
    {
        "id": "558cce328d9d56a6",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check answer ",
        "func": "if (msg.payload == \"Ok!\") {\n    return [msg, null]\n}\n\nif (msg.payload == \"Cancel\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 460,
        "wires": [
            [
                "17d803062c532dd7"
            ],
            []
        ]
    },
    {
        "id": "17d803062c532dd7",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo raspi-config --expand-rootfs",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "expand filesystem",
        "x": 1530,
        "y": 520,
        "wires": [
            [
                "750f927032e56c16"
            ],
            [],
            []
        ]
    },
    {
        "id": "750f927032e56c16",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reboot",
        "x": 1690,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8dd80d081c64ab2f",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "resize filesystem to use full capacity of SD-card",
        "info": "",
        "x": 1280,
        "y": 380,
        "wires": []
    },
    {
        "id": "a0f1ff4814bae290",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "df -h",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "df -h",
        "x": 1350,
        "y": 420,
        "wires": [
            [
                "4d19c7fe2d71360f"
            ],
            [],
            []
        ]
    },
    {
        "id": "b1a5da512ff29a31",
        "type": "switch",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/dev/root",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1610,
        "y": 420,
        "wires": [
            [
                "dcc4b0f4efc17c78"
            ]
        ]
    },
    {
        "id": "4d19c7fe2d71360f",
        "type": "split",
        "z": "67973ee8.553c3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1480,
        "y": 420,
        "wires": [
            [
                "b1a5da512ff29a31"
            ]
        ]
    },
    {
        "id": "42b8a5b82247d474",
        "type": "join",
        "z": "67973ee8.553c3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1490,
        "y": 460,
        "wires": [
            [
                "94ead7da2b0f3dff"
            ]
        ]
    },
    {
        "id": "dcc4b0f4efc17c78",
        "type": "split",
        "z": "67973ee8.553c3",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1730,
        "y": 420,
        "wires": [
            [
                "fd63fabfa1284292"
            ]
        ]
    },
    {
        "id": "fd63fabfa1284292",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "filter",
        "func": "if (msg.payload != \"\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 420,
        "wires": [
            [
                "42b8a5b82247d474"
            ]
        ]
    },
    {
        "id": "94ead7da2b0f3dff",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "popup",
        "func": "var size = msg.payload[1].payload\nvar used = msg.payload[2].payload\nvar avail = msg.payload[3].payload\nvar usedpercent = msg.payload[4].payload\n\nmsg.payload = \"Current filesystem: Size: \" + size + \", Used \" + used + \", Available: \" + avail + \", Used%: \" + usedpercent + \". Do you want to resize? That'll include a reboot, so please stand by!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 460,
        "wires": [
            [
                "06d28184382dc6ae"
            ]
        ]
    },
    {
        "id": "7f916565ce1059df",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check wifi ip address",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "fcec3dd578516f70"
            ],
            [],
            []
        ]
    },
    {
        "id": "56ee0c64541604f9",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo ifconfig eth0| sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check wifi eth0 ip address",
        "x": 430,
        "y": 680,
        "wires": [
            [
                "cdb9f7f6ed8f26f5"
            ],
            [],
            []
        ]
    },
    {
        "id": "b79375a6.570ef8",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "d": true,
        "group": "f06428cbbee24a1a",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Turn OFF USB and ETHERNET to save POWER (RPI3 only):",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 360,
        "y": 380,
        "wires": []
    },
    {
        "id": "7f5dfb073dcd1150",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1200",
        "crontab": "",
        "once": true,
        "onceDelay": "50",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "7f916565ce1059df",
                "56ee0c64541604f9"
            ]
        ]
    },
    {
        "id": "fcec3dd578516f70",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global wifi ip",
        "func": "global.set(\"wifiIP\",msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cdb9f7f6ed8f26f5",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global eth0 ip",
        "func": "global.set(\"eth0IP\",msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3a3e2faa299102c7",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Dimmers",
        "tooltip": "toggle dimmers on/off",
        "group": "22cf294bc3fa89ec",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 760,
        "y": 3660,
        "wires": [
            [
                "8683fba54282146e",
                "a7e94a94fb7a0185"
            ]
        ]
    },
    {
        "id": "8683fba54282146e",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "show/hide",
        "func": "global.set(\"dimmersettings\", msg.payload)\n\nif(msg.payload == true) {\n    msg.payload={\"group\":{\"show\":[\"Switches_Dimmer\",\"Switches_Settings_Dimmer_Relay_Name\"]}};\n}\n\n\nif(msg.payload == false) {\n    msg.payload={\"group\":{\"hide\":[\"Switches_Dimmer\",\"Switches_Settings_Dimmer_Relay_Name\"]}};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3660,
        "wires": [
            [
                "740058b549639ac5"
            ]
        ]
    },
    {
        "id": "740058b549639ac5",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "",
        "x": 1200,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "a7e94a94fb7a0185",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmersettings",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "7b8ff819876fd7ae",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 3760,
        "wires": [
            [
                "31b0ea846721640d",
                "4e405feab522a4b1",
                "9c1603a0baa656c6",
                "92da2892357d16a9",
                "11aacd5a139441ba",
                "eb320ce1d1b18440"
            ]
        ]
    },
    {
        "id": "31b0ea846721640d",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wifirelay",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 3840,
        "wires": [
            [
                "251b79ed014bf510"
            ]
        ]
    },
    {
        "id": "4e405feab522a4b1",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmersettings",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 3660,
        "wires": [
            [
                "f36271cca01515c9"
            ]
        ]
    },
    {
        "id": "251b79ed014bf510",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "true/false",
        "func": "if(msg.payload === \"true\"){\n msg.payload=true\n}\nelse if(msg.payload === \"false\"){\n msg.payload=false\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 3840,
        "wires": [
            [
                "2423c6cc.5feaca"
            ]
        ]
    },
    {
        "id": "f36271cca01515c9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "true/false",
        "func": "if(msg.payload === \"true\"){\n msg.payload=true\n}\nelse if(msg.payload === \"false\"){\n msg.payload=false\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 3660,
        "wires": [
            [
                "3a3e2faa299102c7"
            ]
        ]
    },
    {
        "id": "60ef446001d9f3ee",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Sensor Settings",
        "info": "",
        "x": 220,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9c1603a0baa656c6",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmeripaddr",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 3560,
        "wires": [
            [
                "8faabd676e4df986"
            ]
        ]
    },
    {
        "id": "8faabd676e4df986",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "get target ip on startup",
        "func": "global.set(\"dimmerwatchdogtargetip\", msg.payload.trim())\n\nif (msg.payload == \"\") {\n    msg.label = \"dimmer debug ip not set\"\n}\nelse {\n    msg.label = msg.payload.trim()    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 3560,
        "wires": [
            [
                "d2e2a619f576d7e1"
            ]
        ]
    },
    {
        "id": "d2e2a619f576d7e1",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "Device IP",
        "label": "{{msg.label}}",
        "tooltip": "IP address that will be checked for accessibility",
        "group": "74ee510a9f24426c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 780,
        "y": 3560,
        "wires": [
            [
                "7e65fa6462cee3af",
                "1ad0836a136eaefa"
            ]
        ]
    },
    {
        "id": "7e65fa6462cee3af",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmeripaddr",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1060,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "b1dc72bf0a618e85",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1130,
        "y": 3600,
        "wires": [
            [
                "0308b9c6221a266c"
            ],
            [],
            []
        ]
    },
    {
        "id": "1ad0836a136eaefa",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set cmd",
        "func": "msg.payload = 'grep -E -o \"([0-9]{1,3}[\\.]){3}[0-9]{1,3}\" pekaway/dimmeripaddr'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3600,
        "wires": [
            [
                "b1dc72bf0a618e85"
            ]
        ]
    },
    {
        "id": "0308b9c6221a266c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "save result",
        "func": "if (msg.payload != \"\"){\n    global.set(\"dimmerwatchdogtargetip\", msg.payload)\n}\nelse {\n    global.set(\"dimmerwatchdogtargetip\", \"Target ip invalid!\") \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 3600,
        "wires": [
            []
        ]
    },
    {
        "id": "c05b1cc5315b77c7",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Set dimmer watchdog IP address",
        "info": "",
        "x": 330,
        "y": 3600,
        "wires": []
    },
    {
        "id": "fee4d2a3b6dbbaec",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Dimmer Debug Mode",
        "tooltip": "toggle dimmer debug mode on/off",
        "group": "b6314699.049798",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 580,
        "y": 3500,
        "wires": [
            [
                "f9e55c38168e9de9"
            ]
        ]
    },
    {
        "id": "f9e55c38168e9de9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check true/false",
        "func": "if (msg.payload == true || msg.payload == \"true\") {\n    global.set(\"dimmerdebugmode\", msg.payload);\n    msg.payload = \"Waiting for IP check...\"\n    node.send([msg, null]);\n    if (global.get(\"dimmerwatchdogtargetip\") == undefined) {\n        msg.payload = \"Please set target IP\"\n    }\n    else {\n        msg.payload = global.get(\"dimmerwatchdogtargetip\")+\"a\";\n    }\n    msg.label = \"Dimmer Watchdog IP\";\n    node.send([null, msg]);\n    if (global.get(\"dimmerwatchdogtargetip\") == undefined) {\n        msg.payload = \"Please set target IP\"\n    }\n    else {\n        msg.payload = global.get(\"dimmerwatchdogtargetip\");\n    }\n    \n    msg.label = \"Dimmer Watchdog IP\";\n}\nelse if (msg.payload == false || msg.payload == \"false\") {\n       global.set(\"dimmerdebugmode\", msg.payload)\n       node.send([msg, null])\n    if (global.get(\"dimmerwatchdogtargetip\") == undefined) {\n        msg.payload = \"debug mode disabled\"\n    }\n    else {\n        msg.payload = global.get(\"dimmerwatchdogtargetip\")+\"a\";\n    }\n       msg.label = \"Dimmer Watchdog IP (disabled!)\";\n       node.send([null, msg]);\n    if (global.get(\"dimmerwatchdogtargetip\") == undefined) {\n        msg.payload = \"debug mode disabled\"\n    }\n    else {\n        msg.payload = global.get(\"dimmerwatchdogtargetip\");\n    }\n       msg.label = \"Dimmer Watchdog IP (disabled!)\";\n}   \nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3500,
        "wires": [
            [
                "79a0dcb627c10406",
                "c94990f1d952fab0"
            ],
            [
                "d2e2a619f576d7e1"
            ]
        ]
    },
    {
        "id": "79a0dcb627c10406",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmerdebugmode",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1060,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "92da2892357d16a9",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmerdebugmode",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 3500,
        "wires": [
            [
                "fee4d2a3b6dbbaec",
                "4e3e32413abe9844"
            ]
        ]
    },
    {
        "id": "c94990f1d952fab0",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmerdebugmode",
        "links": [
            "a831be4ffcea5f62"
        ],
        "x": 995,
        "y": 3520,
        "wires": []
    },
    {
        "id": "1a8794f31a3f9ddb",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ntemp1",
        "links": [
            "8f3c59a42992518b",
            "9e2e757534f9128b"
        ],
        "x": 155,
        "y": 1360,
        "wires": [
            [
                "a1972ee9.29679"
            ]
        ]
    },
    {
        "id": "dc783718278813d6",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ntemp2",
        "links": [
            "1ca17d1277c17055"
        ],
        "x": 155,
        "y": 1400,
        "wires": [
            [
                "86b60f60.a8355"
            ]
        ]
    },
    {
        "id": "cfb819effd2aef27",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ntemp3",
        "links": [
            "e2d931c67b5038fe"
        ],
        "x": 875,
        "y": 1360,
        "wires": [
            [
                "9cf97778.139118"
            ]
        ]
    },
    {
        "id": "d2008d5c540c4214",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ntemp4",
        "links": [
            "967fa4e3178fb82b"
        ],
        "x": 875,
        "y": 1400,
        "wires": [
            [
                "791aeec7.321cb"
            ]
        ]
    },
    {
        "id": "2fd913aba86f7a79",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NLevel1",
        "links": [
            "4d1b006b57d6ef45"
        ],
        "x": 175,
        "y": 1640,
        "wires": [
            [
                "fbc74dc0.2725b"
            ]
        ]
    },
    {
        "id": "3332389371230b20",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NLevel2",
        "links": [
            "45bba022abc3c534"
        ],
        "x": 175,
        "y": 1680,
        "wires": [
            [
                "a3e020c.60f03e"
            ]
        ]
    },
    {
        "id": "4c35af4930ed3a51",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NLevel3",
        "links": [
            "dcebcef7012c7f07"
        ],
        "x": 175,
        "y": 1720,
        "wires": [
            [
                "3385db85.c65384"
            ]
        ]
    },
    {
        "id": "9fa5ed9642841cac",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NLevel4",
        "links": [
            "c693ba0e60a42a37"
        ],
        "x": 175,
        "y": 1760,
        "wires": [
            [
                "3657d220.a1d6ae"
            ]
        ]
    },
    {
        "id": "7e3adb9d283ce234",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "None",
        "links": [
            "2215762d38495713"
        ],
        "x": 155,
        "y": 820,
        "wires": [
            [
                "a532ea7e.26e568"
            ]
        ]
    },
    {
        "id": "ca585a03f0fe6085",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ntwo",
        "links": [
            "523289f1d05dad12"
        ],
        "x": 155,
        "y": 860,
        "wires": [
            [
                "f21173d1.b7e2"
            ]
        ]
    },
    {
        "id": "d24286c0f1f05cf1",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nthree",
        "links": [
            "3a8124b501346d8b"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "87a6e9a1.831058"
            ]
        ]
    },
    {
        "id": "1bbf9074b56672aa",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nfour",
        "links": [
            "fd6bfa7ca31c97fa"
        ],
        "x": 155,
        "y": 940,
        "wires": [
            [
                "f4e37d02.b4d79"
            ]
        ]
    },
    {
        "id": "ffdfcbf3d0444b71",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nfive",
        "links": [
            "6f9b853e331a293a"
        ],
        "x": 155,
        "y": 980,
        "wires": [
            [
                "a0e08ba7.a96ca8"
            ]
        ]
    },
    {
        "id": "f77512a00db0f317",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nsix",
        "links": [
            "004c62c10b636096"
        ],
        "x": 155,
        "y": 1020,
        "wires": [
            [
                "a745d5e6.e4ccf8"
            ]
        ]
    },
    {
        "id": "01d48cd43596ed13",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nseven",
        "links": [
            "3a493f6979414933",
            "ba8e80a7849282a2"
        ],
        "x": 155,
        "y": 1060,
        "wires": [
            [
                "2b70e65a.8006da"
            ]
        ]
    },
    {
        "id": "a4c1332f59457b49",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Neight",
        "links": [
            "ec202c43ad863b73"
        ],
        "x": 155,
        "y": 1100,
        "wires": [
            [
                "92ebf03e.2a1f3"
            ]
        ]
    },
    {
        "id": "5d29a3a442f887f7",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nnine",
        "links": [
            "3818a04b207aea8c"
        ],
        "x": 155,
        "y": 1140,
        "wires": [
            [
                "63b739c3.64ea88"
            ]
        ]
    },
    {
        "id": "82c952ea0eeb0aca",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Nten",
        "links": [
            "3966ddcffc558c87"
        ],
        "x": 155,
        "y": 1180,
        "wires": [
            [
                "e83f84ce.9bb588"
            ]
        ]
    },
    {
        "id": "473f2db910e74f46",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWone",
        "links": [
            "d7a9ec06ef6a2f8f"
        ],
        "x": 1035,
        "y": 820,
        "wires": [
            [
                "6b6641d3.70cd9"
            ]
        ]
    },
    {
        "id": "dc023f5d7a61c9d9",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWtwo",
        "links": [
            "d74657bdf8030b2f"
        ],
        "x": 1035,
        "y": 860,
        "wires": [
            [
                "3acc317.3f09ace"
            ]
        ]
    },
    {
        "id": "2110d5ae121a4453",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWthree",
        "links": [
            "da2cf914da6895c2"
        ],
        "x": 1035,
        "y": 900,
        "wires": [
            [
                "4560845c.0f056c"
            ]
        ]
    },
    {
        "id": "5d624ae1b18443db",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWfour",
        "links": [
            "06e51df7bb811802"
        ],
        "x": 1035,
        "y": 940,
        "wires": [
            [
                "b23bd3ea.3d33d"
            ]
        ]
    },
    {
        "id": "665af31eeae91d53",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWfive",
        "links": [
            "ea39a7c19379ec5a"
        ],
        "x": 1035,
        "y": 980,
        "wires": [
            [
                "3654343794b0d60b"
            ]
        ]
    },
    {
        "id": "5a630b11c01d184b",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWsix",
        "links": [
            "22bb0428f7f4d15b"
        ],
        "x": 1035,
        "y": 1020,
        "wires": [
            [
                "4855ce8c394f0474"
            ]
        ]
    },
    {
        "id": "11b12c441106ccea",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWseven",
        "links": [],
        "x": 1035,
        "y": 1060,
        "wires": [
            [
                "9bd28c61cc5d0f60"
            ]
        ]
    },
    {
        "id": "d3dc38692edfe006",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "NWeight",
        "links": [
            "d9fdbbd1cd30f63e"
        ],
        "x": 1035,
        "y": 1100,
        "wires": [
            [
                "5f1077a1c97e442a"
            ]
        ]
    },
    {
        "id": "351ec009f1f9e749",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "MQTT stats",
        "label": "Send stats via MQTT",
        "tooltip": "sends MQTT stats every 5 minutes",
        "group": "b6314699.049798",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 770,
        "y": 3960,
        "wires": [
            [
                "b70f0171c9bb8daf",
                "41c3388f944060c3"
            ]
        ]
    },
    {
        "id": "b70f0171c9bb8daf",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/sendmqttstats",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1030,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "11aacd5a139441ba",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/sendmqttstats",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 3960,
        "wires": [
            [
                "88554c6282fec5bf"
            ]
        ]
    },
    {
        "id": "88554c6282fec5bf",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "true/false",
        "func": "if(msg.payload === \"true\"){\n msg.payload=true\n}\nelse if(msg.payload === \"false\"){\n msg.payload=false\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 3960,
        "wires": [
            [
                "351ec009f1f9e749"
            ]
        ]
    },
    {
        "id": "41c3388f944060c3",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global var true/false",
        "func": "global.set(\"sendmqttstats\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "a3f8d97a3ef48beb",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "bc06df1c.ad422",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reload USB ",
        "tooltip": "The system will be restarted, please stand by!",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-retweet",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 660,
        "wires": [
            [
                "a12b1b492ff2e29f"
            ]
        ]
    },
    {
        "id": "4e3e32413abe9844",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global dimmerdebugmode",
        "func": "if (msg.payload == \"true\") {\n    msg.payload = true\n}\nelse if (msg.payload == \"false\") {\n    msg.payload = false\n}\nglobal.set(\"dimmerdebugmode\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "a2e0652e61a17718",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Network Time Sync",
        "tooltip": "Enable/Disable network time synchronisation",
        "group": "f06428cbbee24a1a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "Network Time Sync",
        "x": 1010,
        "y": 1700,
        "wires": [
            [
                "6176d9f682c17481",
                "aff4dcc810670f3c"
            ]
        ]
    },
    {
        "id": "6176d9f682c17481",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set timesynccmd",
        "func": "if(msg.payload == true){\n    msg.payload = \"sudo systemctl start systemd-timesyncd.service && sudo systemctl enable systemd-timesyncd.service\"\n    msg.timesyncd = \"active\"\n    global.set(\"timesyncd\", \"active\")\n}\nelse if (msg.payload == false){\n    msg.payload = \"sudo systemctl stop systemd-timesyncd.service && sudo systemctl disable systemd-timesyncd.service\"\n    msg.timesyncd = \"inactive\"\n    global.set(\"timesyncd\", \"inactive\")\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1700,
        "wires": [
            [
                "9f1e828882f0b6c8",
                "7326c057906ecd46"
            ]
        ]
    },
    {
        "id": "9f1e828882f0b6c8",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1450,
        "y": 1700,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "640d3d6dcfe79dc1",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "f06428cbbee24a1a",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Timesync: ",
        "format": "{{msg.timesyncd}}",
        "layout": "row-spread",
        "className": "",
        "x": 1270,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7326c057906ecd46",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 1740,
        "wires": [
            [
                "640d3d6dcfe79dc1"
            ]
        ]
    },
    {
        "id": "4b3dcbe8c92f12bc",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "29",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 1800,
        "wires": [
            [
                "04e28beb3155cb2e"
            ]
        ]
    },
    {
        "id": "04e28beb3155cb2e",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo systemctl status systemd-timesyncd | grep 'Active: ' | cut -d: -f2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1380,
        "y": 1800,
        "wires": [
            [
                "cefe57b604e11ea2"
            ],
            [],
            []
        ]
    },
    {
        "id": "cefe57b604e11ea2",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check timesync",
        "func": "if(msg.payload.includes(\"running\")){\n    msg.timesyncd = \"active\"\n    global.set(\"timesync\", \"active\")\n    msg.payload = true\n}\nelse if (msg.payload.includes(\"failed\")){\n    msg.timesyncd = \"inactive\"\n    global.set(\"timesync\", \"inactive\")\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 1800,
        "wires": [
            [
                "640d3d6dcfe79dc1",
                "a2e0652e61a17718"
            ]
        ]
    },
    {
        "id": "e5243f865899be9b",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "System",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "System Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 4140,
        "wires": [
            [
                "38c460c9ebe35db6"
            ]
        ]
    },
    {
        "id": "38c460c9ebe35db6",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 7",
        "events": "change",
        "x": 320,
        "y": 4140,
        "wires": [
            []
        ]
    },
    {
        "id": "c33310d0d16d2af5",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Wifi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Wifi Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 4180,
        "wires": [
            [
                "223eb6fb4047929a"
            ]
        ]
    },
    {
        "id": "223eb6fb4047929a",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 8",
        "events": "change",
        "x": 320,
        "y": 4180,
        "wires": [
            []
        ]
    },
    {
        "id": "fb35d556dae8964b",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sensors",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Sensors",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 4220,
        "wires": [
            [
                "d4cb53fd5262eb8b"
            ]
        ]
    },
    {
        "id": "d4cb53fd5262eb8b",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 10",
        "events": "change",
        "x": 330,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "0f1fe09ba1030d98",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Switches",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Switches Settings",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 4260,
        "wires": [
            [
                "e16b6062cf63b21d"
            ]
        ]
    },
    {
        "id": "e16b6062cf63b21d",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 11",
        "events": "change",
        "x": 320,
        "y": 4260,
        "wires": [
            []
        ]
    },
    {
        "id": "585afb59279a2bbd",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "VANPI Shunt",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Shunt",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 4300,
        "wires": [
            [
                "ef87db7901fdbece"
            ]
        ]
    },
    {
        "id": "ef87db7901fdbece",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 12",
        "events": "change",
        "x": 330,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "38d66c48db178f1c",
        "type": "inject",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1270,
        "y": 1620,
        "wires": [
            [
                "d36d3f1f.0f445"
            ]
        ]
    },
    {
        "id": "acffdc9b29d1b9d0",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d4ee45356a6231e7",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Debug",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Debug",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 4340,
        "wires": [
            [
                "b3c397bd3b60cfae"
            ]
        ]
    },
    {
        "id": "b3c397bd3b60cfae",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 13",
        "events": "change",
        "x": 330,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "d092d4b869b1a708",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "config menu tabs",
        "info": "",
        "x": 120,
        "y": 4100,
        "wires": []
    },
    {
        "id": "8c774424d7faa6dd",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Buttons \"back\"",
        "info": "",
        "x": 520,
        "y": 4100,
        "wires": []
    },
    {
        "id": "aa4535135b0dd999",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (System)",
        "group": "f06428cbbee24a1a",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4140,
        "wires": [
            [
                "522a808541809984"
            ]
        ]
    },
    {
        "id": "522a808541809984",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4140,
        "wires": [
            []
        ]
    },
    {
        "id": "e379cb7970e554fa",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Wifi)",
        "group": "b6314699.049798",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 4180,
        "wires": [
            [
                "6eecab0f8b5be9ce"
            ]
        ]
    },
    {
        "id": "6eecab0f8b5be9ce",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4180,
        "wires": [
            []
        ]
    },
    {
        "id": "37105f7174f30937",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Relays)",
        "group": "22cf294bc3fa89ec",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4220,
        "wires": [
            [
                "d0e3cea164261719"
            ]
        ]
    },
    {
        "id": "d0e3cea164261719",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "9084273a01b2eb13",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Sensors)",
        "group": "1032e8ff.e5a657",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4260,
        "wires": [
            [
                "f47532035a512062"
            ]
        ]
    },
    {
        "id": "f47532035a512062",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4260,
        "wires": [
            []
        ]
    },
    {
        "id": "09b74fc3f8ae1148",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Shunt)",
        "group": "00c90244e8033802",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 4300,
        "wires": [
            [
                "4ca17a6fccc092c4"
            ]
        ]
    },
    {
        "id": "4ca17a6fccc092c4",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb68bd6c119e139",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Debug)",
        "group": "53df28c11a99d1b9",
        "order": 21,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Menu",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4340,
        "wires": [
            [
                "b8bfcb8c81617f63"
            ]
        ]
    },
    {
        "id": "b8bfcb8c81617f63",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 9",
        "events": "change",
        "x": 700,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "2a8b49aee3a08911",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (Update)",
        "group": "16c5a1ba154d7a03",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to System Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "System Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4380,
        "wires": [
            [
                "edfdb2df6acec862"
            ]
        ]
    },
    {
        "id": "edfdb2df6acec862",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 7",
        "events": "change",
        "x": 700,
        "y": 4380,
        "wires": [
            []
        ]
    },
    {
        "id": "9dbd9848d42dea76",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "change to tab 9",
        "events": "change",
        "x": 1260,
        "y": 1580,
        "wires": [
            [
                "d36d3f1f.0f445"
            ]
        ]
    },
    {
        "id": "8774ae44692d83aa",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 660,
        "wires": [
            [
                "19f4d8b8db42ee3d"
            ]
        ]
    },
    {
        "id": "691dbfe83d7f6ec7",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 1480,
        "y": 660,
        "wires": [
            [
                "8774ae44692d83aa"
            ]
        ]
    },
    {
        "id": "a12b1b492ff2e29f",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "u sure?",
        "func": "msg.payload = \"Do you want to reinitialize USB ports?\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 660,
        "wires": [
            [
                "691dbfe83d7f6ec7"
            ]
        ]
    },
    {
        "id": "19f4d8b8db42ee3d",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo usbreset /dev/bus/usb/001/002",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reset usb",
        "x": 1840,
        "y": 660,
        "wires": [
            [
                "501dde2f7af5a5e5",
                "3334ee7ff0f7fc6c"
            ],
            [],
            []
        ]
    },
    {
        "id": "5e8bcabd2d44273c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "pekawayActiveButtonOut",
        "mode": "link",
        "links": [
            "b233b06d6db88307",
            "1d633ae87a49de41",
            "48002a32a57d8195"
        ],
        "x": 605,
        "y": 2940,
        "wires": []
    },
    {
        "id": "097c34c908632b10",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (RPI Info)",
        "group": "927ebb87c84ca699",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Debug Options",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Debug",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 4380,
        "wires": [
            [
                "5d50c984a14d191a"
            ]
        ]
    },
    {
        "id": "5d50c984a14d191a",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 13",
        "events": "change",
        "x": 330,
        "y": 4380,
        "wires": [
            []
        ]
    },
    {
        "id": "217345e2b79b875d",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "RPI General Information",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Raspberry Information",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 4460,
        "wires": [
            [
                "ec9bfe8a1b7fe2c5"
            ]
        ]
    },
    {
        "id": "ec9bfe8a1b7fe2c5",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 15",
        "events": "change",
        "x": 790,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "c92cea1f3a4edc2d",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Main BatteryData from",
        "info": "",
        "x": 140,
        "y": 4580,
        "wires": []
    },
    {
        "id": "510b3fae6581bdc6",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Main BattData delivery",
        "tooltip": "",
        "place": "Select option",
        "group": "bc06df1c.ad422",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "BMS",
                "value": "BMS",
                "type": "str"
            },
            {
                "label": "Victron Shunt",
                "value": "VICTRON",
                "type": "str"
            },
            {
                "label": "VanPi Shunt",
                "value": "VANPISHUNT",
                "type": "str"
            },
            {
                "label": "nothing",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 280,
        "y": 4620,
        "wires": [
            [
                "b964f00a8abdd632",
                "bdc6d831dd924c9a"
            ]
        ]
    },
    {
        "id": "b964f00a8abdd632",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/BatteryDataDelivery",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 720,
        "y": 4620,
        "wires": [
            []
        ]
    },
    {
        "id": "bdc6d831dd924c9a",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "global.set(\"BatteryDataDelivery\",msg.payload);\nif (msg.payload == 1) {\n    msg.payload = \"Delivery of Voltage, Amps, SOC on Display and API is now turned off\";\n}\nelse {\n    msg.payload = \"Voltage, Amps, SOC on Display and API are now delivered from \" + msg.payload + \".\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 4660,
        "wires": [
            [
                "5cc412642f30a5af"
            ]
        ]
    },
    {
        "id": "a578e9ea280452d0",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "MainBattData",
        "links": [
            "15d0f3207d03c2e2"
        ],
        "x": 115,
        "y": 4620,
        "wires": [
            [
                "510b3fae6581bdc6"
            ]
        ]
    },
    {
        "id": "c763a456b05e0009",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "LFBros (433MHz)",
        "group": "bc06df1c.ad422",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LFBros (433MHz) - {{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "LFBros Settings",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 4420,
        "wires": [
            [
                "ff6a707d86af50d7"
            ]
        ]
    },
    {
        "id": "644a07cf68bc865a",
        "type": "comment",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "LFBros Heater",
        "info": "",
        "x": 1060,
        "y": 4380,
        "wires": []
    },
    {
        "id": "ff6a707d86af50d7",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "change to tab 15",
        "events": "change",
        "x": 1270,
        "y": 4420,
        "wires": [
            [
                "b273077299e976ba"
            ]
        ]
    },
    {
        "id": "076622d09a845d5f",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "Back (LFBros)",
        "group": "188bc5875dcdebe6",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to System Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "System Config",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 4420,
        "wires": [
            [
                "bb37fa1bd49a1d25"
            ]
        ]
    },
    {
        "id": "bb37fa1bd49a1d25",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "change to tab 7",
        "events": "change",
        "x": 700,
        "y": 4420,
        "wires": [
            [
                "e7471a345c7bc947"
            ]
        ]
    },
    {
        "id": "0d0c4f66c1a549da",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (WRelays Firmware)",
        "group": "7e769fe6b926f5c6",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to System Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Switches Settings",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 4500,
        "wires": [
            [
                "42e845f4b873e7ca"
            ]
        ]
    },
    {
        "id": "42e845f4b873e7ca",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 11",
        "events": "change",
        "x": 780,
        "y": 4500,
        "wires": [
            []
        ]
    },
    {
        "id": "b273077299e976ba",
        "type": "link out",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "open LFBros tab",
        "mode": "link",
        "links": [
            "0cae297d0927fd5d",
            "7ad39b1f796dc794"
        ],
        "x": 1425,
        "y": 4420,
        "wires": []
    },
    {
        "id": "e7471a345c7bc947",
        "type": "function",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "check LFBros",
        "func": "if (msg.payload == \"change\" && msg.tab == 7) {\n    msg.payload = global.get(\"LFBros\")\n    if (msg.payload == true) {\n        msg.payload = \"active\"\n    }\n    else {\n        msg.payload = \"inactive\"\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 4420,
        "wires": [
            [
                "c763a456b05e0009"
            ]
        ]
    },
    {
        "id": "f1e76210830e48c1",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "83efe75b9db71cfa",
        "name": "device info (water tab)",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 460,
        "y": 20,
        "wires": [
            [
                "2ecd3a1243856cc3"
            ]
        ]
    },
    {
        "id": "73edbb1e37433e5b",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "1ms",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "2ecd3a1243856cc3"
            ]
        ]
    },
    {
        "id": "2ecd3a1243856cc3",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "save device info",
        "func": "global.set(\"devicePlatform\", msg.platform)\nglobal.set(\"deviceLogicalProcessors\", msg.hardwareConcurrency)\nglobal.set(\"devicelanguage\", msg.language)\nglobal.set(\"devicemaxTouchPoints\", msg.maxTouchPoints)\nglobal.set(\"deviceuserAgent\", msg.userAgent)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 60,
        "wires": [
            [
                "e46645f35f31054d"
            ]
        ]
    },
    {
        "id": "e46645f35f31054d",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "hideUI",
        "mode": "link",
        "links": [
            "9150624d67629149",
            "97658c26274f47a0",
            "995d2e11.8d4ab",
            "9c3fb485dd0c5376"
        ],
        "x": 805,
        "y": 60,
        "wires": []
    },
    {
        "id": "c7d043522b73c174",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "rebuild UI when changing to tabs",
        "info": "",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "1934ec1b2b8d7847",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "53df28c11a99d1b9",
        "name": "device info (debug tab)",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "40a4699153812269"
            ]
        ]
    },
    {
        "id": "05b66ee339650401",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "d4ee45356a6231e7",
        "name": "device info (settings tab)",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "40a4699153812269"
            ]
        ]
    },
    {
        "id": "e0118f434dfccd08",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "2a7d142135bfa4c0",
        "name": "device info (heater tab)",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 140,
        "wires": [
            [
                "40a4699153812269"
            ]
        ]
    },
    {
        "id": "4648c451e441a119",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Homebridge & Zigbee2MQTT Admin Panels",
        "info": "",
        "x": 210,
        "y": 4660,
        "wires": []
    },
    {
        "id": "23caf401.9d6d4c",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Homebridge Admin Panel external Link",
        "group": "b6314699.049798",
        "order": 20,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "<a target=\"_blank\"  href=\"http://pekaway.local:8581\">Homebridge Admin Panel</a>",
        "tooltip": "opens in new tab",
        "color": "",
        "bgcolor": "",
        "className": "md-button",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 4700,
        "wires": [
            []
        ]
    },
    {
        "id": "5ddc01b05d61db75",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "bc06df1c.ad422",
        "name": "USB port overview table",
        "order": 4,
        "width": "0",
        "height": "0",
        "format": "<h2 style=\"text-align: center\">RPI4 USB-port overview</h2>\n<table style=\"width: 80%, margin-left: auto, margin-right: auto;\"  border=\"2\">\n    <tbody style=\"text-align: center\">\n        <tr>\n            <th style=\"width:30%\">USB2.0</th>\n            <th style=\"width:30%\">USB3.0</th>\n            <th style=\"width:30%\">LAN</th>\n        </tr>\n        <tr>\n            <td>USB3</td>\n            <td>USB1</td>\n        </tr>\n        <tr>\n            <td>USB4</td>\n            <td>USB2</td>\n            <td>ETH</td>\n        </tr>\n    </tbody>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 4780,
        "wires": [
            []
        ]
    },
    {
        "id": "6b0c795ef32a8d0e",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Use hysteresis",
        "tooltip": "turn off hysteres if you don´t want to use it",
        "group": "3c103828.22b0b8",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 1860,
        "wires": [
            [
                "498fc06abbe5f12a"
            ]
        ]
    },
    {
        "id": "24f4c8cbd1618d02",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "hyst",
        "links": [
            "e7f163efc71ccc07"
        ],
        "x": 1255,
        "y": 1900,
        "wires": [
            [
                "d08f5ef86a6dfab9"
            ]
        ]
    },
    {
        "id": "da5fc99e9eb9b5b0",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set true",
        "func": "msg.payload=true;\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1860,
        "wires": [
            [
                "6b0c795ef32a8d0e"
            ]
        ]
    },
    {
        "id": "d08f5ef86a6dfab9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check false",
        "func": "if(msg.payload!=\"false\")\n{\n    msg.payload=Number(msg.payload);\n    return msg\n}\n\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1900,
        "wires": [
            [
                "b93f567c.b64d48",
                "da5fc99e9eb9b5b0"
            ]
        ]
    },
    {
        "id": "498fc06abbe5f12a",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "if turned off",
        "func": "if(msg.payload==false)\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1860,
        "wires": [
            [
                "664f77bb.262658"
            ]
        ]
    },
    {
        "id": "71b0a92ff2e2a50e",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "5e9fae2535ccd4cf",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3040,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "372f4093aa16e42d",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "18d572285c0e2bdc",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3040,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "5cc61ae3b957d569",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "abf8e97320bf0ff9",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3040,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "946777fa38eb065a",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "6c129fd14ffff4be",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3040,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "5ffebe7e59f87f77",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "bb8e4f60cbe8f685",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3040,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "9f29ee2977bb48e4",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Reset Calibration",
        "group": "1032e8ff.e5a657",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset Calibration",
        "tooltip": "Resets all stored calibration values",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 2290,
        "y": 2020,
        "wires": [
            [
                "249277c3d6160244"
            ]
        ]
    },
    {
        "id": "55becc0420716d9e",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "set votronic",
        "group": "1032e8ff.e5a657",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set {{msg.payload}} Votronic (max 2.4v)",
        "tooltip": "calibrate water sensor (empty)",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1410,
        "y": 2220,
        "wires": [
            [
                "f77282aa64d13bc4"
            ]
        ]
    },
    {
        "id": "f77282aa64d13bc4",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (flow.get(\"wtsno\") === \"all\") {\n    global.set(\"levelempty\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [msg, null, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #1\") {\n    global.set(\"levelempty1\",Number(msg.payload.level1));\n    msg.payload  = Number(msg.payload.level1);\n    return [null, msg, null, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #2\") {\n    global.set(\"levelempty2\",Number(msg.payload.level2));\n    msg.payload  = Number(msg.payload.level2);\n    return [null, null, msg, null, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #3\") {\n    global.set(\"levelempty3\",Number(msg.payload.level3));\n    msg.payload  = Number(msg.payload.level3);\n    return [null, null, null, msg, null];\n}\n\nelse if (flow.get(\"wtsno\") === \"sensor #4\") {\n    global.set(\"levelempty4\",Number(msg.payload.level4));\n    msg.payload  = Number(msg.payload.level4);\n    return [null, null, null, null, msg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2220,
        "wires": [
            [],
            [
                "db9423a2dd95b2b8",
                "fc423b183ce9a32d"
            ],
            [
                "3c9d07b8a0bba809",
                "bf0ea1206154cafa"
            ],
            [
                "fcc55031d6ed4646",
                "5a4ff8dcb1a65121"
            ],
            [
                "11b442ac88ed53f6",
                "291fc895a6704833"
            ]
        ]
    },
    {
        "id": "e3ee77ae0a3c8eef",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "05106d52861e80c6",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "bd35380031b0a2b3",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "10a3ad78b15977b2",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelempty4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "94a43f33f67d6641",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2030,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "3d9baaa8402dd8d8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2030,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "e4b5dafe6e83525f",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2030,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "9af8f2067b13abe1",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/levelfull4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2030,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "db9423a2dd95b2b8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 19000",
        "func": "msg.payload=19000;\n  global.set(\"levelfull1\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2120,
        "wires": [
            [
                "94a43f33f67d6641"
            ]
        ]
    },
    {
        "id": "3c9d07b8a0bba809",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 19000",
        "func": "msg.payload=19000;\n  global.set(\"levelfull2\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2160,
        "wires": [
            [
                "3d9baaa8402dd8d8"
            ]
        ]
    },
    {
        "id": "fcc55031d6ed4646",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 19000",
        "func": "msg.payload=19000;\n  global.set(\"levelfull3\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2200,
        "wires": [
            [
                "e4b5dafe6e83525f"
            ]
        ]
    },
    {
        "id": "11b442ac88ed53f6",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 19000",
        "func": "msg.payload=19000;\n  global.set(\"levelfull4\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2240,
        "wires": [
            [
                "9af8f2067b13abe1"
            ]
        ]
    },
    {
        "id": "fc423b183ce9a32d",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 300",
        "func": "msg.payload=300;\n  global.set(\"levelempty1\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2340,
        "wires": [
            [
                "e3ee77ae0a3c8eef"
            ]
        ]
    },
    {
        "id": "bf0ea1206154cafa",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 300",
        "func": "msg.payload=300;\n  global.set(\"levelempty2\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2380,
        "wires": [
            [
                "05106d52861e80c6"
            ]
        ]
    },
    {
        "id": "5a4ff8dcb1a65121",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 300",
        "func": "msg.payload=300;\n  global.set(\"levelempty3\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2420,
        "wires": [
            [
                "bd35380031b0a2b3"
            ]
        ]
    },
    {
        "id": "291fc895a6704833",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set to 300",
        "func": "msg.payload=300;\n  global.set(\"levelempty4\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2460,
        "wires": [
            [
                "10a3ad78b15977b2"
            ]
        ]
    },
    {
        "id": "e102e1414cf8f37f",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 3270,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "3258071d46580b74",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "calibration reset done!",
        "func": "msg.payload = \"Calibration reset done! Please reboot.\"\n\n// set global variables to 1\nglobal.set(\"levelfull1\", 1)\nglobal.set(\"levelfull2\", 1)\nglobal.set(\"levelfull3\", 1)\nglobal.set(\"levelfull4\", 1)\nglobal.set(\"levelempty1\", 1)\nglobal.set(\"levelempty2\", 1)\nglobal.set(\"levelempty3\", 1)\nglobal.set(\"levelempty4\", 1)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3040,
        "y": 2020,
        "wires": [
            [
                "e102e1414cf8f37f"
            ]
        ]
    },
    {
        "id": "42aad9402f813889",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "USB port overview table",
        "info": "",
        "x": 140,
        "y": 4740,
        "wires": []
    },
    {
        "id": "9f4939c57812b402",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload =\"Set new heat relays\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2800,
        "wires": [
            [
                "6b78c16c04f35691"
            ]
        ]
    },
    {
        "id": "6b78c16c04f35691",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 910,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "dacb0450c1cf2f4d",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "581519e1.3431d8",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset Connected Relay",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "8fd09920.7326c8",
                "f04ab494.8fd7a8"
            ]
        ]
    },
    {
        "id": "cdb5c415e0583d32",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "new connect",
        "events": "connect",
        "x": 210,
        "y": 60,
        "wires": [
            [
                "73edbb1e37433e5b"
            ]
        ]
    },
    {
        "id": "2218e25211ded319",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "change to tab 1",
        "links": [
            "f5a2124f9c3ff250"
        ],
        "x": 145,
        "y": 3700,
        "wires": [
            [
                "92da2892357d16a9",
                "9c1603a0baa656c6",
                "4e405feab522a4b1",
                "31b0ea846721640d",
                "11aacd5a139441ba"
            ]
        ]
    },
    {
        "id": "b02ef607f0a0cf56",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "\nglobal.set(\"pkwshuntactive\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "727cf5efe771ad89",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "d9229161.b8548",
        "name": "device info (switches tab)",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "40a4699153812269"
            ]
        ]
    },
    {
        "id": "40a4699153812269",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "hideUI2",
        "mode": "link",
        "links": [
            "995d2e11.8d4ab",
            "9150624d67629149",
            "97658c26274f47a0",
            "9c3fb485dd0c5376"
        ],
        "x": 805,
        "y": 100,
        "wires": []
    },
    {
        "id": "93842c753d78b1bb",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "ohms",
        "func": "global.set(flow.get(\"ohm#\"), msg.payload)\nvar filename = \"\"\nvar ohmwert = msg.payload\nmsg.payload = msg.payload*22.47\n\nif (flow.get(\"ohm#\") == \"ohm1empty\") { filename = \"levelempty1\"; global.set(\"levelempty1\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm2empty\") { filename = \"levelempty2\"; global.set(\"levelempty2\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm3empty\") { filename = \"levelempty3\"; global.set(\"levelempty3\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm4empty\") { filename = \"levelempty4\"; global.set(\"levelempty4\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm1full\") { filename = \"levelfull1\"; global.set(\"levelfull1\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm2full\") { filename = \"levelfull2\"; global.set(\"levelfull2\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm3full\") { filename = \"levelfull3\"; global.set(\"levelfull3\", msg.payload)}\nelse if (flow.get(\"ohm#\") == \"ohm4full\") { filename = \"levelfull4\"; global.set(\"levelfull4\", msg.payload)}\n\nmsg.filename = \"pekaway/\"+filename\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2300,
        "wires": [
            [
                "fb5be32b131ff47d"
            ]
        ]
    },
    {
        "id": "fb5be32b131ff47d",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "write lvl",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 820,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "5cc412642f30a5af",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 4660,
        "wires": []
    },
    {
        "id": "168d1e7acee659ef",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "show/hide clock (client time) in toolbar",
        "info": "",
        "x": 1130,
        "y": 4160,
        "wires": []
    },
    {
        "id": "ed4136fa1b3a91fd",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Client time in toolbar",
        "tooltip": "show/hide client time in toolbar",
        "group": "f06428cbbee24a1a",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1340,
        "y": 4200,
        "wires": [
            [
                "a142a1f4f4303fbd",
                "67e2bf06cf99dea2"
            ]
        ]
    },
    {
        "id": "a142a1f4f4303fbd",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/clienttimetoolbar",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1590,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "7bb31b614ef172bc",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "systemtime_init_config",
        "links": [
            "ea056e6598b5f8c6"
        ],
        "x": 945,
        "y": 4200,
        "wires": [
            [
                "32502c19b976361e"
            ]
        ]
    },
    {
        "id": "32502c19b976361e",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/clienttimetoolbar",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1110,
        "y": 4200,
        "wires": [
            [
                "ed4136fa1b3a91fd"
            ]
        ]
    },
    {
        "id": "48e17b518e6adc39",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "new connect",
        "events": "connect",
        "x": 890,
        "y": 4160,
        "wires": [
            [
                "32502c19b976361e"
            ]
        ]
    },
    {
        "id": "67e2bf06cf99dea2",
        "type": "template",
        "z": "67973ee8.553c3",
        "name": "show/hide clock",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script id=\"titleScript\" type=\"text/javascript\">\n    $(function() {\n        if($('.md-toolbar-tools').length != 0){\n            loadClock();\n        }\n        else setTimeout(loadClock, 500)\n    });\n    \n    function loadClock(){\n        \n        $('#clock').remove();\n        var toolbar = $('.md-toolbar-tools');\n        \n        var div = $('<div/>');\n        var p = $('<p/ id=\"clock\">');\n        \n        div.append(p);\n        div[0].style.margin = '5px 5px 5px auto';\n        toolbar.append(div);\n    \n        function displayTitle(lh) {\n            p.text(lh); \n        }\n        \n        function upTime() {\n            var d = new Date().toLocaleString();\n            p.text(d);\n        }\n        \n        function stop(){\n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n        }\n    \n        if(document.clockInterval){ \n                clearInterval(document.clockInterval);\n                document.clockInterval = null;\n        }\n            \n        document.clockInterval = setInterval(upTime,1000);\n        \n        if({{payload}} == false) {\n            stop();\n        }\n    }\n</script>",
        "output": "str",
        "x": 1580,
        "y": 4200,
        "wires": [
            [
                "43659deb8615c16e"
            ]
        ]
    },
    {
        "id": "43659deb8615c16e",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "ad6693f831ad6b68",
        "name": "clock_toolbar",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1750,
        "y": 4200,
        "wires": [
            []
        ]
    },
    {
        "id": "501dde2f7af5a5e5",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "4",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Done",
        "x": 2030,
        "y": 640,
        "wires": []
    },
    {
        "id": "3334ee7ff0f7fc6c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "usb reset button",
        "mode": "link",
        "links": [
            "51858671e39c9f96",
            "8eb597b7ad8580fb",
            "bf2cea84191ef3d2",
            "c5f0c4372a081cd7"
        ],
        "x": 1995,
        "y": 680,
        "wires": []
    },
    {
        "id": "38682b0ecaec0b68",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "22cf294bc3fa89ec",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Switch Scheduler",
        "tooltip": "schedule switches to turn on/off automatically",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Switch Timer",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 4420,
        "wires": [
            [
                "f5064128b0d60289"
            ]
        ]
    },
    {
        "id": "f5064128b0d60289",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 16",
        "events": "change",
        "x": 330,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "75a425942d012569",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Back (switch timer)",
        "group": "d93ee74d4f9e99b5",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back to Switches Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Switches Settings",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 4540,
        "wires": [
            [
                "4d43d84678681e04"
            ]
        ]
    },
    {
        "id": "4d43d84678681e04",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 11",
        "events": "change",
        "x": 780,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "4f570709cf8768ab",
        "type": "ui_time_scheduler",
        "z": "67973ee8.553c3",
        "group": "b54104dfc2549c8a",
        "name": "relay scheduler",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Relay 1",
            "Relay 2",
            "Relay 3",
            "Relay 4",
            "Relay 5",
            "Relay 6",
            "Relay 7",
            "Relay 8"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": true,
        "eventOptions": [
            {
                "label": "Ein",
                "event": "true"
            },
            {
                "label": "Aus",
                "event": "false"
            }
        ],
        "sendTopic": true,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 9,
        "order": 1,
        "width": "6",
        "height": "6",
        "x": 2340,
        "y": 1020,
        "wires": [
            [
                "79694fe549d64d64"
            ],
            [
                "f1b2da140f70c6ec"
            ],
            [
                "44f1ac73f6b1508c"
            ],
            [
                "4e22062602e704a0"
            ],
            [
                "cfc4634bb3ce625f"
            ],
            [
                "12a3e2a3c679d38b"
            ],
            [
                "c2dd512ba1fb2a38"
            ],
            [
                "299ab89584395772"
            ],
            [
                "5bd75b59cbebea5d"
            ]
        ]
    },
    {
        "id": "8b0246cb957cb9b6",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relaytimer",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2130,
        "y": 1020,
        "wires": [
            [
                "4f570709cf8768ab"
            ]
        ]
    },
    {
        "id": "79694fe549d64d64",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relaytimer",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2560,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "eea314e8db15484c",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1930,
        "y": 1020,
        "wires": [
            [
                "8b0246cb957cb9b6",
                "a308d4859e35c529",
                "789aa7e8200ff74b"
            ]
        ]
    },
    {
        "id": "f1b2da140f70c6ec",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 1",
        "mode": "link",
        "links": [
            "e9ffa3ef.cde5d"
        ],
        "x": 2515,
        "y": 960,
        "wires": []
    },
    {
        "id": "44f1ac73f6b1508c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 2",
        "mode": "link",
        "links": [
            "7255f9f4.6304d8"
        ],
        "x": 2515,
        "y": 980,
        "wires": []
    },
    {
        "id": "4e22062602e704a0",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 3",
        "mode": "link",
        "links": [
            "c698c6e8.416b58"
        ],
        "x": 2515,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cfc4634bb3ce625f",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 4",
        "mode": "link",
        "links": [
            "f14867fc.930ab8"
        ],
        "x": 2515,
        "y": 1020,
        "wires": []
    },
    {
        "id": "12a3e2a3c679d38b",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 5",
        "mode": "link",
        "links": [
            "1d05179e.1f1a78"
        ],
        "x": 2515,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c2dd512ba1fb2a38",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 6",
        "mode": "link",
        "links": [
            "c9adec52.63ae6"
        ],
        "x": 2515,
        "y": 1060,
        "wires": []
    },
    {
        "id": "299ab89584395772",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 7",
        "mode": "link",
        "links": [
            "38796905.f4b7f6"
        ],
        "x": 2515,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5bd75b59cbebea5d",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "relay scheduler 8",
        "mode": "link",
        "links": [
            "2840c10.f61294"
        ],
        "x": 2515,
        "y": 1100,
        "wires": []
    },
    {
        "id": "84a9d8af61f72238",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "relay scheduler",
        "info": "",
        "x": 2120,
        "y": 980,
        "wires": []
    },
    {
        "id": "d9bf0a6d2bcc5cbb",
        "type": "ui_time_scheduler",
        "z": "67973ee8.553c3",
        "group": "53857bc3b2682217",
        "name": "wrelay scheduler",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Wifi-Relay 1",
            "Wifi-Relay 2",
            "Wifi-Relay 3",
            "Wifi-Relay 4",
            "Wifi-Relay 5",
            "Wifi-Relay 6",
            "Wifi-Relay 7",
            "Wifi-Relay 8"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": true,
        "eventOptions": [
            {
                "label": "On",
                "event": "true"
            },
            {
                "label": "Off",
                "event": "false"
            }
        ],
        "sendTopic": true,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 9,
        "order": 1,
        "width": "6",
        "height": "6",
        "x": 2350,
        "y": 1240,
        "wires": [
            [
                "c78eb37aab20394d"
            ],
            [
                "d896b7d25f27d216"
            ],
            [
                "bae1aa2b504067f3"
            ],
            [
                "cad82fcbb61f0530"
            ],
            [
                "be5d99d7bf514d04"
            ],
            [
                "bf2e41e184d48192"
            ],
            [
                "bc676754f5ac029c"
            ],
            [
                "d09d8d62a8430b81"
            ],
            [
                "b2c1b6f968d4140c"
            ]
        ]
    },
    {
        "id": "a308d4859e35c529",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelaytimer",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2140,
        "y": 1240,
        "wires": [
            [
                "d9bf0a6d2bcc5cbb"
            ]
        ]
    },
    {
        "id": "c78eb37aab20394d",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/wrelaytimer",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2560,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "d896b7d25f27d216",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 1",
        "mode": "link",
        "links": [
            "afbb8dda.ffe6c"
        ],
        "x": 2515,
        "y": 1180,
        "wires": []
    },
    {
        "id": "bae1aa2b504067f3",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 2",
        "mode": "link",
        "links": [
            "33a5d09e.6cc14"
        ],
        "x": 2515,
        "y": 1200,
        "wires": []
    },
    {
        "id": "cad82fcbb61f0530",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 3",
        "mode": "link",
        "links": [
            "428f4d48.86eaf4"
        ],
        "x": 2515,
        "y": 1220,
        "wires": []
    },
    {
        "id": "be5d99d7bf514d04",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 4",
        "mode": "link",
        "links": [
            "d2ce5044.ef8af"
        ],
        "x": 2515,
        "y": 1240,
        "wires": []
    },
    {
        "id": "bf2e41e184d48192",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 5",
        "mode": "link",
        "links": [
            "9f1c7c65c2da2d42"
        ],
        "x": 2515,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bc676754f5ac029c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 6",
        "mode": "link",
        "links": [
            "d76c3b78c0f14e69"
        ],
        "x": 2515,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d09d8d62a8430b81",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 7",
        "mode": "link",
        "links": [
            "34f49f08e1a06032"
        ],
        "x": 2515,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b2c1b6f968d4140c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler 8",
        "mode": "link",
        "links": [
            "1be6547089f6e149"
        ],
        "x": 2515,
        "y": 1320,
        "wires": []
    },
    {
        "id": "85fc36eb50e9043d",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "wrelay scheduler",
        "info": "",
        "x": 2120,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f063ba32ccb5b4f5",
        "type": "ui_time_scheduler",
        "z": "67973ee8.553c3",
        "group": "dcc4cb1313e07d29",
        "name": "dimmer scheduler",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Dimmer 1",
            "Dimmer 2",
            "Dimmer 3",
            "Dimmer 4",
            "Dimmer 5",
            "Dimmer 6",
            "Dimmer 7",
            "Dimmer 8"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": true,
        "eventMode": true,
        "eventOptions": [],
        "sendTopic": true,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 9,
        "order": 1,
        "width": "6",
        "height": "6",
        "x": 2350,
        "y": 1460,
        "wires": [
            [
                "571a2255980edef3"
            ],
            [
                "bf4638049b59851d"
            ],
            [
                "2beb213672c5b686"
            ],
            [
                "dcb60b857f1453dd"
            ],
            [
                "2c39ce8189987a8e"
            ],
            [
                "9dc82a8fe47fab33"
            ],
            [
                "5e04bc64c7847caf"
            ],
            [
                "e94185f5d94fa5f7"
            ],
            [
                "c0456823efdfa6b7"
            ]
        ]
    },
    {
        "id": "789aa7e8200ff74b",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmertimer",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2140,
        "y": 1460,
        "wires": [
            [
                "f063ba32ccb5b4f5"
            ]
        ]
    },
    {
        "id": "571a2255980edef3",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmertimer",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2560,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "dbb87fff6ea8f3e8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 0",
        "mode": "link",
        "links": [
            "a4c0fd66546e7864"
        ],
        "x": 2685,
        "y": 1420,
        "wires": []
    },
    {
        "id": "b86bb3de43067526",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler",
        "info": "",
        "x": 2130,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bf4638049b59851d",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer0\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true || msg.payload == \"On\") {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false || msg.payload == \"Off\") {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1420,
        "wires": [
            [
                "dbb87fff6ea8f3e8"
            ]
        ]
    },
    {
        "id": "2beb213672c5b686",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer1\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1440,
        "wires": [
            [
                "9eba5e6e51323f79"
            ]
        ]
    },
    {
        "id": "dcb60b857f1453dd",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer2\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1460,
        "wires": [
            [
                "64198e9c23b17369"
            ]
        ]
    },
    {
        "id": "2c39ce8189987a8e",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer3\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1480,
        "wires": [
            [
                "c7040dac22c555ec"
            ]
        ]
    },
    {
        "id": "9dc82a8fe47fab33",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer4\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1500,
        "wires": [
            [
                "74b52f515245eb5e"
            ]
        ]
    },
    {
        "id": "5e04bc64c7847caf",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer5\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1520,
        "wires": [
            [
                "e8b08d280f05a340"
            ]
        ]
    },
    {
        "id": "e94185f5d94fa5f7",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer6\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1540,
        "wires": [
            [
                "2ea5dd729742663c"
            ]
        ]
    },
    {
        "id": "c0456823efdfa6b7",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format event",
        "func": "msg.label = global.get(\"Ndimmer7\")\n\nif (parseInt(msg.payload) > 100) {\n    msg.payload = 100\n    return msg\n}\nif (parseInt(msg.payload) < 0) {\n    msg.payload = 0\n    return msg\n}\nif (msg.payload == true) {\n    msg.payload = 100\n    return msg\n}\nif (msg.payload == false) {\n    msg.payload = 0\n    return msg\n}\nif ((parseInt(msg.payload) >= 0) && (parseInt(msg.payload) <= 100)) {\n    msg.payload = parseInt(msg.payload)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1560,
        "wires": [
            [
                "ab6fb532c86d1b61"
            ]
        ]
    },
    {
        "id": "9eba5e6e51323f79",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 1",
        "mode": "link",
        "links": [
            "1db51e9f7fe5ebea"
        ],
        "x": 2685,
        "y": 1440,
        "wires": []
    },
    {
        "id": "64198e9c23b17369",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 2",
        "mode": "link",
        "links": [
            "09bf8b5862924eed"
        ],
        "x": 2685,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c7040dac22c555ec",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 3",
        "mode": "link",
        "links": [
            "4896e98db77c2f91"
        ],
        "x": 2685,
        "y": 1480,
        "wires": []
    },
    {
        "id": "74b52f515245eb5e",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 4",
        "mode": "link",
        "links": [
            "77683cc8a2a2dd71"
        ],
        "x": 2685,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e8b08d280f05a340",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 5",
        "mode": "link",
        "links": [
            "2530d817d07d6ef2"
        ],
        "x": 2685,
        "y": 1520,
        "wires": []
    },
    {
        "id": "2ea5dd729742663c",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 6",
        "mode": "link",
        "links": [
            "d4e73c36b453526a"
        ],
        "x": 2685,
        "y": 1540,
        "wires": []
    },
    {
        "id": "ab6fb532c86d1b61",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmer scheduler 7",
        "mode": "link",
        "links": [
            "bd1237489ec8e5f3"
        ],
        "x": 2685,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1f0adf8924f587be",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "select switch",
        "tooltip": "select the switch for which you want to set automated turn off",
        "place": "select switch",
        "group": "d93ee74d4f9e99b5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 800,
        "wires": [
            [
                "02a7d521e8c330d5"
            ]
        ]
    },
    {
        "id": "e62bf89c97775c19",
        "type": "ui_slider",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "set minutes",
        "tooltip": "",
        "group": "d93ee74d4f9e99b5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "600",
        "step": "5",
        "className": "",
        "x": 2670,
        "y": 800,
        "wires": [
            [
                "d582452f5e4ded70"
            ]
        ]
    },
    {
        "id": "02a7d521e8c330d5",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set label",
        "func": "// Relays\nif (msg.payload == \"one\") { msg.label = \"Relay 1\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"oneoffauto\") }\nif (msg.payload == \"two\") { msg.label = \"Relay 2\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"twooffauto\") }\nif (msg.payload == \"three\") { msg.label = \"Relay 3\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"threeoffauto\") }\nif (msg.payload == \"four\") { msg.label = \"Relay 4\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"fouroffauto\") }\nif (msg.payload == \"five\") { msg.label = \"Relay 5\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"fiveoffauto\") }\nif (msg.payload == \"six\") { msg.label = \"Relay 6\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"sixoffauto\") }\nif (msg.payload == \"seven\") { msg.label = \"Relay 7\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"sevenoffauto\") }\nif (msg.payload == \"eight\") { msg.label = \"Relay 8\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"eightoffauto\") }\n\n//Wifi-Relays\nif (msg.payload == \"wone\") { msg.label = \"W-Relay 1\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"woneoffauto\") }\nif (msg.payload == \"wtwo\") { msg.label = \"W-Relay 2\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wtwooffauto\") }\nif (msg.payload == \"wthree\") { msg.label = \"W-Relay 3\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wthreeoffauto\") }\nif (msg.payload == \"wfour\") { msg.label = \"W-Relay 4\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wfouroffauto\") }\nif (msg.payload == \"wfive\") { msg.label = \"W-Relay 5\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wfiveoffauto\") }\nif (msg.payload == \"wsix\") { msg.label = \"W-Relay 6\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wsixoffauto\") }\nif (msg.payload == \"wseven\") { msg.label = \"W-Relay 7\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"wsevenoffauto\") }\nif (msg.payload == \"weight\") { msg.label = \"W-Relay 8\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"weightoffauto\") }\n\n//Dimmer\nif (msg.payload == \"done\") { msg.label = \"Dimmer 1\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"doneoffauto\") }\nif (msg.payload == \"dtwo\") { msg.label = \"Dimmer 2\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dtwooffauto\") }\nif (msg.payload == \"dthree\") { msg.label = \"Dimmer 3\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dthreeoffauto\") }\nif (msg.payload == \"dfour\") { msg.label = \"Dimmer 4\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dfouroffauto\") }\nif (msg.payload == \"dfive\") { msg.label = \"Dimmer 5\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dfiveoffauto\") }\nif (msg.payload == \"dsix\") { msg.label = \"Dimmer 6\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dsixoffauto\") }\nif (msg.payload == \"dseven\") { msg.label = \"Dimmer 7\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"dsevenoffauto\") }\nif (msg.payload == \"deight\") { msg.label = \"Dimmer 8\"; flow.set(\"relayautooff\",msg.payload); msg.payload = global.get(\"deightoffauto\") }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 800,
        "wires": [
            [
                "e62bf89c97775c19"
            ]
        ]
    },
    {
        "id": "d582452f5e4ded70",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "change variables",
        "func": "//INIT FLOW!!!\n\n// Relays\nif (flow.get(\"relayautooff\") == \"one\") { global.set(\"oneoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"two\") { global.set(\"twooffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"three\") { global.set(\"threeoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"four\") { global.set(\"fouroffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"five\") { global.set(\"fiveoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"six\") { global.set(\"sixoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"seven\") { global.set(\"sevenoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"eight\") { global.set(\"eightoffauto\", msg.payload) }\n\n// Wifi-Relays\nif (flow.get(\"relayautooff\") == \"wone\") { global.set(\"woneoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wtwo\") { global.set(\"wtwooffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wthree\") { global.set(\"wthreeoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wfour\") { global.set(\"wfouroffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wfive\") { global.set(\"wfiveoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wsix\") { global.set(\"wsixoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"wseven\") { global.set(\"wsevenoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"weight\") { global.set(\"weightoffauto\", msg.payload) }\n\n// Dimmer\nif (flow.get(\"relayautooff\") == \"done\") { global.set(\"doneoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dtwo\") { global.set(\"dtwooffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dthree\") { global.set(\"dthreeoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dfour\") { global.set(\"dfouroffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dfive\") { global.set(\"dfiveoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dsix\") { global.set(\"dsixoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"dseven\") { global.set(\"dsevenoffauto\", msg.payload) }\nif (flow.get(\"relayautooff\") == \"deight\") { global.set(\"deightoffauto\", msg.payload) }\n\nmsg.payload = {\n    [global.get('None')]: global.get(\"oneoffauto\"),\n    [global.get('Ntwo')]: global.get(\"twooffauto\"),\n    [global.get('Nthree')]: global.get(\"threeoffauto\"),\n    [global.get('Nfour')]: global.get(\"fouroffauto\"),\n    [global.get('Nfive')]: global.get(\"fiveoffauto\"),\n    [global.get('Nsix')]: global.get(\"sixoffauto\"),\n    [global.get('Nseven')]: global.get(\"sevenoffauto\"),\n    [global.get('Neight')]: global.get(\"eightoffauto\"),\n    [global.get('NWone')]: global.get(\"woneoffauto\"),\n    [global.get('NWtwo')]: global.get(\"wtwooffauto\"),\n    [global.get('NWthree')]: global.get(\"wthreeoffauto\"),\n    [global.get('NWtfour')]: global.get(\"wfouroffauto\"),\n    [global.get('NWfive')]: global.get(\"wfiveoffauto\"),\n    [global.get('NWsix')]: global.get(\"wsixoffauto\"),\n    [global.get('NWseven')]: global.get(\"wsevenoffauto\"),\n    [global.get('NWeight')]: global.get(\"weightoffauto\"),\n    [global.get('Ndimmer0')]: global.get(\"doneoffauto\"),\n    [global.get('Ndimmer1')]: global.get(\"dtwooffauto\"),\n    [global.get('Ndimmer2')]: global.get(\"dthreeoffauto\"),\n    [global.get('Ndimmer3')]: global.get(\"dfouroffauto\"),\n    [global.get('Ndimmer4')]: global.get(\"dfiveoffauto\"),\n    [global.get('Ndimmer5')]: global.get(\"dsixoffauto\"),\n    [global.get('Ndimmer6')]: global.get(\"dsevenoffauto\"),\n    [global.get('Ndimmer7')]: global.get(\"deightoffauto\"),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 800,
        "wires": [
            [
                "f7733edf468f8fc9"
            ]
        ]
    },
    {
        "id": "f7733edf468f8fc9",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relayoffauto",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3080,
        "y": 800,
        "wires": [
            [
                "58ead8ae97c81350"
            ]
        ]
    },
    {
        "id": "43eec4dac9717446",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/relayoffauto",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2340,
        "y": 860,
        "wires": [
            [
                "1f99904344574b8e",
                "8bd231f421e77cb7"
            ]
        ]
    },
    {
        "id": "38aece35f3351dde",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "d93ee74d4f9e99b5",
        "order": 3,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "currently set",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3370,
        "y": 860,
        "wires": []
    },
    {
        "id": "1f99904344574b8e",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ":",
                "fromt": "str",
                "to": ": ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "{",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "}",
                "fromt": "str",
                "to": "min",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",",
                "fromt": "str",
                "to": "min,",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ":  0min,",
                "fromt": "str",
                "to": " not set,",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 860,
        "wires": [
            [
                "fe5600d8516ac7fc"
            ]
        ]
    },
    {
        "id": "58ead8ae97c81350",
        "type": "json",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3250,
        "y": 800,
        "wires": [
            [
                "1f99904344574b8e"
            ]
        ]
    },
    {
        "id": "fe5600d8516ac7fc",
        "type": "split",
        "z": "67973ee8.553c3",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2750,
        "y": 860,
        "wires": [
            [
                "52dcbd8a843c270c"
            ]
        ]
    },
    {
        "id": "52dcbd8a843c270c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format time",
        "func": "if (msg.payload.includes(\": 0min\")) {\n    msg.payload = \"\"\n}\nelse {\n    var payload = msg.payload\n    var relay\n    var payloadmin = payload.split(' ')[2]\n    relay = payload.split(' ')[0] + \" \" + payload.split(' ')[1]\n    payloadmin = parseInt(payloadmin)\n    \n    if (payloadmin >= 60) {\n        var old = payloadmin\n        var hour = (payloadmin / 60).toString()\n        msg.payload = hour.split('.')[0]\n        var minutes = old-(parseInt(msg.payload)*60)\n        if (minutes > 0 ) {\n            msg.payload = relay + \" \" + msg.payload + \"h \" + minutes + \"min\"\n        }\n        else {\n            msg.payload = relay + \": \" + msg.payload + \"h\"\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 860,
        "wires": [
            [
                "a198cad69b90a5a8"
            ]
        ]
    },
    {
        "id": "a198cad69b90a5a8",
        "type": "join",
        "z": "67973ee8.553c3",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3030,
        "y": 860,
        "wires": [
            [
                "52bddbe8af545e4a"
            ]
        ]
    },
    {
        "id": "52bddbe8af545e4a",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",,",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",,",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",,",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",,",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",,",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",",
                "fromt": "str",
                "to": "<br>",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "::",
                "fromt": "str",
                "to": ":",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 860,
        "wires": [
            [
                "38aece35f3351dde"
            ]
        ]
    },
    {
        "id": "f22fab6ff7e853c5",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "d93ee74d4f9e99b5",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "unset all auto turn offs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2140,
        "y": 740,
        "wires": [
            [
                "801b2d2eb17589cc"
            ]
        ]
    },
    {
        "id": "55347067f952352c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set all to 0",
        "func": "if (msg.payload == \"Cancel!\") {\n    return null\n}\n\nmsg.payload = 0\n\nglobal.set(\"oneoffauto\", msg.payload)\nglobal.set(\"twooffauto\", msg.payload)\nglobal.set(\"threeoffauto\", msg.payload)\nglobal.set(\"fouroffauto\", msg.payload)\nglobal.set(\"fiveoffauto\", msg.payload)\nglobal.set(\"sixoffauto\", msg.payload)\nglobal.set(\"sevenoffauto\", msg.payload)\nglobal.set(\"eightoffauto\", msg.payload)\nglobal.set(\"woneoffauto\", msg.payload)\nglobal.set(\"wtwooffauto\", msg.payload)\nglobal.set(\"wthreeoffauto\", msg.payload)\nglobal.set(\"wfouroffauto\", msg.payload)\nglobal.set(\"wfiveoffauto\", msg.payload)\nglobal.set(\"wsixoffauto\", msg.payload)\nglobal.set(\"wsevenoffauto\", msg.payload)\nglobal.set(\"weightoffauto\", msg.payload)\nglobal.set(\"doneoffauto\", msg.payload)\nglobal.set(\"dtwooffauto\", msg.payload)\nglobal.set(\"dthreeoffauto\", msg.payload)\nglobal.set(\"dfouroffauto\", msg.payload)\nglobal.set(\"dfiveoffauto\", msg.payload)\nglobal.set(\"dsixoffauto\", msg.payload)\nglobal.set(\"dsevenoffauto\", msg.payload)\nglobal.set(\"deightoffauto\", msg.payload)\n\nmsg.payload = {\n    \"Relay 1\": global.get(\"oneoffauto\"),\n    \"Relay 2\": global.get(\"twooffauto\"),\n    \"Relay 3\": global.get(\"threeoffauto\"),\n    \"Relay 4\": global.get(\"fouroffauto\"),\n    \"Relay 5\": global.get(\"fiveoffauto\"),\n    \"Relay 6\": global.get(\"sixoffauto\"),\n    \"Relay 7\": global.get(\"sevenoffauto\"),\n    \"Relay 8\": global.get(\"eightoffauto\"),\n    \"W-Relay 1\": global.get(\"woneoffauto\"),\n    \"W-Relay 2\": global.get(\"wtwooffauto\"),\n    \"W-Relay 3\": global.get(\"wthreeoffauto\"),\n    \"W-Relay 4\": global.get(\"wfouroffauto\"),\n    \"W-Relay 5\": global.get(\"wfiveoffauto\"),\n    \"W-Relay 6\": global.get(\"wsixoffauto\"),\n    \"W-Relay 7\": global.get(\"wsevenoffauto\"),\n    \"W-Relay 8\": global.get(\"weightoffauto\"),\n    \"Dimmer 1\": global.get(\"doneoffauto\"),\n    \"Dimmer 2\": global.get(\"dtwooffauto\"),\n    \"Dimmer 3\": global.get(\"dthreeoffauto\"),\n    \"Dimmer 4\": global.get(\"dfouroffauto\"),\n    \"Dimmer 5\": global.get(\"dfiveoffauto\"),\n    \"Dimmer 6\": global.get(\"dsixoffauto\"),\n    \"Dimmer 7\": global.get(\"dsevenoffauto\"),\n    \"Dimmer 8\": global.get(\"deightoffauto\"),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 740,
        "wires": [
            [
                "f7733edf468f8fc9",
                "b91a041ce938b0a5"
            ]
        ]
    },
    {
        "id": "b91a041ce938b0a5",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "label",
                "pt": "msg",
                "to": "Relay 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2850,
        "y": 740,
        "wires": [
            [
                "e62bf89c97775c19",
                "f72439b20ba0c0ca"
            ]
        ]
    },
    {
        "id": "f72439b20ba0c0ca",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "one",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3090,
        "y": 740,
        "wires": [
            [
                "0e254925aeb067fc"
            ]
        ]
    },
    {
        "id": "0e254925aeb067fc",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "50ms",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3270,
        "y": 740,
        "wires": [
            [
                "d5d34362ce4cfc2f"
            ]
        ]
    },
    {
        "id": "f50f50adc72a4e8b",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 2480,
        "y": 740,
        "wires": [
            [
                "55347067f952352c"
            ]
        ]
    },
    {
        "id": "801b2d2eb17589cc",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "yes/no?",
        "func": "msg.payload = \"Are you sure you want to unset all automatic turn offs?\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 740,
        "wires": [
            [
                "f50f50adc72a4e8b"
            ]
        ]
    },
    {
        "id": "bb5301d9ebf73a46",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "auto turn off - turn off respective switch after x minutes",
        "info": "",
        "x": 2480,
        "y": 700,
        "wires": []
    },
    {
        "id": "34989457b37ba41c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 1\"\n}\nglobal.set(\"None\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 820,
        "wires": [
            [
                "e58353f0.77e45"
            ]
        ]
    },
    {
        "id": "7e5dd808caf3ab80",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 2\"\n}\nglobal.set(\"Ntwo\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 860,
        "wires": [
            [
                "650ba9b9.bcbab8"
            ]
        ]
    },
    {
        "id": "3bf82db623790dae",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 3\"\n}\nglobal.set(\"Nthree\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 900,
        "wires": [
            [
                "b01dea90.4b73d8"
            ]
        ]
    },
    {
        "id": "b35d7482a80d8a21",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 4\"\n}\nglobal.set(\"Nfour\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 940,
        "wires": [
            [
                "673f9b64.ec2644"
            ]
        ]
    },
    {
        "id": "85d8a510243ed37c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 4\"\n}\nglobal.set(\"Nfive\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 980,
        "wires": [
            [
                "36414bc3.9061f4"
            ]
        ]
    },
    {
        "id": "aefa1bb47c92cf22",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 6\"\n}\nglobal.set(\"Nsix\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1020,
        "wires": [
            [
                "c246b726.ae57a8"
            ]
        ]
    },
    {
        "id": "6c2c736dc2343a4e",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 7\"\n}\nglobal.set(\"Nseven\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "58df7b5a.591b94"
            ]
        ]
    },
    {
        "id": "24a53655b9ad63d3",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 8\"\n}\nglobal.set(\"Neight\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "457295c0.90b69c"
            ]
        ]
    },
    {
        "id": "0203e81fae960aca",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 9\"\n}\nglobal.set(\"Nnine\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1140,
        "wires": [
            [
                "61e384a6.28671c"
            ]
        ]
    },
    {
        "id": "99ad4eecf4c92220",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Relay 104\"\n}\nglobal.set(\"Nten\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1180,
        "wires": [
            [
                "509181b6.e2614"
            ]
        ]
    },
    {
        "id": "a1db71584261a3d9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 1\"\n}\nglobal.set(\"NWone\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 820,
        "wires": [
            [
                "34742d8f.d7f642"
            ]
        ]
    },
    {
        "id": "c9daedb8c69302ea",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 2\"\n}\nglobal.set(\"NWtwo\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 860,
        "wires": [
            [
                "309c5f90.5e4b1"
            ]
        ]
    },
    {
        "id": "472e024995eeab41",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 3\"\n}\nglobal.set(\"NWthree\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 900,
        "wires": [
            [
                "e5500cd0.0a33d"
            ]
        ]
    },
    {
        "id": "abbaac35377750a5",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 4\"\n}\nglobal.set(\"NWfour\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 940,
        "wires": [
            [
                "16a26d87.c605c2"
            ]
        ]
    },
    {
        "id": "0bc9ca67d5625ccb",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 5\"\n}\nglobal.set(\"NWfive\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 980,
        "wires": [
            [
                "79b2b5b702fa38cf"
            ]
        ]
    },
    {
        "id": "147ea82a0a7ce441",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 6\"\n}\nglobal.set(\"NWsix\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1020,
        "wires": [
            [
                "262ce9d6fe0c435a"
            ]
        ]
    },
    {
        "id": "397efcecaf802fa1",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 7\"\n}\nglobal.set(\"NWseven\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1060,
        "wires": [
            [
                "7250317779b3a060"
            ]
        ]
    },
    {
        "id": "3af6428de4e19057",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"WifiRelay 8\"\n}\nglobal.set(\"NWeight\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1100,
        "wires": [
            [
                "41c094a230c84a0b"
            ]
        ]
    },
    {
        "id": "b723678229b1fc69",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "c3c4f964.612a28",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set WRelay Firmware",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-cog",
        "payload": "Firmware WRelays",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 4540,
        "wires": [
            [
                "89b8c2ab1ee2b45b"
            ]
        ]
    },
    {
        "id": "89b8c2ab1ee2b45b",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab 6",
        "events": "change",
        "x": 340,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "156c414ad6fedfca",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "Wrelay Firmware Link",
        "info": "",
        "x": 140,
        "y": 4500,
        "wires": []
    },
    {
        "id": "290d635952a2f452",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2650,
        "y": 2020,
        "wires": [
            [
                "5ac2beae40f51dd1"
            ]
        ]
    },
    {
        "id": "5ac2beae40f51dd1",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "confirmed",
        "func": "if(msg.payload==\"OK\") {\n    msg.payload = 1\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 2020,
        "wires": [
            [
                "3258071d46580b74",
                "71b0a92ff2e2a50e",
                "5e9fae2535ccd4cf",
                "372f4093aa16e42d",
                "18d572285c0e2bdc",
                "5cc61ae3b957d569",
                "abf8e97320bf0ff9",
                "946777fa38eb065a",
                "6c129fd14ffff4be",
                "5ffebe7e59f87f77",
                "bb8e4f60cbe8f685"
            ]
        ]
    },
    {
        "id": "249277c3d6160244",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "show warning",
        "func": "msg.payload = \"Are you sure you want to reset water level calibrations?\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 2020,
        "wires": [
            [
                "290d635952a2f452"
            ]
        ]
    },
    {
        "id": "4ed91a146b596939",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "format array",
        "func": "msg.payload = msg.payload.split(\",\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 900,
        "wires": [
            [
                "89b30b17a179242c"
            ]
        ]
    },
    {
        "id": "8bd231f421e77cb7",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "{",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "}",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2590,
        "y": 900,
        "wires": [
            [
                "4ed91a146b596939"
            ]
        ]
    },
    {
        "id": "89b30b17a179242c",
        "type": "split",
        "z": "67973ee8.553c3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2930,
        "y": 900,
        "wires": [
            [
                "723d0f6278ed7890"
            ]
        ]
    },
    {
        "id": "723d0f6278ed7890",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "init offauto variables",
        "func": "msg.payload = msg.payload.trim()\nmsg.payload = msg.payload.split(\":\")\n\n// Relays\nif (msg.payload[0] == \"Relay 1\") { global.set(\"oneoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 2\") { global.set(\"twooffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 3\") { global.set(\"threeoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 4\") { global.set(\"fouroffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 5\") { global.set(\"fiveoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 6\") { global.set(\"sixoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 7\") { global.set(\"sevenoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Relay 8\") { global.set(\"eightoffauto\", parseInt(msg.payload[1])) }\n\n// Wifi-Relays\nif (msg.payload[0] == \"W-Relay 1\") { global.set(\"woneoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 2\") { global.set(\"wtwooffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 3\") { global.set(\"wthreeoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 4\") { global.set(\"wfouroffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 5\") { global.set(\"wfiveoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 6\") { global.set(\"wsixoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 7\") { global.set(\"wsevenoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"W-Relay 8\") { global.set(\"weightoffauto\", parseInt(msg.payload[1])) }\n\n// Dimmer\nif (msg.payload[0] == \"Dimmer 1\") { global.set(\"doneoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 2\") { global.set(\"dtwooffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 3\") { global.set(\"dthreeoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 4\") { global.set(\"dfouroffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 5\") { global.set(\"dfiveoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 6\") { global.set(\"dsixoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 7\") { global.set(\"dsevenoffauto\", parseInt(msg.payload[1])) }\nif (msg.payload[0] == \"Dimmer 8\") { global.set(\"deightoffauto\", parseInt(msg.payload[1])) }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3120,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "78f68e6f8e856e41",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "init autooff switches vars",
        "links": [
            "e88d437867a17dad"
        ],
        "x": 2175,
        "y": 860,
        "wires": [
            [
                "43eec4dac9717446"
            ]
        ]
    },
    {
        "id": "dbbd411de3d1896f",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "22cf294bc3fa89ec",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "MCP Input",
        "tooltip": "schedule switches to turn on/off automatically",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "mcpinput",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 4860,
        "wires": [
            [
                "5d7ea6eda82e83aa"
            ]
        ]
    },
    {
        "id": "5d7ea6eda82e83aa",
        "type": "ui_ui_control",
        "z": "67973ee8.553c3",
        "name": "change to tab mcpinput",
        "events": "change",
        "x": 330,
        "y": 4860,
        "wires": [
            [
                "d46af09590d2a18b"
            ]
        ]
    },
    {
        "id": "7c7581d444da8a06",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 4860,
        "wires": [
            [
                "d176adde94af4ece"
            ]
        ]
    },
    {
        "id": "d46af09590d2a18b",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "if (msg.name == \"mcpinput\") {\n    var i = 1\n    \n    while (i <= 6) {\n        msg.filename = \"pekaway/mcpinput\"+i\n        node.send(msg)\n        i++\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 4860,
        "wires": [
            [
                "7c7581d444da8a06"
            ]
        ]
    },
    {
        "id": "d176adde94af4ece",
        "type": "json",
        "z": "67973ee8.553c3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 4860,
        "wires": [
            [
                "4478801360cdf4a0"
            ]
        ]
    },
    {
        "id": "ce7b4ae8d9fb25c7",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "aee3a58db487da01",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4740,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "6a4e019c366d953e",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "060a080471bf7629",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4780,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "87c80bff8d37d2ce",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "0173d9219f0fd2eb",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4820,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "5884c845581287da",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "5271d0baafdcf2a4",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4860,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "d9af80d1dc3716e1",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "a71e0b8c35f55c99",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4900,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "81d28814093cc93f",
        "type": "ui_list",
        "z": "67973ee8.553c3",
        "group": "8096636914635a24",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1230,
        "y": 4940,
        "wires": [
            [
                "a8f675ceea32b5b2"
            ]
        ]
    },
    {
        "id": "4478801360cdf4a0",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.mcpno = msg.filename.substring(msg.filename.length-1)\n\nvar output1 = null\nvar output2 = null\nvar output3 = null\nvar output4 = null\nvar output5 = null\nvar output6 = null\n\nmsg1 = {}\nmsg1.payload = {}\n\noutput1 = (msg.mcpno == \"1\" ? msg1 : null)\noutput2 = (msg.mcpno == \"2\" ? msg1 : null)\noutput3 = (msg.mcpno == \"3\" ? msg1 : null)\noutput4 = (msg.mcpno == \"4\" ? msg1 : null)\noutput5 = (msg.mcpno == \"5\" ? msg1 : null)\noutput6 = (msg.mcpno == \"6\" ? msg1 : null)\n\nmsg1.payload.one = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"one\",\n    \"title\":global.get(\"None\"),\n    \"isChecked\":msg.payload.relays.one\n}\nmsg1.payload.two = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"two\",\n    \"title\":global.get(\"Ntwo\"),\n    \"isChecked\":msg.payload.relays.two\n}\nmsg1.payload.three = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"three\",\n    \"title\":global.get(\"Nthree\"),\n    \"isChecked\":msg.payload.relays.three\n}\nmsg1.payload.four = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"four\",\n    \"title\":global.get(\"Nfour\"),\n    \"isChecked\":msg.payload.relays.four\n}\nmsg1.payload.five = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"five\",\n    \"title\":global.get(\"Nfive\"),\n    \"isChecked\":msg.payload.relays.five\n}\nmsg1.payload.six = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"six\",\n    \"title\":global.get(\"Nsix\"),\n    \"isChecked\":msg.payload.relays.six\n}\nmsg1.payload.seven = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"seven\",\n    \"title\":global.get(\"Nseven\"),\n    \"isChecked\":msg.payload.relays.seven\n}\nmsg1.payload.eight = {\n    \"mcp\": parseInt(msg.mcpno),\n    \"id\": \"eight\",\n    \"title\":global.get(\"Neight\"),\n    \"isChecked\":msg.payload.relays.eight\n}\nmsg = {}\nmsg = msg1\n\nreturn [output1, output2, output3, output4, output5, output6]",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4860,
        "wires": [
            [
                "ce7b4ae8d9fb25c7"
            ],
            [
                "6a4e019c366d953e"
            ],
            [
                "87c80bff8d37d2ce"
            ],
            [
                "5884c845581287da"
            ],
            [
                "d9af80d1dc3716e1"
            ],
            [
                "81d28814093cc93f"
            ]
        ]
    },
    {
        "id": "a8f675ceea32b5b2",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "msg.payload = \"cat <<< $(jq '.relays.\"+msg.payload.id+\"=\"+msg.payload.isChecked+\"' ~/pekaway/mcpinput\"+ msg.payload.mcp +\") > ~/pekaway/mcpinput\" + msg.payload.mcp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 4840,
        "wires": [
            [
                "9b2de46df99175fb"
            ]
        ]
    },
    {
        "id": "9b2de46df99175fb",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1570,
        "y": 4840,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cdaae9a68886752d",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select Option",
        "group": "aee3a58db487da01",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch1",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4560,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "7c43664a6ebbbd58",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "var input = msg.payload.substring(msg.payload.length-1)\nmsg.payload = msg.payload.substring(msg.payload, msg.payload.length-1)\nvar switchbutton = (msg.payload == \"switch\" ? \"switch\" : \"button\")\nglobal.set(\"mcpinput\"+input+\"_type\", switchbutton)\nmsg.payload = switchbutton\nmsg.filename = \"pekaway/mcpinput\"+input+\"_type\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 4560,
        "wires": [
            [
                "dea0c9d87a2f627e"
            ]
        ]
    },
    {
        "id": "dea0c9d87a2f627e",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "filename",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1820,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "29f60f79a3910c50",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select option",
        "group": "060a080471bf7629",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch2",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4600,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "649465a69eefe51d",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select option",
        "group": "0173d9219f0fd2eb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch3",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4640,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "470bb7874ca513e7",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select option",
        "group": "5271d0baafdcf2a4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch4",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4680,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "69b9e8ed69579e80",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select option",
        "group": "a71e0b8c35f55c99",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch5",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4720,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "22fecd08548c5741",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Set switch/button",
        "tooltip": "",
        "place": "Select option",
        "group": "8096636914635a24",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Switch",
                "value": "switch6",
                "type": "str"
            },
            {
                "label": "Button",
                "value": "button6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1450,
        "y": 4760,
        "wires": [
            [
                "7c43664a6ebbbd58"
            ]
        ]
    },
    {
        "id": "88627c67148a916a",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "mcpinput type",
        "links": [
            "d369278b4d05c2b5"
        ],
        "x": 1015,
        "y": 4660,
        "wires": [
            [
                "12350ec760b06a8a"
            ]
        ]
    },
    {
        "id": "12350ec760b06a8a",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "",
        "func": "var output1 = null\nvar output2 = null\nvar output3 = null\nvar output4 = null\nvar output5 = null\nvar output6 = null\n\noutput1 = (msg.mcpno == 1 ? msg : null)\noutput2 = (msg.mcpno == 2 ? msg : null)\noutput3 = (msg.mcpno == 3 ? msg : null)\noutput4 = (msg.mcpno == 4 ? msg : null)\noutput5 = (msg.mcpno == 5 ? msg : null)\noutput6 = (msg.mcpno == 6 ? msg : null)\n\nvar publication = msg.payload\npublication = publication[0].toUpperCase()\nmsg.payload = publication + msg.payload.substring(1)\nmsg.ui_control = {\"place\":msg.payload}\n\nreturn [output1, output2, output3, output4, output5, output6]  ",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 4660,
        "wires": [
            [
                "cdaae9a68886752d"
            ],
            [
                "29f60f79a3910c50"
            ],
            [
                "649465a69eefe51d"
            ],
            [
                "470bb7874ca513e7"
            ],
            [
                "69b9e8ed69579e80"
            ],
            [
                "22fecd08548c5741"
            ]
        ]
    },
    {
        "id": "da3fc51325702011",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "MCP input table",
        "info": "",
        "x": 120,
        "y": 4820,
        "wires": []
    },
    {
        "id": "fbde6bf3f8d339de",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "set MCP inputs to switch/button",
        "info": "",
        "x": 1170,
        "y": 4580,
        "wires": []
    },
    {
        "id": "aff4dcc810670f3c",
        "type": "delay",
        "z": "67973ee8.553c3",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1260,
        "y": 1660,
        "wires": [
            [
                "d36d3f1f.0f445"
            ]
        ]
    },
    {
        "id": "52d6052339e47c0f",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "22cf294bc3fa89ec",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Turn everything off",
        "tooltip": "Turns off all Relays, W-Relays and Dimmers",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "clicked",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 4060,
        "wires": [
            [
                "fcbece4c1acc03cd"
            ]
        ]
    },
    {
        "id": "e4f3f8922b6440b0",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set request for http API",
        "func": "if (msg.payload == \"Yes\") {\n    msg.url = \"http://127.0.0.1:1880/switchall/false\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 4060,
        "wires": [
            [
                "eebba8ac8593cbf8"
            ]
        ]
    },
    {
        "id": "eebba8ac8593cbf8",
        "type": "http request",
        "z": "67973ee8.553c3",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 910,
        "y": 4060,
        "wires": [
            []
        ]
    },
    {
        "id": "8645a0671ca1d290",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 490,
        "y": 4060,
        "wires": [
            [
                "e4f3f8922b6440b0"
            ]
        ]
    },
    {
        "id": "fcbece4c1acc03cd",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "show warning",
        "func": "\nmsg.payload = \"This will turn off all relays, wifi-relays and dimmers. Do you want to continue?\";\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 4060,
        "wires": [
            [
                "8645a0671ca1d290"
            ]
        ]
    },
    {
        "id": "ba81423869810fba",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "button to turn everything off via http API",
        "info": "",
        "x": 190,
        "y": 4020,
        "wires": []
    },
    {
        "id": "ce32900a34c5063d",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Enable/Disable Zigbee2MQTT",
        "tooltip": "Turn Zigbee2MQTT on or off (to save cpu power). Please wait a few seconds for the command to be executed correctly!",
        "group": "b6314699.049798",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2230,
        "y": 140,
        "wires": [
            [
                "c17b8e4f1d5172e9"
            ]
        ]
    },
    {
        "id": "c17b8e4f1d5172e9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set zigbee2mqtt cmd",
        "func": "if(msg.payload == true){\n    msg.payload = \"sudo systemctl start zigbee2mqtt.service && sudo systemctl enable zigbee2mqtt.service\"\n    msg.zigbee2mqtt = \"active\"\n    global.set(\"zigbee2mqtt\", \"active\")\n}\nelse if (msg.payload == false){\n    msg.payload = \"sudo systemctl stop zigbee2mqtt.service && sudo systemctl disable zigbee2mqtt.service\"\n    msg.zigbee2mqtt = \"inactive\"\n    global.set(\"zigbee2mqtt\", \"inactive\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 140,
        "wires": [
            [
                "dbd3d676bd54cbc9",
                "cb2eacc487cb8a83"
            ]
        ]
    },
    {
        "id": "dbd3d676bd54cbc9",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2670,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bd89f1b158dac8aa",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "b6314699.049798",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status Zigbee2MQTT: ",
        "format": "{{msg.zigbee2mqtt}}",
        "layout": "row-spread",
        "className": "",
        "x": 2480,
        "y": 180,
        "wires": []
    },
    {
        "id": "759fe2afa03147d2",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "enable/disable zigbee2mqtt.service",
        "info": "",
        "x": 2260,
        "y": 100,
        "wires": []
    },
    {
        "id": "cb2eacc487cb8a83",
        "type": "delay",
        "z": "67973ee8.553c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2260,
        "y": 180,
        "wires": [
            [
                "bd89f1b158dac8aa"
            ]
        ]
    },
    {
        "id": "33712c1b23423e76",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2230,
        "y": 240,
        "wires": [
            [
                "eeb6d6c21fd8acf7"
            ]
        ]
    },
    {
        "id": "eeb6d6c21fd8acf7",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo systemctl status zigbee2mqtt.service | grep 'Active: ' | cut -d: -f2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2590,
        "y": 240,
        "wires": [
            [
                "6bf76d8b1a997cbe"
            ],
            [],
            []
        ]
    },
    {
        "id": "6bf76d8b1a997cbe",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "check zigbee2mqtt",
        "func": "if(msg.payload.includes(\"running\")){\n    msg.zigbee2mqtt = \"active\"\n    global.set(\"zigbee2mqtt\", \"active\")\n    msg.payload = true\n}\nelse if (msg.payload.includes(\"failed\") || msg.payload.includes(\"dead\")){\n    msg.zigbee2mqtt = \"inactive\"\n    global.set(\"zigbee2mqtt\", \"inactive\")\n    msg.payload = false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 240,
        "wires": [
            [
                "bd89f1b158dac8aa",
                "ce32900a34c5063d"
            ]
        ]
    },
    {
        "id": "083c62ca921987ca",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "Zigbee2mqtt Admin Panel external Link",
        "group": "b6314699.049798",
        "order": 24,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "<a target=\"_blank\"  href=\"http://pekaway.local:8099\">Zigbee2MQTT Admin Panel</a>",
        "tooltip": "opens in new tab",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 520,
        "y": 4700,
        "wires": [
            []
        ]
    },
    {
        "id": "d5d34362ce4cfc2f",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "get global names",
        "func": "msg.options = [\n        {\n            [global.get('None')]:\"one\",\n            [global.get('Ntwo')]:\"two\",\n            [global.get('Nthree')]:\"three\",\n            [global.get('Nfour')]:\"four\",\n            [global.get('Nfive')]:\"five\",\n            [global.get('Nsix')]:\"six\",\n            [global.get('Nseven')]:\"seven\",\n            [global.get('Neight')]:\"eight\",\n            [global.get('NWone')]:\"wone\",\n            [global.get('NWtwo')]:\"wtwo\",\n            [global.get('NWthree')]:\"wthree\",\n            [global.get('NWfour')]:\"wfour\",\n            [global.get('NWfive')]:\"wfive\",\n            [global.get('NWsix')]:\"wsix\",\n            [global.get('NWseven')]:\"wseven\",\n            [global.get('NWeight')]:\"weight\",\n            [global.get('Ndimmer0')]:\"done\",\n            [global.get('Ndimmer1')]:\"dtwo\",\n            [global.get('Ndimmer2')]:\"dthree\",\n            [global.get('Ndimmer3')]:\"dfour\",\n            [global.get('Ndimmer4')]:\"dfive\",\n            [global.get('Ndimmer5')]:\"dsix\",\n            [global.get('Ndimmer6')]:\"dseven\",\n            [global.get('Ndimmer7')]:\"deight\",\n            \n        }\n    ]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 800,
        "wires": [
            [
                "1f0adf8924f587be"
            ]
        ]
    },
    {
        "id": "b418b068c8b1107a",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "d93ee74d4f9e99b5",
        "name": "device info (switch timer tab)",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1900,
        "y": 800,
        "wires": [
            [
                "d5d34362ce4cfc2f"
            ]
        ]
    },
    {
        "id": "1d0f30c73b193e0a",
        "type": "ui_switch",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Use Dimmy temp sensors",
        "tooltip": "Use temperature sensors connected to Dimmy board",
        "group": "3c103828.22b0b8",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 3420,
        "wires": [
            [
                "a0d750f227271c2c"
            ]
        ]
    },
    {
        "id": "a0d750f227271c2c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global dimmytemp",
        "func": "if (msg.payload == true) {\n    global.set(\"dimmytemp\", true)\n}\nelse if (msg.payload == false) {\n    global.set(\"dimmytemp\", false)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3420,
        "wires": [
            [
                "c4128529b8d0b3fe",
                "ad41b6bbb9a8c4a8"
            ]
        ]
    },
    {
        "id": "c4128529b8d0b3fe",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmytemp",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1060,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "eb320ce1d1b18440",
        "type": "file in",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmytemp",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 3420,
        "wires": [
            [
                "1d0f30c73b193e0a"
            ]
        ]
    },
    {
        "id": "3cdf1c4288542caa",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Dimmy Temp 1 Name",
        "tooltip": "",
        "group": "6be979199ffe0de1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1020,
        "y": 1440,
        "wires": [
            [
                "975433f7d68fb7e9"
            ]
        ]
    },
    {
        "id": "e53f65affb0a9cdc",
        "type": "ui_text_input",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Dimmy Temp 2 Name",
        "tooltip": "",
        "group": "6be979199ffe0de1",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "topicType": "str",
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "2985ccc2efb988ca"
            ]
        ]
    },
    {
        "id": "3d34cd9892c37e68",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmytemp1name",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1400,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "8a1f4537f7c579a8",
        "type": "file",
        "z": "67973ee8.553c3",
        "name": "",
        "filename": "pekaway/dimmytemp2name",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1400,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "975433f7d68fb7e9",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmytemp1\"\n}\nglobal.set(\"Ndimmytemp1\", msg.payload);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1440,
        "wires": [
            [
                "3d34cd9892c37e68"
            ]
        ]
    },
    {
        "id": "2985ccc2efb988ca",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set global",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"Dimmytemp2\"\n}\nglobal.set(\"Ndimmytemp2\", msg.payload);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1480,
        "wires": [
            [
                "8a1f4537f7c579a8"
            ]
        ]
    },
    {
        "id": "ad41b6bbb9a8c4a8",
        "type": "link out",
        "z": "67973ee8.553c3",
        "name": "dimmytemp",
        "mode": "link",
        "links": [
            "9c3fb485dd0c5376"
        ],
        "x": 1005,
        "y": 3380,
        "wires": []
    },
    {
        "id": "e5ec8a87df41929d",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ndimmytemp1",
        "links": [
            "6f7685fb79ce0438"
        ],
        "x": 875,
        "y": 1440,
        "wires": [
            [
                "3cdf1c4288542caa"
            ]
        ]
    },
    {
        "id": "e834be69d9ff260b",
        "type": "link in",
        "z": "67973ee8.553c3",
        "name": "Ndimmytemp2",
        "links": [
            "761da5923e187298"
        ],
        "x": 875,
        "y": 1480,
        "wires": [
            [
                "e53f65affb0a9cdc"
            ]
        ]
    },
    {
        "id": "0a4f0cf4828d4f9b",
        "type": "ui_template",
        "z": "67973ee8.553c3",
        "group": "b6314699.049798",
        "name": "device info (debug tab)",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.send({platform: navigator.platform,\n                    hardwareConcurrency: navigator.hardwareConcurrency,\n                    language: navigator.language,\n                    maxTouchPoints: navigator.maxTouchPoints,\n                    userAgent: navigator.userAgent,\n        });\n    }(scope));\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2080,
        "y": 300,
        "wires": [
            [
                "41f7b355ba96c4ec",
                "eeb6d6c21fd8acf7"
            ]
        ]
    },
    {
        "id": "12e0203f.d58be",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2030,
        "y": 1660,
        "wires": [
            [
                "4ad793f9.1fbdbc"
            ]
        ]
    },
    {
        "id": "4ad793f9.1fbdbc",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "Read locales",
        "func": "var TZ = [\"Africa\",\"Asia\",\"Canada\",\"Indian\",\"US\",\"America\",\"Atlantic\",\"Chile\",\"Mexico\",\"Antarctica\",\"Australia\",\"Pacific\",\"Arctic\",\"Brazil\",\"Europe\"]\n\nfor(let i=0;i<TZ.length;i++) {\n    node.send({topic: TZ[i], payload: '/usr/share/zoneinfo/' + TZ[i] + '/', init: i === TZ.length-1})\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 1660,
        "wires": [
            [
                "c6fd0daf.8c482"
            ]
        ]
    },
    {
        "id": "c6fd0daf.8c482",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "ls ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 2430,
        "y": 1660,
        "wires": [
            [
                "ebd4dca4.ab828",
                "3e2e7b0e.683ce4"
            ],
            [],
            []
        ]
    },
    {
        "id": "ebd4dca4.ab828",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "set flow vars",
        "func": "var areas = msg.payload.split('\\n').filter(a => !!a)\n\nflow.set(msg.topic, areas)",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3e2e7b0e.683ce4",
        "type": "switch",
        "z": "67973ee8.553c3",
        "name": "if init",
        "property": "init",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2589,
        "y": 1685,
        "wires": [
            [
                "467bb794.f76f88"
            ]
        ]
    },
    {
        "id": "375407c3.992bd8",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "Area",
        "tooltip": "",
        "place": "Select area",
        "group": "f06428cbbee24a1a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 2916,
        "y": 1684,
        "wires": [
            [
                "f1ff3b98.994be8"
            ]
        ]
    },
    {
        "id": "467bb794.f76f88",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "Set options",
        "func": "var msg = {\n    options: flow.keys()\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 1684,
        "wires": [
            [
                "375407c3.992bd8"
            ]
        ]
    },
    {
        "id": "f4e22fd6.746d3",
        "type": "ui_dropdown",
        "z": "67973ee8.553c3",
        "name": "",
        "label": "City",
        "tooltip": "",
        "place": "Select city",
        "group": "f06428cbbee24a1a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 3070,
        "y": 1720,
        "wires": [
            [
                "7866d4d5.6cf34c"
            ]
        ]
    },
    {
        "id": "f1ff3b98.994be8",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "Set cities",
        "func": "global.set(\"timezone_area\", msg.payload)\nglobal.set(\"timezone_city\", \"\")\n\nmsg = {options: flow.get(msg.payload)}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3069,
        "y": 1684,
        "wires": [
            [
                "f4e22fd6.746d3"
            ]
        ]
    },
    {
        "id": "7866d4d5.6cf34c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "Set cities",
        "func": "global.set(\"timezone_city\", msg.payload)",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 1720,
        "wires": []
    },
    {
        "id": "65e64af0.16f134",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "area",
        "payloadType": "global",
        "x": 2765,
        "y": 1721,
        "wires": [
            [
                "375407c3.992bd8"
            ]
        ]
    },
    {
        "id": "8c4767e4.d55908",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "city",
        "payloadType": "global",
        "x": 2930,
        "y": 1760,
        "wires": [
            [
                "f4e22fd6.746d3"
            ]
        ]
    },
    {
        "id": "66cfa78b.b5b6d8",
        "type": "inject",
        "z": "67973ee8.553c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2051,
        "y": 1725,
        "wires": [
            [
                "5ad77235.78a39c"
            ]
        ]
    },
    {
        "id": "5ad77235.78a39c",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "date",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2205,
        "y": 1725,
        "wires": [
            [
                "98d0bf7f.5371d",
                "67f0b9ef3a78eb94"
            ],
            [],
            []
        ]
    },
    {
        "id": "98d0bf7f.5371d",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "f06428cbbee24a1a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "System time (Config)",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2442,
        "y": 1712,
        "wires": []
    },
    {
        "id": "4fbda27f.7d015c",
        "type": "ui_button",
        "z": "67973ee8.553c3",
        "name": "",
        "group": "f06428cbbee24a1a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UPDATE timezone",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 2010,
        "y": 1780,
        "wires": [
            [
                "27059364.3b4a8c"
            ]
        ]
    },
    {
        "id": "27059364.3b4a8c",
        "type": "function",
        "z": "67973ee8.553c3",
        "name": "update timezone",
        "func": "var command = '/usr/share/zoneinfo/' + global.get(\"timezone_area\") + '/' + global.get(\"timezone_city\")+' /etc/localtime'\nnode.send({payload: command})\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2222,
        "y": 1780,
        "wires": [
            [
                "d759e33f.cecaa"
            ]
        ]
    },
    {
        "id": "d759e33f.cecaa",
        "type": "exec",
        "z": "67973ee8.553c3",
        "command": "sudo ln -sf",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 2417,
        "y": 1780,
        "wires": [
            [
                "5aea3ae6.980494"
            ],
            [
                "cd3f0ef2.cf60c"
            ],
            []
        ]
    },
    {
        "id": "a0414d37.8132c",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "success",
        "x": 2725,
        "y": 1766,
        "wires": []
    },
    {
        "id": "ff28f510.a53508",
        "type": "ui_toast",
        "z": "67973ee8.553c3",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "error",
        "x": 2716,
        "y": 1807,
        "wires": []
    },
    {
        "id": "5aea3ae6.980494",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "success",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Timezone updated successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2576,
        "y": 1766,
        "wires": [
            [
                "a0414d37.8132c"
            ]
        ]
    },
    {
        "id": "cd3f0ef2.cf60c",
        "type": "change",
        "z": "67973ee8.553c3",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Error while updating timezone",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2584,
        "y": 1807,
        "wires": [
            [
                "ff28f510.a53508"
            ]
        ]
    },
    {
        "id": "67f0b9ef3a78eb94",
        "type": "ui_text",
        "z": "67973ee8.553c3",
        "group": "d67e5a303452213e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "System time (Info)",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2430,
        "y": 1740,
        "wires": []
    },
    {
        "id": "6806c5019b21a2ac",
        "type": "comment",
        "z": "67973ee8.553c3",
        "name": "TIME & TIMEZONE",
        "info": "",
        "x": 2110,
        "y": 1620,
        "wires": []
    },
    {
        "id": "957e33f5c70114cb",
        "type": "comment",
        "z": "9c6146f7c61b2f3c",
        "name": "debug",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "9fafa3f0de0ed595",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "i2cdetect -y 1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Scan I2C",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "a2d74b743867f188",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Scan I2C",
        "tooltip": "i2cdetect -y 1",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "9fafa3f0de0ed595"
            ]
        ]
    },
    {
        "id": "64a91addb4422119",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "format html",
        "func": "msg.payload = \"<pre>\"+msg.payload+\"</pre>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 360,
        "wires": [
            [
                "308065c1f7987d34"
            ]
        ]
    },
    {
        "id": "308065c1f7987d34",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "show result",
        "x": 1570,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "c9af05e921a2eef8",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "dmesg | grep tty",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Serial Interface",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "1ea006762656376f",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "list serial interfaces",
        "tooltip": "dmesg | grep tty",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "c9af05e921a2eef8"
            ]
        ]
    },
    {
        "id": "564ddd1aeaccc2d1",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "cat /var/lib/misc/dnsmasq.leases",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "DHCP leases",
        "x": 410,
        "y": 940,
        "wires": [
            [
                "84df6b8a0c8a432e"
            ],
            [],
            [
                "b04bf294ecf31947"
            ]
        ]
    },
    {
        "id": "a6dcf2990db40c1c",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "ps -ef | grep web1.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "sensorvalues python",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "a189e9fbe6df47b6",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "check sensorvalues script",
        "tooltip": "ps -ef | grep web1.py",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "a6dcf2990db40c1c"
            ]
        ]
    },
    {
        "id": "0c468e86737dedc9",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "sudo systemctl status nginx.service",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "nginx",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "f7c091bff23ddd08",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "check nginx",
        "tooltip": "sudo systemctl status nginx.service",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "0c468e86737dedc9"
            ]
        ]
    },
    {
        "id": "d1c32eaac7fbc02d",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "netstat -tulpn",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ports",
        "x": 470,
        "y": 720,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "de98f8a1e85560c5",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "check ports",
        "tooltip": "netstat -tulpn",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "d1c32eaac7fbc02d"
            ]
        ]
    },
    {
        "id": "054f73178ff35827",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "cat /etc/nginx/sites-available/pekaway1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "nginx conf",
        "x": 450,
        "y": 660,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "dee1d5b4167e0604",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "show nginx config",
        "tooltip": "cat /etc/nginx/sites-available/pekaway1",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "054f73178ff35827"
            ]
        ]
    },
    {
        "id": "07354d02857f62c6",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "let list = {};\n\nglobal.keys().forEach( key => {\n    list[key] = global.get(key);\n})\n\nmsg.payload = JSON.stringify(list);\n\nvar rep = new RegExp(',\"', 'g');\nmsg.payload = msg.payload.replace(rep, \",\\n\\\"\");\nmsg.payload = msg.payload.replace(\"{\", \"\");\nmsg.payload = msg.payload.replace(\"}\", \"\");\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "64a91addb4422119"
            ]
        ]
    },
    {
        "id": "f6c41b702c31be4a",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "get global variables",
        "tooltip": "will return global variables and their current value",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "07354d02857f62c6"
            ]
        ]
    },
    {
        "id": "744d424cb17d4592",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "get current wap connections",
        "tooltip": "~/pekaway/dhcp-leases/condevices.sh",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 940,
        "wires": [
            [
                "564ddd1aeaccc2d1",
                "a3209125d0859dd6"
            ]
        ]
    },
    {
        "id": "6b58f93e19f6dcab",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "arp -a",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "arp -a",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "b000665ea903f1bf",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "get all network connections",
        "tooltip": "arp -a",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "6b58f93e19f6dcab"
            ]
        ]
    },
    {
        "id": "84df6b8a0c8a432e",
        "type": "split",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 580,
        "y": 920,
        "wires": [
            [
                "24bc0fb3ec14b3a5"
            ]
        ]
    },
    {
        "id": "2ad0729a06bf96b9",
        "type": "join",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 960,
        "y": 920,
        "wires": [
            [
                "06316adc882c08a7"
            ]
        ]
    },
    {
        "id": "b04bf294ecf31947",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.payload = null\nmsg.complete = \"true\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "bdb3aa39bcf74e02"
            ]
        ]
    },
    {
        "id": "24bc0fb3ec14b3a5",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "if (msg.payload != \"\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 920,
        "wires": [
            [
                "2ad0729a06bf96b9"
            ]
        ]
    },
    {
        "id": "bdb3aa39bcf74e02",
        "type": "delay",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.75",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 960,
        "wires": [
            [
                "2ad0729a06bf96b9"
            ]
        ]
    },
    {
        "id": "06316adc882c08a7",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "\nfor (var i = 0; i < msg.payload.length; i += 1) {\n  if (msg.payload[i] != null) {\n    msg.payload[i] = msg.payload[i].substring(11,msg.payload[i].length -20)\n\n  }\n}\nmsg.dhcpleases = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 920,
        "wires": [
            [
                "bb6bd40eb541a944"
            ]
        ]
    },
    {
        "id": "bb6bd40eb541a944",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "pekaway/dhcp-leases/condevices.sh wlan0",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "condevices.sh",
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "1220a451d84831d7"
            ],
            [],
            []
        ]
    },
    {
        "id": "3f0ace37dc3bad2d",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "\nfor (var i = 0; i < msg.dhcpleases.length; i += 1) {\n  if (msg.dhcpleases[i] != null && msg.payload.includes(msg.dhcpleases[i].substring(0,11))) {\n    msg.payload = msg.dhcpleases[i] + msg.payload\n    msg.payload = msg.payload.substring(18, msg.payload.length)\n\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 860,
        "wires": [
            [
                "108a3d7e1c253f98"
            ]
        ]
    },
    {
        "id": "1220a451d84831d7",
        "type": "split",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 870,
        "y": 860,
        "wires": [
            [
                "3f0ace37dc3bad2d"
            ]
        ]
    },
    {
        "id": "108a3d7e1c253f98",
        "type": "join",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "3",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 860,
        "wires": [
            [
                "1f89f8530964a285"
            ]
        ]
    },
    {
        "id": "1f89f8530964a285",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.newpayload = \"\"\n\nfor (var i = 0; i < msg.payload.length; i += 1) {\n  if (msg.payload[i] != null ) {\n     msg.newpayload = msg.newpayload + msg.payload[i] + \"\\n\"\n\n  }\n}\nif (msg.newpayload.includes(\"wlan0: 0\")) {\n    msg.payload = msg.newpayload + \"\\n(will always show 0 if AP is turned off)\"\n}\nelse {\n    msg.payload = msg.newpayload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 860,
        "wires": [
            [
                "64a91addb4422119"
            ]
        ]
    },
    {
        "id": "9ecdf99f975044c9",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "cat /var/lib/misc/dnsmasq.leases",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "DHCP Leases",
        "x": 440,
        "y": 340,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "f69418847a303317",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "get assigned dhcp leases",
        "tooltip": "cat /var/lib/misc/dnsmasq.leases",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "9ecdf99f975044c9"
            ]
        ]
    },
    {
        "id": "4d26ccf1ad84653c",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "scan bluetooth mac addresses",
        "tooltip": "sudo timeout -s SIGINT 5s hcitool -i hci0 lescan",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "3acae102549ebe8d",
                "ecbc7d955d15b8a4"
            ]
        ]
    },
    {
        "id": "3acae102549ebe8d",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "sudo timeout -s SIGINT 5s hcitool -i hci0 lescan",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "bluetooth mac scan",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "ecbc7d955d15b8a4",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.payload = \"scanning bluetooth...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "e3462dff3946238f"
            ]
        ]
    },
    {
        "id": "a3209125d0859dd6",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.payload = \"scanning wifi...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "2d5c33bb33cd2d50"
            ]
        ]
    },
    {
        "id": "2d5c33bb33cd2d50",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "scanning wifi",
        "x": 560,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e3462dff3946238f",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "scanning bluetooth",
        "x": 590,
        "y": 380,
        "wires": []
    },
    {
        "id": "bcc3f8e2997143f5",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "sudo systemctl restart nodered.service",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 1040,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f5671aa16e97ecc0",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 20,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reload node-red",
        "tooltip": "sudo systemctl restart nodered.service",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "726ec4019b992668"
            ]
        ]
    },
    {
        "id": "652446f3ccf6849d",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rebuild UI",
        "tooltip": "Rebuilds the User Interface in Frontend",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "e07ca4c4ccc47d5a",
                "ed6e5878d88a2364"
            ]
        ]
    },
    {
        "id": "e07ca4c4ccc47d5a",
        "type": "link out",
        "z": "9c6146f7c61b2f3c",
        "name": "hideUI",
        "links": [
            "995d2e11.8d4ab",
            "b233b06d6db88307",
            "9150624d67629149",
            "1d633ae87a49de41",
            "97658c26274f47a0",
            "48002a32a57d8195",
            "9c3fb485dd0c5376"
        ],
        "x": 345,
        "y": 1120,
        "wires": []
    },
    {
        "id": "0131bf73cf9136b4",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "space on disk",
        "tooltip": "df -T -h",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "2a2b634c48219942"
            ]
        ]
    },
    {
        "id": "2a2b634c48219942",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "df -T -h",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "df -T -h",
        "x": 360,
        "y": 1280,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "41caf9492d30f462",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "format html",
        "func": "msg.payload = \"<pre>\"+msg.payload+\"</pre>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "812aba8c9fa9f1a6"
            ]
        ]
    },
    {
        "id": "812aba8c9fa9f1a6",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "show result",
        "x": 1170,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "0907b77d9dfae2d4",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "network info",
        "tooltip": "ip -s addr show",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1340,
        "wires": [
            [
                "74584efa51e8a2b2"
            ]
        ]
    },
    {
        "id": "74584efa51e8a2b2",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "ip -s addr show",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ip -s addr show",
        "x": 380,
        "y": 1340,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "4cb72dcf2059a830",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CPU Model",
        "tooltip": "cat /proc/cpuinfo",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1460,
        "wires": [
            [
                "f9d78fbeb41aa1b7"
            ]
        ]
    },
    {
        "id": "f9d78fbeb41aa1b7",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "cat /proc/cpuinfo",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "cat /proc/cpuinfo",
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "4f154621cfe912ae",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "USB Bus",
        "tooltip": "lsusb -t",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1700,
        "wires": [
            [
                "c194a3872d4957ee"
            ]
        ]
    },
    {
        "id": "c194a3872d4957ee",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "lsusb -t",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "lsusb -t",
        "x": 360,
        "y": 1700,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "e37eeb6117aadbad",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "last logins",
        "tooltip": "last -30 -F",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1760,
        "wires": [
            [
                "135a7bdcf5eca1d2"
            ]
        ]
    },
    {
        "id": "135a7bdcf5eca1d2",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "last -30 -F",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "last -30 -F",
        "x": 360,
        "y": 1760,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "c2d3b11fbbaaa7df",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "current logins",
        "tooltip": "w",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1820,
        "wires": [
            [
                "f56e787b6199a894"
            ]
        ]
    },
    {
        "id": "f56e787b6199a894",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "w",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "w",
        "x": 350,
        "y": 1820,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "f3a2e1698a6a448b",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "uptime",
        "tooltip": "uptime -p",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1880,
        "wires": [
            [
                "b493f9353cf98529"
            ]
        ]
    },
    {
        "id": "b493f9353cf98529",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "uptime -p",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "uptime -p",
        "x": 360,
        "y": 1880,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "684484db09907efd",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ssh status",
        "tooltip": "systemctl status ssh",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1940,
        "wires": [
            [
                "14b09da3feee93c9"
            ]
        ]
    },
    {
        "id": "14b09da3feee93c9",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "systemctl status ssh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "systemctl status ssh",
        "x": 400,
        "y": 1940,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "0d366dd4141219f6",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Linux Kernel",
        "tooltip": "uname -a",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1580,
        "wires": [
            [
                "93cdcc9b721e9f8e"
            ]
        ]
    },
    {
        "id": "93cdcc9b721e9f8e",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "uname -a",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "uname -a",
        "x": 360,
        "y": 1580,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "611d5232385e6af0",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Operating System",
        "tooltip": "cat /etc/os-release",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1640,
        "wires": [
            [
                "eadf8514aac4d244"
            ]
        ]
    },
    {
        "id": "eadf8514aac4d244",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "cat /etc/os-release",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "cat /etc/os-release",
        "x": 390,
        "y": 1640,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "ca3f6e1330607785",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "SOC Temperature",
        "tooltip": "vcgencmd measure_temp",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "661228a9cfb7082d"
            ]
        ]
    },
    {
        "id": "661228a9cfb7082d",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "vcgencmd measure_temp",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "vcgencmd measure_temp",
        "x": 410,
        "y": 1520,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "469c46d22d8b853a",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CPU info",
        "tooltip": "lscpu",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1400,
        "wires": [
            [
                "a1cada7b47d166ca"
            ]
        ]
    },
    {
        "id": "a1cada7b47d166ca",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "lscpu",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "lscpu",
        "x": 350,
        "y": 1400,
        "wires": [
            [
                "41caf9492d30f462"
            ],
            [],
            []
        ]
    },
    {
        "id": "054a60e3a7e029ee",
        "type": "comment",
        "z": "9c6146f7c61b2f3c",
        "name": "RPI general information",
        "info": "",
        "x": 140,
        "y": 1220,
        "wires": []
    },
    {
        "id": "8a59a41538e2c149",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "update started",
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "c684483e23e1005e"
            ]
        ]
    },
    {
        "id": "726ec4019b992668",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "reload NR",
        "func": "msg.payload = \"<center>This will restart Node-Red, please allow up to 2min!<br><br>All relays will be turned off and back on again.<br>Do you want to continue?</center>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "8a59a41538e2c149"
            ]
        ]
    },
    {
        "id": "c684483e23e1005e",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "yes/no?",
        "func": "if (msg.payload == \"Ok\") {\n    return msg;\n}\nelse {\n    return null\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "bcc3f8e2997143f5"
            ]
        ]
    },
    {
        "id": "07264e64daf685e3",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "d": true,
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "gpio readall",
        "tooltip": "gpio readall",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "52ae2f377a20459f"
            ]
        ]
    },
    {
        "id": "52ae2f377a20459f",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "d": true,
        "command": "gpio readall",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "GPIOs",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "ed6e5878d88a2364",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.payload = \"UI rebuilt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 389,
        "y": 1081,
        "wires": [
            [
                "36130db154f95d13"
            ]
        ]
    },
    {
        "id": "36130db154f95d13",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "UI rebuilt",
        "x": 550,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c1784e3505e452ab",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "msg.devicePlatform = global.get(\"devicePlatform\")\nmsg.deviceLogicalProcessors = global.get(\"deviceLogicalProcessors\")\nmsg.devicelanguage = global.get(\"devicelanguage\")\nmsg.devicemaxTouchPoints = global.get(\"devicemaxTouchPoints\")\nmsg.deviceuserAgent = global.get(\"deviceuserAgent\")\n\n\nmsg.payload = \"platform: \" + msg.devicePlatform + \"<br>logicalProcessors: \" + msg.deviceLogicalProcessors + \"<br>language: \" + msg.devicelanguage + \"<br>maxTouchPoints: \" + msg.devicemaxTouchPoints + \"<br>userAgent: \" + msg.deviceuserAgent;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 880,
        "wires": [
            [
                "64a91addb4422119"
            ]
        ]
    },
    {
        "id": "9ac2aaa56f70ba49",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 18,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "used device information",
        "tooltip": "shows info about device that requests the dashboard",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "c1784e3505e452ab"
            ]
        ]
    },
    {
        "id": "bbe2650481754d77",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "func": "\nmsg.payload = \"ADC1: \" +  global.get(\"LEVEL-ADC1\") + \" <br /> \" + \"ADC2: \" +  global.get(\"LEVEL-ADC2\")+ \" <br /> \" + \"ADC3: \" +  global.get(\"LEVEL-ADC3\")+\" <br /> \" + \"ADC4: \" +  global.get(\"LEVEL-ADC4\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 820,
        "wires": [
            [
                "308065c1f7987d34"
            ]
        ]
    },
    {
        "id": "cf3bf6a9638a03e8",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "get Level ADC",
        "tooltip": "will return the ADC values from water levels",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 820,
        "wires": [
            [
                "bbe2650481754d77"
            ]
        ]
    },
    {
        "id": "14c3ae391a67cc02",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "927ebb87c84ca699",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Generate new SSH hostkey",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2020,
        "wires": [
            [
                "91e3d24e5c596952"
            ]
        ]
    },
    {
        "id": "b026bf69109349c9",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 2020,
        "wires": [
            [
                "0c98dee3229d9cef"
            ]
        ]
    },
    {
        "id": "91e3d24e5c596952",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "show warning",
        "func": "\nmsg.payload = \"Do you want to generate a new SSH hostkey?\";\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2020,
        "wires": [
            [
                "b026bf69109349c9"
            ]
        ]
    },
    {
        "id": "124ed4d1befb58e3",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 950,
        "y": 2020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0c98dee3229d9cef",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "generate new ssh host key",
        "func": "if (msg.payload == \"Yes\") {\n    msg.payload = \"sudo rm /etc/ssh/ssh_host* && sudo ssh-keygen -A && sudo systemctl restart sshd\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2020,
        "wires": [
            [
                "124ed4d1befb58e3",
                "9ea94f7be93715ec"
            ]
        ]
    },
    {
        "id": "aa5c87102e1fdfcd",
        "type": "ui_toast",
        "z": "9c6146f7c61b2f3c",
        "position": "top right",
        "displayTime": "4",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "Yes",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 1980,
        "wires": []
    },
    {
        "id": "9ea94f7be93715ec",
        "type": "function",
        "z": "9c6146f7c61b2f3c",
        "name": "set notification",
        "func": "msg.payload = \"generating new hostkey and restarting sshd.service...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1980,
        "wires": [
            [
                "aa5c87102e1fdfcd"
            ]
        ]
    },
    {
        "id": "6ffea1cd71259651",
        "type": "ui_button",
        "z": "9c6146f7c61b2f3c",
        "name": "",
        "group": "53df28c11a99d1b9",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "show wpa_supplicant.conf",
        "tooltip": "sudo cat /etc/wpa_supplicant/wpa_supplicant.conf",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 280,
        "wires": [
            [
                "d057e2417b193c37"
            ]
        ]
    },
    {
        "id": "d057e2417b193c37",
        "type": "exec",
        "z": "9c6146f7c61b2f3c",
        "command": "sudo cat /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "show wpa_supplicant.conf",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "64a91addb4422119"
            ],
            [],
            []
        ]
    },
    {
        "id": "f6f250aa7a88cebc",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "show usb devices and mount",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "90a9245153aad869",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo lsblk -o name,label",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "6e5d7f027d50040f",
                "a69d8c927d59b178"
            ],
            [],
            []
        ]
    },
    {
        "id": "01c70289c1c1ec3f",
        "type": "inject",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "90a9245153aad869"
            ]
        ]
    },
    {
        "id": "6e5d7f027d50040f",
        "type": "split",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "8024b11af024ebde"
            ]
        ]
    },
    {
        "id": "8024b11af024ebde",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "filter results",
        "func": "if (msg.payload.includes(\"sda1\") || msg.payload.includes(\"sdb1\") || msg.payload.includes(\"sdc1\") || msg.payload.includes(\"sdd1\")){\n    msg.payload = msg.payload.substring(2)\n    var mountpoint = \"/dev/\" + msg.payload.substring(0, 4)\n    msg.payload = mountpoint +\" \" + msg.payload.substring(10)\n    flow.set(\"nousb\", false)\n    return msg\n}\n\nelse {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 140,
        "wires": [
            [
                "c76a4cfb0f76acea"
            ]
        ]
    },
    {
        "id": "c76a4cfb0f76acea",
        "type": "join",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "mountpoint",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "6314f496a16b1346"
            ]
        ]
    },
    {
        "id": "6e0de8e76e002847",
        "type": "ui_dropdown",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Click \"update usb device list\" first!",
        "group": "08520917599edab9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1200,
        "y": 140,
        "wires": [
            [
                "7d4274535820bdec"
            ]
        ]
    },
    {
        "id": "7d4274535820bdec",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set mount command",
        "func": "flow.set(\"mountname\", msg.payload.substring(10))\nmsg.payload = \"sudo mount \" + msg.payload.substring(0, 9) +\" pkwUpdate -o umask=000\";\nreturn [msg, null]\nmsg.payload = msg.payload.substring(0, 9)\nnode.send([null,msg])\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 140,
        "wires": [
            [
                "09becb6ea5f55999"
            ],
            []
        ]
    },
    {
        "id": "09becb6ea5f55999",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1550,
        "y": 140,
        "wires": [
            [
                "5daa5b2199cb65db"
            ],
            [],
            [
                "5daa5b2199cb65db"
            ]
        ]
    },
    {
        "id": "3925be2cfe90bb18",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "08520917599edab9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "update USB device list",
        "tooltip": "click to show connected USB devices, then choose from dropdown to mount the device",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "90a9245153aad869",
                "3779b1011698eec3"
            ]
        ]
    },
    {
        "id": "7f6f495741ba6bce",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Shiba to the moon!",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1570,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5daa5b2199cb65db",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup payload",
        "func": "if (msg.payload.code === 0) {\n    msg.payload = \"Successfully mounted USB device '\" + flow.get(\"mountname\") + \"' to pkwUpdate\"\n}\nelse if (msg.payload.message.includes(\"Command failed\")) {\n    msg.payload = \"An error has occured. Please make sure your USB device is connected correctly.\"\n}\nelse {\n    msg.payload = \"Successfully mounted USB device '\" + flow.get(\"mountname\") + \"' to pkwUpdate\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 200,
        "wires": [
            [
                "7f6f495741ba6bce"
            ]
        ]
    },
    {
        "id": "94bab6781ab61914",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "08520917599edab9",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Search for update files",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "42c731ca0f51f6cd"
            ]
        ]
    },
    {
        "id": "42c731ca0f51f6cd",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "ls & grep update files",
        "func": "msg.payload = 'cd pekaway/pkwUpdate && ls | grep \".json\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "12078e2fe8850684"
            ]
        ]
    },
    {
        "id": "12078e2fe8850684",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 300,
        "wires": [
            [
                "383d887ce755d812"
            ],
            [
                "5769595a7d97f5a8"
            ],
            [
                "5769595a7d97f5a8"
            ]
        ]
    },
    {
        "id": "383d887ce755d812",
        "type": "split",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 280,
        "wires": [
            [
                "48f2dbccca9c1580"
            ]
        ]
    },
    {
        "id": "1b739624b5f7342d",
        "type": "join",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "mountpoint",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "61b12659c720e4b1"
            ]
        ]
    },
    {
        "id": "82ef17884125987f",
        "type": "ui_dropdown",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Click \"Search for update files\" first!",
        "group": "08520917599edab9",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "a7b201dbefd8eb39"
            ]
        ]
    },
    {
        "id": "50f5496e1be424d8",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "08520917599edab9",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update PeKaWayControl",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "073f863958a59703"
            ]
        ]
    },
    {
        "id": "a8f738f08b9e6816",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "08520917599edab9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Step 1",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 70,
        "y": 120,
        "wires": []
    },
    {
        "id": "abd305bdbf2c1e39",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "08520917599edab9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Step 2",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 70,
        "y": 260,
        "wires": []
    },
    {
        "id": "c62f68f56d8af1e0",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "08520917599edab9",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Step 3",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 70,
        "y": 380,
        "wires": []
    },
    {
        "id": "6314f496a16b1346",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set placeholder",
        "func": "var devices = msg.payload.length\nmsg.options = msg.payload\nmsg.payload = {}\nnode.send(msg)\nmsg.ui_control = {\"place\":\"found \"+devices+\" devices\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "6e0de8e76e002847"
            ]
        ]
    },
    {
        "id": "61b12659c720e4b1",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set placeholder",
        "func": "var failed\n\nif (msg.payload.message != null) {\n    failed = msg.payload.message.substring(0, 14)\n}\nelse {\n    failed = \"not failed\"\n}\n\nif (failed == \"Command failed\") {\n    msg.ui_control = {\"place\":\"found 0 update files\"}\n    return msg\n}\n\nelse {\n    var files = msg.payload.length\n    msg.options = msg.payload\n    msg.payload = {}\n    node.send(msg)\n    msg.ui_control = {\"place\":\"found \"+files+\" update files\"}\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 280,
        "wires": [
            [
                "82ef17884125987f"
            ]
        ]
    },
    {
        "id": "48f2dbccca9c1580",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "filter results",
        "func": "if (msg.payload != \"\"){\n    return msg \n}\nelse {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "1b739624b5f7342d"
            ]
        ]
    },
    {
        "id": "f97c594a3ca7996b",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    var updatefile = flow.get(\"updatefile\")\n    msg.payload = 'cp .node-red/flows_pekaway.json \"pekaway/nrbackups/flows_pekaway_`date +%d-%m-%Y_%I:%M:%S%p.`json\" && cp pekaway/pkwUpdate/' + updatefile + ' .node-red/flows_pekaway.json && sudo systemctl restart nodered.service'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "d8de57a3df10d313",
                "2df103e7ab0a9b4e"
            ]
        ]
    },
    {
        "id": "a7b201dbefd8eb39",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set file",
        "func": "flow.set(\"updatefile\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d8de57a3df10d313",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1010,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ff8f3851b3b54b9b",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 560,
        "y": 440,
        "wires": [
            [
                "f97c594a3ca7996b"
            ]
        ]
    },
    {
        "id": "073f863958a59703",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup payload",
        "func": "msg.updatefile = flow.get(\"updatefile\")\n\nif (flow.get(\"updatefile\") == null) {\n    msg.payload = \"No update file selected!\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"Are you sure you want to update with file '\" + flow.get(\"updatefile\") + \"'?\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 420,
        "wires": [
            [
                "cec0053163d2c6ac"
            ],
            [
                "ff8f3851b3b54b9b"
            ]
        ]
    },
    {
        "id": "cec0053163d2c6ac",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no file selected",
        "x": 560,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5769595a7d97f5a8",
        "type": "switch",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "61b12659c720e4b1"
            ]
        ]
    },
    {
        "id": "4666aac0.c016f4",
        "type": "ui_ui_control",
        "z": "c3e6360c8bbf5f2e",
        "name": "change group",
        "events": "change",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "1dbb5c1cdbe72873"
            ]
        ]
    },
    {
        "id": "1dbb5c1cdbe72873",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check tab",
        "func": "if (msg.name == \"Update\") {\n    return msg;   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 600,
        "wires": [
            [
                "897f54ebf414d41b"
            ]
        ]
    },
    {
        "id": "897f54ebf414d41b",
        "type": "ping",
        "z": "c3e6360c8bbf5f2e",
        "mode": "triggered",
        "name": "ping git.pekaway.de",
        "host": "git.pekaway.de",
        "timer": "20",
        "inputs": 1,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "99eb1e626bddf11a"
            ]
        ]
    },
    {
        "id": "99eb1e626bddf11a",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check pings",
        "func": "if (msg.payload != false) {\n    msg.payload = \"ping=\"+msg.payload+\"ms\"\n    flow.set(\"internetconnection\", true)\n    return msg\n}\nelse {\n    msg.payload = \"update server unreachable\"\n    flow.set(\"internetconnection\", false)\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 600,
        "wires": [
            [
                "72228bf0fcd3e0c8"
            ]
        ]
    },
    {
        "id": "c9577fc759a34f59",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Update via internet connection",
        "group": "dbb060739248855a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update via internet connection",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "8ff21682cbc5e9f4"
            ]
        ]
    },
    {
        "id": "72228bf0fcd3e0c8",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "dbb060739248855a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "answer ms",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "78560c83c696e75a",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "dbb060739248855a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Heading ping",
        "label": "",
        "format": "Answer from git.pekaway.de:",
        "layout": "row-center",
        "className": "",
        "x": 770,
        "y": 560,
        "wires": []
    },
    {
        "id": "587e26521842a46f",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "update with curl via internet connection",
        "info": "",
        "x": 170,
        "y": 560,
        "wires": []
    },
    {
        "id": "4b17a32afe3a5870",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 620,
        "y": 640,
        "wires": [
            [
                "98945d7a16d6e3da"
            ]
        ]
    },
    {
        "id": "8ff21682cbc5e9f4",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup payload",
        "func": "if (flow.get(\"internetconnection\") == true) {\n    msg.payload = \"<center>This will replace the local flows with the flows from the server and restart Node-Red! Proceed with caution! (A backup of the old flows will be generated at ~/pekaway/nrbackups) <br><br> If new packages and dependencies need to be installed, this process can take a while, please stand by.<br>Also keep in mind that this process may download up to several hundreds of Megabytes!<br><br> You can check needed packages at <a href='https://git.pekaway.de/Vincent/vanpi/-/tree/main/pi4' target='_blank'>git.pekaway.de</a></center>\"\n        return [msg, null];\n}\n\nelse if (flow.get(\"internetconnection\") == false) {\n       msg.payload = \"Can't connect to 'https://git.pekaway.de'. <br><br> Please check your connection!\"\n       return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 660,
        "wires": [
            [
                "4b17a32afe3a5870"
            ],
            [
                "7421382b2a3864cf"
            ]
        ]
    },
    {
        "id": "7421382b2a3864cf",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no connection",
        "x": 620,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "840b28a6dd0f556d",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "load backup file",
        "info": "",
        "x": 140,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1e9516bafb76fd27",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "0ae34e221b8d2997",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Search for backup files",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "16669008fb6ef33e"
            ]
        ]
    },
    {
        "id": "16669008fb6ef33e",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "ls pekaway/nrbackups/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "166dc86c317432e7",
                "f598edbd73e8fee6"
            ],
            [
                "9eb9d486f86c13a8"
            ],
            [
                "9eb9d486f86c13a8"
            ]
        ]
    },
    {
        "id": "166dc86c317432e7",
        "type": "split",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 1060,
        "wires": [
            [
                "45f130e8a4ea041a"
            ]
        ]
    },
    {
        "id": "45f130e8a4ea041a",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "filter results",
        "func": "if (msg.payload != \"\"){\n    return msg \n}\nelse {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1060,
        "wires": [
            [
                "48ed68204b61892b"
            ]
        ]
    },
    {
        "id": "48ed68204b61892b",
        "type": "join",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "mountpoint",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "f533ff0642756a74"
            ]
        ]
    },
    {
        "id": "cfc204fb2a3e79c5",
        "type": "ui_dropdown",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Click \"Search for backup files\" first!",
        "group": "0ae34e221b8d2997",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1240,
        "y": 1060,
        "wires": [
            [
                "1ada176cf7f7c420"
            ]
        ]
    },
    {
        "id": "f533ff0642756a74",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set placeholder",
        "func": "var failed\n\nif (msg.payload.message != null) {\n    failed = msg.payload.message.substring(0, 14)\n}\nelse {\n    failed = \"not failed\"\n}\n\nif (failed == \"Command failed\") {\n    msg.ui_control = {\"place\":\"found 0 backup files\"}\n    return msg\n}\n\nelse {\n    var files = msg.payload.length\n    msg.options = msg.payload\n    msg.payload = {}\n    node.send(msg)\n    msg.ui_control = {\"place\":\"found \"+files+\" backup files\"}\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1060,
        "wires": [
            [
                "cfc204fb2a3e79c5"
            ]
        ]
    },
    {
        "id": "9eb9d486f86c13a8",
        "type": "switch",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1100,
        "wires": [
            [
                "f533ff0642756a74"
            ]
        ]
    },
    {
        "id": "10942adae2d67693",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "0ae34e221b8d2997",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Step 1",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 110,
        "y": 1040,
        "wires": []
    },
    {
        "id": "56297b0ffd21bc87",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "0ae34e221b8d2997",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Step 2",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 110,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7b9d59071a9a2b7b",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "0ae34e221b8d2997",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "load backupfile",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "e24a641176af7c60"
            ]
        ]
    },
    {
        "id": "1863adbc1af997a7",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    var backupfile = flow.get(\"backupfile\")\n    msg.payload = 'cp.node - red / flows_pekaway.json \"pekaway/nrbackups/flows_pekaway_`date +%d-%m-%Y_%I:%M:%S%p`.json\" && cp pekaway/nrbackups/' + backupfile + ' .node-red/flows_pekaway.json && sudo systemctl restart nodered.service'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1220,
        "wires": [
            [
                "52ebc91a6ba8d4d1"
            ]
        ]
    },
    {
        "id": "52ebc91a6ba8d4d1",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 970,
        "y": 1220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e1907caadd45688d",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 600,
        "y": 1240,
        "wires": [
            [
                "1863adbc1af997a7"
            ]
        ]
    },
    {
        "id": "e24a641176af7c60",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup payload",
        "func": "msg.backupfile = flow.get(\"backupfile\")\n\nif (flow.get(\"backupfile\") == null) {\n    msg.payload = \"No backup file selected!\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"Are you sure you want to load backup file '\" + flow.get(\"backupfile\") + \"'?\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "0155e18724921a4c"
            ],
            [
                "e1907caadd45688d"
            ]
        ]
    },
    {
        "id": "0155e18724921a4c",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no file selected",
        "x": 600,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "1ada176cf7f7c420",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set file",
        "func": "flow.set(\"backupfile\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "b36c5c1f3ff467a2",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Manually create backup file",
        "group": "dbb060739248855a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Manually create backup file",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 840,
        "wires": [
            [
                "dcfcea69b1e03431"
            ]
        ]
    },
    {
        "id": "dcfcea69b1e03431",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "create backup file",
        "func": "msg.payload = 'cp .node-red/flows_pekaway.json \"pekaway/nrbackups/flows_pekaway_`date +%d-%m-%Y_%I:%M:%S%p`.json\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 840,
        "wires": [
            [
                "d82dd933e543e48f"
            ]
        ]
    },
    {
        "id": "d82dd933e543e48f",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 840,
        "wires": [
            [
                "fe47d4ebd7e98b33"
            ],
            [
                "06b9f820a720a68d"
            ],
            [
                "06b9f820a720a68d"
            ]
        ]
    },
    {
        "id": "5589bb9cbf0fbafe",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 910,
        "y": 840,
        "wires": [
            [
                "c1adfcd7b82074e5"
            ],
            [
                "cdcfb9b9dc6371fe"
            ],
            [
                "cdcfb9b9dc6371fe"
            ]
        ]
    },
    {
        "id": "fe47d4ebd7e98b33",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check files",
        "func": "msg.payload = \"ls -t pekaway/nrbackups | head -n1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            [
                "5589bb9cbf0fbafe"
            ]
        ]
    },
    {
        "id": "15a9ef741daf0d50",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "success",
        "x": 1200,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "c1adfcd7b82074e5",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "success",
        "func": "msg.payload = \"Created backup file \" + msg.payload + \" at ~/pekaway/nrbackups.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "15a9ef741daf0d50",
                "1e9516bafb76fd27"
            ]
        ]
    },
    {
        "id": "e0355e4844c62355",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "error",
        "func": "msg.payload = \"Couldnt create backup file. Please check if .node-red/flows_pekaway.json is accessible!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 880,
        "wires": [
            [
                "247beb78afdef17d"
            ]
        ]
    },
    {
        "id": "247beb78afdef17d",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "error",
        "x": 910,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4a2f490ae92cd1dc",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "error",
        "func": "msg.payload = \"Couldn't create backup file. Please check if nrbackups/ is accessible!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 880,
        "wires": [
            [
                "d4e533fe1da904d8"
            ]
        ]
    },
    {
        "id": "d4e533fe1da904d8",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "error",
        "x": 1280,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "06b9f820a720a68d",
        "type": "switch",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 880,
        "wires": [
            [
                "e0355e4844c62355"
            ]
        ]
    },
    {
        "id": "cdcfb9b9dc6371fe",
        "type": "switch",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1040,
        "y": 880,
        "wires": [
            [
                "4a2f490ae92cd1dc"
            ]
        ]
    },
    {
        "id": "43fb9d81cac63808",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Delete backup files except 3 latest ones",
        "group": "dbb060739248855a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete backup files except 3 latest ones",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "0f6ae56d6e794708"
            ]
        ]
    },
    {
        "id": "53722ebdaa40b576",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    msg.payload = 'cd pekaway/nrbackups/ && ls -t | tail -n +4 | xargs rm --'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 960,
        "wires": [
            [
                "99e7802ff9dad434"
            ]
        ]
    },
    {
        "id": "99e7802ff9dad434",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 930,
        "y": 960,
        "wires": [
            [
                "1e9516bafb76fd27"
            ],
            [],
            []
        ]
    },
    {
        "id": "8bb98fe6130bc69a",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 580,
        "y": 960,
        "wires": [
            [
                "53722ebdaa40b576"
            ]
        ]
    },
    {
        "id": "0f6ae56d6e794708",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "popup",
        "func": "msg.payload = 'This will delete all backup files in nrbackups/ except for the 3 latest ones!'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 960,
        "wires": [
            [
                "8bb98fe6130bc69a"
            ]
        ]
    },
    {
        "id": "f02f596984e38cc0",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "create backup file manually",
        "info": "",
        "x": 130,
        "y": 800,
        "wires": []
    },
    {
        "id": "4f6e62072d112492",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "delete backup files (to save space)",
        "info": "",
        "x": 160,
        "y": 920,
        "wires": []
    },
    {
        "id": "3779b1011698eec3",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "func": "flow.set(\"nousb\", true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "697d33dfc63c099e",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check USB-drive",
        "func": "if (flow.get(\"nousb\") == true) {\n    msg.payload = \"No USB-drives found!\";\n    node.send([null, msg]);\n    msg.ui_control = {\"place\":\"found 0 devices\"};\n    return [msg, null];\n}\n\nelse {\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "6e0de8e76e002847"
            ],
            [
                "517b2d6d4d5e33dd"
            ]
        ]
    },
    {
        "id": "a69d8c927d59b178",
        "type": "delay",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 570,
        "y": 180,
        "wires": [
            [
                "697d33dfc63c099e"
            ]
        ]
    },
    {
        "id": "517b2d6d4d5e33dd",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no USB-drive",
        "x": 1050,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "80da7524c278af5a",
        "type": "file",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "filename": "pekaway/update",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1240,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2df103e7ab0a9b4e",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set update true",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 460,
        "wires": [
            [
                "80da7524c278af5a"
            ]
        ]
    },
    {
        "id": "21b2d6c25b2f01bd",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "bc06df1c.ad422",
        "order": 18,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "System Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Update",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 60,
        "wires": [
            [
                "3dd292dfcb3407e1"
            ]
        ]
    },
    {
        "id": "3dd292dfcb3407e1",
        "type": "ui_ui_control",
        "z": "c3e6360c8bbf5f2e",
        "name": "change to tab 5",
        "events": "change",
        "x": 620,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6e0d804f39b13b78",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "System Update Link",
        "info": "",
        "x": 450,
        "y": 20,
        "wires": []
    },
    {
        "id": "bdec970611d2793c",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "mkdir -p ~/pekaway/userdata",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "create userdata dir if not exists",
        "x": 390,
        "y": 1380,
        "wires": [
            [
                "9c1fb65ef3eba227"
            ],
            [],
            []
        ]
    },
    {
        "id": "931a2d652770df61",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy userdata",
        "x": 760,
        "y": 1380,
        "wires": [
            [
                "5c7fc01ace4d9d24"
            ],
            [],
            []
        ]
    },
    {
        "id": "9c1fb65ef3eba227",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set cmd",
        "func": "msg.payload = \"rsync ~/pekaway/* ~/pekaway/userdata/ && cd ~/pekaway/userdata/ && rm *.txt *.db *.json *.sh *.py *.jpg *.ico & sleep 2 && cp ~/pekaway/homebridge_config.json ~/pekaway/userdata/homebridge_config.json\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1380,
        "wires": [
            [
                "931a2d652770df61"
            ]
        ]
    },
    {
        "id": "ed630723b9eaab75",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "download user data",
        "group": "f8dff812e7e8cb37",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Download User Data",
        "tooltip": "Backup your current settings (e.g. what shunt or battery are you using.)",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "bdec970611d2793c"
            ]
        ]
    },
    {
        "id": "b9bbe8d59d5a6c50",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Download",
        "func": "if (msg.payload == \"Close\"){\n    return null   \n}\nelse if (msg.payload == \"Download\") {\n    msg.payload = 'sudo rm -rf ~/pekaway/userdata/backups/ && mkdir -p ~/pekaway/userdata/backups && cd ~/pekaway/userdata/ && zip ./backups/userdata_pekaway.zip ./* -x backups/'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1380,
        "wires": [
            [
                "d6493589f40541e1"
            ]
        ]
    },
    {
        "id": "032c3fe64f2a3a7a",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "Userdata backup",
        "info": "",
        "x": 140,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2e9dbf3e91bf8eef",
        "type": "http in",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "url": "/userdata_pekaway.zip",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "fb69f9427422eb76"
            ]
        ]
    },
    {
        "id": "a032cf7cd2fdae62",
        "type": "http response",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 1460,
        "wires": []
    },
    {
        "id": "fb69f9427422eb76",
        "type": "file in",
        "z": "c3e6360c8bbf5f2e",
        "name": "userdata file",
        "filename": "pekaway/userdata/backups/userdata_pekaway.zip",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 410,
        "y": 1460,
        "wires": [
            [
                "a032cf7cd2fdae62"
            ]
        ]
    },
    {
        "id": "d6493589f40541e1",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "create zip file",
        "x": 770,
        "y": 1440,
        "wires": [
            [
                "a52378672c66d640"
            ],
            [],
            []
        ]
    },
    {
        "id": "98db3b7873c3bb2c",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "Download",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "user data backup done",
        "x": 1100,
        "y": 1380,
        "wires": [
            [
                "b9bbe8d59d5a6c50"
            ]
        ]
    },
    {
        "id": "5c7fc01ace4d9d24",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup",
        "func": "msg.payload = \"User data has been backed up to pekaway/userdata/. Do you want to create a downloadable zip-file?\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1380,
        "wires": [
            [
                "98db3b7873c3bb2c"
            ]
        ]
    },
    {
        "id": "8c88847b5aee282c",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "get http to download file",
        "info": "",
        "x": 160,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a52378672c66d640",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo ifconfig eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip eth0",
        "x": 930,
        "y": 1440,
        "wires": [
            [
                "72b52032251f53d9"
            ],
            [],
            []
        ]
    },
    {
        "id": "72b52032251f53d9",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\"+msg.payload+\":1880/userdata_pekaway.zip\"\n    return [msg, null]\n}\nelse {\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1440,
        "wires": [
            [
                "1c7a71dc96a505d9"
            ],
            [
                "6b722f762a4f5dde"
            ]
        ]
    },
    {
        "id": "6b722f762a4f5dde",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip wlan0",
        "x": 1220,
        "y": 1500,
        "wires": [
            [
                "f3238f78447a66f2"
            ],
            [],
            []
        ]
    },
    {
        "id": "1c7a71dc96a505d9",
        "type": "template",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div>\n    <p>\n        <a target=\"_blank\"href=\"{{ip}}\" style=\"text-align:center; color:white\" >Click here for download!</a>\n    </p>    \n</div>",
        "output": "str",
        "x": 1240,
        "y": 1440,
        "wires": [
            [
                "8711eda5916d4f59"
            ]
        ]
    },
    {
        "id": "8711eda5916d4f59",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "download link",
        "x": 1400,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "f3238f78447a66f2",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\"+msg.payload+\":1880/userdata_pekaway.zip\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"An error occurred!\" \n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1500,
        "wires": [
            [
                "1c7a71dc96a505d9"
            ],
            [
                "f67eec7f36de5562"
            ]
        ]
    },
    {
        "id": "f67eec7f36de5562",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "error",
        "x": 1510,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "9d39f181599b0a09",
        "type": "http in",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "url": "/restoreuserdata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1540,
        "wires": [
            [
                "531d7485751e086e"
            ]
        ]
    },
    {
        "id": "531d7485751e086e",
        "type": "template",
        "z": "c3e6360c8bbf5f2e",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    \n    :root {\n      --color-green-primary: rgb(51, 204, 51);\n      --color-green-secondary: rgb(26, 101, 26);\n      --color-red-primary: rgb(255, 0, 0);\n      --color-red-secondary: rgba(153,0,0,1);\n      --color-gray-primary: rgba(20,20,20,1);\n      --color-gray-secondary: rgba(65,65,65,1);\n      --color-text-headline: rgb(62, 206, 250);\n      --color-text-headline-secondary: rgb(31, 103, 125);\n      --color-text-primary: rgb(230, 226, 209);\n      --color-widget-border: rgb(84, 78, 78);\n      --color-sidebar-primary: rgba(26, 26, 26, 1)\n    }\n    \n    body {\n        height: 100%;\n        background: linear-gradient(180deg, var(--color-gray-primary)8%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n    }\n    \n    .uploadform {\n        position: absolute;\n        right: 50%;\n        bottom: 50%;\n        transform: translate(50%,50%);\n    }\n    .text {\n        color: var(--color-text-headline); \n    }\n    \n</style>\n\n<body>\n    <div class=\"uploadform\">\n        <h1 class=\"text\">Upload a file here:</h1>\n        \n        <form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"myFile\" />\n            <input type=\"submit\" value=\"Submit\">\n        </form>\n        \n        <h2 class=\"text\">Please make sure the filename does not contain any spaces!</h2>\n    </div>\n</body>",
        "output": "str",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "a222f87baade2c02"
            ]
        ]
    },
    {
        "id": "a222f87baade2c02",
        "type": "http response",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "x": 590,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a34e314c3558e136",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "upload backup file",
        "info": "",
        "x": 150,
        "y": 1500,
        "wires": []
    },
    {
        "id": "17894e4d7ed6429d",
        "type": "http response",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 1600,
        "wires": []
    },
    {
        "id": "b77abd07bd8c7701",
        "type": "http in",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "url": "/upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 1620,
        "wires": [
            [
                "50d479fcbf5cde1c"
            ]
        ]
    },
    {
        "id": "cc7a109d44cf536e",
        "type": "template",
        "z": "c3e6360c8bbf5f2e",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>\n    \n    :root {\n      --color-green-primary: rgb(51, 204, 51);\n      --color-green-secondary: rgb(26, 101, 26);\n      --color-red-primary: rgb(255, 0, 0);\n      --color-red-secondary: rgba(153,0,0,1);\n      --color-gray-primary: rgba(20,20,20,1);\n      --color-gray-secondary: rgba(65,65,65,1);\n      --color-text-headline: rgb(62, 206, 250);\n      --color-text-headline-secondary: rgb(31, 103, 125);\n      --color-text-primary: rgb(230, 226, 209);\n      --color-widget-border: rgb(84, 78, 78);\n      --color-sidebar-primary: rgba(26, 26, 26, 1)\n    }\n    \n    body {\n        height: 100%;\n        background: linear-gradient(180deg, var(--color-gray-primary)8%, var(--color-gray-secondary) 60%, var(--color-text-headline-secondary));\n    }\n    \n    .textform {\n        position: absolute;\n        right: 50%;\n        bottom: 50%;\n        transform: translate(50%,50%);\n        color: var(--color-text-headline);\n        text-align: center;\n    }\n    \n</style>\n\n<body>\n    <div class=\"textform\">\n        <p></p>File {{name}} uploaded to {{filename}}!</p>\n        <br>\n        <p>You can now close this window.</p>\n    </div>\n</body>",
        "output": "str",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "17894e4d7ed6429d"
            ]
        ]
    },
    {
        "id": "50d479fcbf5cde1c",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "save buffer",
        "func": "msg.name = msg.req.files[0].originalname;\nmsg.filename = \"pekaway/userdata/backups/restore/\"+msg.req.files[0].originalname\nmsg.payload = msg.req.files[0].buffer\nnode.send([null, msg])\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1620,
        "wires": [
            [
                "cc7a109d44cf536e"
            ],
            [
                "7023f992e4e00164"
            ]
        ]
    },
    {
        "id": "7023f992e4e00164",
        "type": "file",
        "z": "c3e6360c8bbf5f2e",
        "name": "save backup to restore",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 520,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "c7914f454127c676",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "upload user data",
        "group": "f8dff812e7e8cb37",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Upload User Data",
        "tooltip": "Restore your backed up settings (e.g. after flashing a new image to the SD card)",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1700,
        "wires": [
            [
                "fda57dc7e1f06124",
                "d78869ee4d9544ec"
            ]
        ]
    },
    {
        "id": "fda57dc7e1f06124",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo rm -rf pekaway/userdata/backups/restore & mkdir -p pekaway/userdata/backups/restore",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "clear old userdata dir",
        "x": 360,
        "y": 1700,
        "wires": [
            [
                "5a1d1fa58e544fac"
            ],
            [],
            []
        ]
    },
    {
        "id": "5a1d1fa58e544fac",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo ifconfig eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip eth0",
        "x": 550,
        "y": 1700,
        "wires": [
            [
                "ea488ac13909181f"
            ],
            [],
            []
        ]
    },
    {
        "id": "ea488ac13909181f",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\"+msg.payload+\":1880/restoreuserdata\"\n    return [msg, null]\n}\nelse {\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1700,
        "wires": [
            [
                "05cec3bf6e1528c1"
            ],
            [
                "99f1ffa6fed9cc85"
            ]
        ]
    },
    {
        "id": "99f1ffa6fed9cc85",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "sudo ifconfig wlan0 | sed -En -e 's/.*inet ([0-9.]+).*/\\1/p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check ip wlan0",
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "96a47e7bc6d10f8a"
            ],
            [],
            []
        ]
    },
    {
        "id": "05cec3bf6e1528c1",
        "type": "template",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div>\n    <p>\n        <a target=\"_blank\"href=\"{{ip}}\" style=\"text-align:center; color:white\">Click here to upload!</a>\n    </p>    \n</div>",
        "output": "str",
        "x": 860,
        "y": 1700,
        "wires": [
            [
                "d939ac39d66f0713"
            ]
        ]
    },
    {
        "id": "96a47e7bc6d10f8a",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set url",
        "func": "if (msg.payload != \"\") {\n    msg.payload = msg.payload.trim()\n    msg.ip = \"http://\"+msg.payload+\":1880/restoreuserdata\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"An error occurred!\" \n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "05cec3bf6e1528c1"
            ],
            [
                "d1ea76e7d88830e8"
            ]
        ]
    },
    {
        "id": "d1ea76e7d88830e8",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "error",
        "x": 1130,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "d939ac39d66f0713",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "upload link",
        "x": 1010,
        "y": 1700,
        "wires": [
            [
                "d78869ee4d9544ec"
            ]
        ]
    },
    {
        "id": "d78869ee4d9544ec",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "ls pekaway/userdata/backups/restore",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "search backups",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "4e977998215dceca"
            ],
            [
                "f2678a4b731ba2dd"
            ],
            [
                "f2678a4b731ba2dd"
            ]
        ]
    },
    {
        "id": "4e977998215dceca",
        "type": "split",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 1820,
        "wires": [
            [
                "67cd307caa72b711"
            ]
        ]
    },
    {
        "id": "67cd307caa72b711",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "filter results",
        "func": "if (msg.payload != \"\"){\n    return msg \n}\nelse {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "f21fc0ae34795829"
            ]
        ]
    },
    {
        "id": "f21fc0ae34795829",
        "type": "join",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "mountpoint",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 750,
        "y": 1820,
        "wires": [
            [
                "b5f401e229589fec"
            ]
        ]
    },
    {
        "id": "f6418bbf034bb01f",
        "type": "ui_dropdown",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "No user data backup found!",
        "group": "f8dff812e7e8cb37",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1060,
        "y": 1820,
        "wires": [
            [
                "e22f2a8bc4243db1"
            ]
        ]
    },
    {
        "id": "b5f401e229589fec",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set placeholder",
        "func": "var failed\n\nif (msg.payload.message != null) {\n    failed = msg.payload.message.substring(0, 14)\n}\nelse {\n    failed = \"not failed\"\n}\n\nif (failed == \"Command failed\") {\n    msg.ui_control = {\"place\":\"found 0 userdata backups\"}\n    return msg\n}\n\nelse {\n    var files = msg.payload.length\n    msg.options = msg.payload\n    msg.payload = {}\n    node.send(msg)\n    msg.ui_control = {\"place\":\"found \"+files+\" userdata backup\"}\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1820,
        "wires": [
            [
                "f6418bbf034bb01f"
            ]
        ]
    },
    {
        "id": "f2678a4b731ba2dd",
        "type": "switch",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Command failed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 1860,
        "wires": [
            [
                "b5f401e229589fec"
            ]
        ]
    },
    {
        "id": "e22f2a8bc4243db1",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set file",
        "func": "flow.set(\"userdata_backupfile\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "d429ea57885f31f5",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "f8dff812e7e8cb37",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Choose User Data to restore:",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 180,
        "y": 1740,
        "wires": []
    },
    {
        "id": "e756f47d0c99fd47",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "restore user data",
        "group": "f8dff812e7e8cb37",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restore User Data",
        "tooltip": "Restore your backed up settings (e.g. after flashing a new image to the SD card)",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1940,
        "wires": [
            [
                "e117dad48b953a39"
            ]
        ]
    },
    {
        "id": "39ab975739aeceb9",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\nelse if (msg.payload == \"Go!\") {\n    var backupfile = flow.get(\"userdata_backupfile\")\n    msg.payload = 'cp ~/pekaway/userdata/backups/restore/' + backupfile + ' ~/pekaway/' + backupfile + ' && unzip -o ~/pekaway/' + backupfile + ' && rm ~/pekaway/' + backupfile + ' && sudo systemctl restart nodered.service'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1940,
        "wires": [
            [
                "52c6554dec0b646f"
            ]
        ]
    },
    {
        "id": "52c6554dec0b646f",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 970,
        "y": 1940,
        "wires": [
            [
                "e851b9f57f98f6ff",
                "150ca28f277a886b"
            ],
            [],
            [
                "150ca28f277a886b"
            ]
        ]
    },
    {
        "id": "c37cc473feed99c2",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "are you sure?",
        "x": 595,
        "y": 1954.5,
        "wires": [
            [
                "39ab975739aeceb9"
            ]
        ]
    },
    {
        "id": "e117dad48b953a39",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup payload",
        "func": "msg.backupfile = flow.get(\"userdata_backupfile\")\n\nif (flow.get(\"userdata_backupfile\") == null) {\n    msg.payload = \"No backup file selected!\"\n    return [msg, null]\n}\nelse {\n    msg.payload = \"Are you sure you want to restore from file '\" + flow.get(\"userdata_backupfile\") + \"'?\"\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1940,
        "wires": [
            [
                "fc391fa1dbe00b69"
            ],
            [
                "c37cc473feed99c2"
            ]
        ]
    },
    {
        "id": "fc391fa1dbe00b69",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "no file selected",
        "x": 595,
        "y": 1914.5,
        "wires": [
            []
        ]
    },
    {
        "id": "ef5e6a29e34d784b",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "restored",
        "x": 1320,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "e851b9f57f98f6ff",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "set popup",
        "func": "if (msg.payload == \"\") {\n    msg.payload = \"There was an error restoring your data\"\n}\nelse {\n    msg.payload = \"User data has been restored!\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1920,
        "wires": [
            [
                "ef5e6a29e34d784b"
            ]
        ]
    },
    {
        "id": "feb05730bacbd9c7",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 810,
        "y": 740,
        "wires": [
            [
                "017a4119ddf8e417"
            ],
            [],
            []
        ]
    },
    {
        "id": "62a82de94118703d",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get commit title",
        "func": "var lastcommitid = msg.payload.trim()\nmsg.lastcommitid = msg.payload.trim()\nmsg.payload = 'curl -s https://git.pekaway.de/api/v4/projects/38/repository/commits/'+lastcommitid+' | jq -r \".title\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "feb05730bacbd9c7"
            ]
        ]
    },
    {
        "id": "017a4119ddf8e417",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get commit date",
        "func": "msg.latest = msg.payload.trim()\nglobal.set(\"latestVersion\", msg.latest)\nvar commitdate = msg.lastcommitid\nmsg.payload = 'curl -s https://git.pekaway.de/api/v4/projects/38/repository/commits/'+commitdate+' |  jq -r \".committed_date\" | cut -c1-10'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 740,
        "wires": [
            [
                "21053164d3228f2d"
            ]
        ]
    },
    {
        "id": "21053164d3228f2d",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 740,
        "wires": [
            [
                "44d7c15caacc3b94"
            ],
            [],
            []
        ]
    },
    {
        "id": "44d7c15caacc3b94",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "create pop up msg",
        "func": "var committed = msg.payload.trim()\nvar year = committed.substr(0,4)\nvar month = committed.substr(5,2)\nvar day = committed.substr(8,2)\nvar installdate = global.get(\"installdate\")\nvar install_year = installdate.toString().substr(1, 4)\nvar install_month = installdate.toString().substr(6, 2)\nvar install_day = installdate.toString().substr(9, 2)\ninstalldate = install_day + \".\" + install_month + \".\" + install_year\ninstalldate = installdate.toString().substr(0, 11)\n\ncommitted = day+\".\"+month+\".\"+year\nmsg.currentVersion = global.get(\"currentVersion\")\n\nif (msg.currentVersion == msg.latest) {\n    msg.updatemessage = \"You are up to date!\"\n}\nelse if (msg.currentVersion != msg.latest) {\n    msg.updatemessage = \"An update is available!\"\n}\n\nmsg.committed = committed\nmsg.payload = \"<center>Latest version on update server: <b>\" + msg.latest + \"</b><br>(released \" + committed + \")<br><br>Your version: <b>\" + msg.currentVersion + \"</b><br>(Installed: \"+installdate+\")<br><br><b>\" + msg.updatemessage + \"</b><br><br>Read full changelog <a href='https://git.pekaway.de/Vincent/vanpi/-/blob/main/changelog' target='_blank'>here</a></center>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 740,
        "wires": [
            [
                "877e52d351aacfd6"
            ]
        ]
    },
    {
        "id": "56e1b0883a8a7de0",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Check for updates",
        "group": "dbb060739248855a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Check for updates",
        "tooltip": "Click here to check for updates (only works with established internet connection)",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "893281bbe35abcb3",
                "6be0c722945f7ae8"
            ]
        ]
    },
    {
        "id": "877e52d351aacfd6",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "update available?",
        "x": 1530,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "fcb635ba68157e61",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 740,
        "wires": [
            [
                "62a82de94118703d"
            ],
            [],
            []
        ]
    },
    {
        "id": "893281bbe35abcb3",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get last_commit_id",
        "func": "msg.payload = 'curl https://git.pekaway.de/api/v4/projects/38/repository/files/pi4%2Fflows.json?ref=main | jq -r \".last_commit_id\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 740,
        "wires": [
            [
                "fcb635ba68157e61"
            ]
        ]
    },
    {
        "id": "4ab54ea60e39a68e",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "Start FLASHERmode",
        "info": "",
        "x": 200,
        "y": 2040,
        "wires": []
    },
    {
        "id": "7a54496f0186fbbf",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "group": "bc06df1c.ad422",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Flashtool",
        "tooltip": "Flash your ESP-boards here!",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Do you want to start the flasher-mode? This wil take a few seconds!",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 2080,
        "wires": [
            [
                "f318248427f270d4"
            ]
        ]
    },
    {
        "id": "f318248427f270d4",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Go!",
        "cancel": "Cancel!",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "System will load flashermode!",
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "5bf55b9a151bb5c7"
            ]
        ]
    },
    {
        "id": "418d38dfb1f552c3",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 850,
        "y": 2080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5bf55b9a151bb5c7",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check Ok/Cancel",
        "func": "if (msg.payload == \"Go!\") {\n    msg.payload = 'cp .node-red/flows_pekaway.json pekaway/bins/flashmodebackup.json && cp pekaway/bins/PekawayMOTAnrFlasher.json .node-red/flows_pekaway.json && sudo systemctl restart nodered.service'\n   return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2080,
        "wires": [
            [
                "418d38dfb1f552c3"
            ]
        ]
    },
    {
        "id": "150ca28f277a886b",
        "type": "debug",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1960,
        "wires": []
    },
    {
        "id": "f598edbd73e8fee6",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "empty folder",
        "func": "if (msg.payload == \"\") {\n    msg.ui_control = {\"place\":\"found 0 backup files\"}\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "cfc204fb2a3e79c5"
            ]
        ]
    },
    {
        "id": "d1555f8fe73943a6",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1350,
        "y": 580,
        "wires": [
            [
                "e464de788753f26b"
            ],
            [],
            []
        ]
    },
    {
        "id": "dbeff378ac6e4082",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check zigbee availability",
        "func": "msg.payload = \"test -f /etc/systemd/system/zigbee2mqtt.service && echo \\\"found\\\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 580,
        "wires": [
            [
                "d1555f8fe73943a6"
            ]
        ]
    },
    {
        "id": "e464de788753f26b",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "install zigbee2mqtt",
        "func": "msg.payload = msg.payload.trim()\nif (msg.payload == \"found\") {\n    return null;\n}\nelse if (msg.payload == \"\") {\n    msg.payload = \"sudo mkdir /opt/zigbee2mqtt && sudo chown -R ${USER}: /opt/zigbee2mqtt && git clone --depth 1 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt && cd /opt/zigbee2mqtt && npm ci\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 580,
        "wires": [
            [
                "04bb4873b02b2b30"
            ]
        ]
    },
    {
        "id": "04bb4873b02b2b30",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1670,
        "y": 580,
        "wires": [
            [
                "62ec33d20b960842"
            ],
            [],
            []
        ]
    },
    {
        "id": "62ec33d20b960842",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get zigbee2mqtt conf",
        "func": "var server = \"https://git.pekaway.de/Vincent/vanpi/-/raw/main/pi4/\"\n\nmsg.payload = \"cd ~/pekaway && curl \"+ server + \"configuration.yaml > /opt/zigbee2mqtt/data/configuration.yaml && sudo wget \"+ server + \"zigbee2mqtt.service && sudo mv zigbee2mqtt.service /etc/systemd/system/ && sudo systemctl daemon-reload\"\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 580,
        "wires": [
            [
                "9a24e3232b863144"
            ]
        ]
    },
    {
        "id": "9a24e3232b863144",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2010,
        "y": 580,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "415cd95aea1afbb0",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "install zigbee if it doesnt exist",
        "info": "",
        "x": 1160,
        "y": 540,
        "wires": []
    },
    {
        "id": "64bf592b6afeb651",
        "type": "link in",
        "z": "c3e6360c8bbf5f2e",
        "name": "check zigbee",
        "links": [
            "9e4bf54088d5fb75"
        ],
        "x": 995,
        "y": 580,
        "wires": [
            [
                "dbeff378ac6e4082"
            ]
        ]
    },
    {
        "id": "de3d95adbb440ee8",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "checking...",
        "x": 430,
        "y": 700,
        "wires": []
    },
    {
        "id": "6be0c722945f7ae8",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check",
        "func": "msg.payload = \"checking for updates...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 700,
        "wires": [
            [
                "de3d95adbb440ee8"
            ]
        ]
    },
    {
        "id": "2e41df3c201eb811",
        "type": "ui_ui_control",
        "z": "c3e6360c8bbf5f2e",
        "name": "change tab",
        "events": "change",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "c9464c860612327e"
            ]
        ]
    },
    {
        "id": "f7787b100c83c6bf",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check tab",
        "func": "if (msg.payload == \"change\" && msg.name == \"Update\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1140,
        "wires": [
            [
                "ad8661b48ea2508f",
                "16669008fb6ef33e"
            ]
        ]
    },
    {
        "id": "ad8661b48ea2508f",
        "type": "link out",
        "z": "c3e6360c8bbf5f2e",
        "name": "Switch to Update tab",
        "mode": "link",
        "links": [
            "76b74d08b3a65108",
            "99da0ab65ab5ce1c"
        ],
        "x": 545,
        "y": 1140,
        "wires": []
    },
    {
        "id": "99da0ab65ab5ce1c",
        "type": "link in",
        "z": "c3e6360c8bbf5f2e",
        "name": "Switch to Update tab",
        "links": [
            "ad8661b48ea2508f"
        ],
        "x": 55,
        "y": 1840,
        "wires": [
            [
                "d78869ee4d9544ec"
            ]
        ]
    },
    {
        "id": "98945d7a16d6e3da",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get updatescript and execute",
        "func": "if (msg.payload == \"Cancel!\"){\n    return null   \n}\n\nelse if (msg.payload == \"Go!\") {\n    msg.payload = 'cd ~/pekaway && wget -O ~/pekaway/updatescript.sh https://git.pekaway.de/Vincent/vanpi/-/raw/main/pi4/updatescript.sh && chmod +x ~/pekaway/updatescript.sh && bash ~/pekaway/updatescript.sh'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 640,
        "wires": [
            [
                "fb06f8d1f80d40a1",
                "8cdb21504f175a5b"
            ]
        ]
    },
    {
        "id": "8cdb21504f175a5b",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "node-red-auto-update",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1795ca934ab57670",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "update started",
        "x": 1280,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fb06f8d1f80d40a1",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "started",
        "func": "msg.payload = \"<center><h2>Update process has started, please wait until this page has been automatically reloaded!</h2></center>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 680,
        "wires": [
            [
                "1795ca934ab57670"
            ]
        ]
    },
    {
        "id": "9bdc50298bb1f89a",
        "type": "inject",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2260,
        "wires": [
            [
                "09b757bd465bc802"
            ]
        ]
    },
    {
        "id": "fee9c01377e41c7f",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": " comm -23 <(seq 1880 2380) <(ss -tan | awk '{print $4}' | cut -d':' -f2 | grep \"[0-9]\\{1,5\\}\" | sort | uniq) | head -n 1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "get next free port",
        "x": 410,
        "y": 2300,
        "wires": [
            [
                "78070797b187e3d0"
            ],
            [],
            []
        ]
    },
    {
        "id": "78070797b187e3d0",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "check instances",
        "func": "let backupfile = flow.get(\"backupfile\")\n\nif (backupfile == null) {\n    msg.payload = \"No backup file selected!\"\n    return [null, null, msg]\n}\nelse {\n    msg.freeport = msg.payload.trim()\n\n    if (flow.get(\"addNRrunning\") == true) {\n        msg.payload = \"sudo fuser -k \" + flow.get(\"freeport\") + \"/tcp\"\n        node.send([null, msg, null])\n    }\n\n    msg.payload = \"[ -e ~/pekaway/nrbackups/\" + flow.get(\"backupfile\") + \" ] && echo \\\"file found.\\\" || echo \\\"file unavailable\\\"\"\n    return [msg, null, null];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2300,
        "wires": [
            [
                "46a9c1149b05026e",
                "5b570ab053c916b7"
            ],
            [
                "6af4189a82dd5376"
            ],
            [
                "c20b3745a22ba276"
            ]
        ]
    },
    {
        "id": "1a308d686a365e03",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "start NR#2",
        "x": 1390,
        "y": 2260,
        "wires": [
            [],
            [],
            [
                "5943e0962dd6c98d"
            ]
        ]
    },
    {
        "id": "d44c57329f976f56",
        "type": "inject",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2380,
        "wires": [
            [
                "b27b148e968c3b33"
            ]
        ]
    },
    {
        "id": "3452ddb5cc0babce",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "kill NR#2",
        "func": "msg.payload = \"sudo fuser -k \" + flow.get(\"freeport\") + \"/tcp\"\nflow.set(\"addNRrunning\", false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2340,
        "wires": [
            [
                "6af4189a82dd5376"
            ]
        ]
    },
    {
        "id": "6af4189a82dd5376",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill NR#2",
        "x": 860,
        "y": 2320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "364be89465027fa1",
        "type": "delay",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 2260,
        "wires": [
            [
                "1a308d686a365e03"
            ]
        ]
    },
    {
        "id": "09b757bd465bc802",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Start 2nd NR",
        "group": "0ae34e221b8d2997",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start 2nd Node-RED instance",
        "tooltip": "scans for the next free port and starts another instance of Node-RED with the selected backup file",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 2300,
        "wires": [
            [
                "fee9c01377e41c7f"
            ]
        ]
    },
    {
        "id": "b27b148e968c3b33",
        "type": "ui_button",
        "z": "c3e6360c8bbf5f2e",
        "name": "Stop 2nd NR",
        "group": "0ae34e221b8d2997",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Stop 2nd Node-RED instance",
        "tooltip": "scans for the next free port and starts another instance of Node-RED with the selected backup file",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 2340,
        "wires": [
            [
                "3452ddb5cc0babce"
            ]
        ]
    },
    {
        "id": "04fa55bef730b6dc",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "0ae34e221b8d2997",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "or",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 150,
        "y": 2220,
        "wires": []
    },
    {
        "id": "94a59277404a9cbe",
        "type": "ui_text",
        "z": "c3e6360c8bbf5f2e",
        "group": "0ae34e221b8d2997",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1170,
        "y": 2480,
        "wires": []
    },
    {
        "id": "29e81437c5fc9638",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 2480,
        "wires": [
            [
                "52c262127da24310"
            ],
            [],
            []
        ]
    },
    {
        "id": "067899b6b3f48126",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "get process id",
        "func": "msg.payload = \"sudo netstat -tulpn | grep node-red | awk '{print $4}'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2480,
        "wires": [
            [
                "29e81437c5fc9638"
            ]
        ]
    },
    {
        "id": "83851165ae64f904",
        "type": "inject",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2480,
        "wires": [
            [
                "067899b6b3f48126"
            ]
        ]
    },
    {
        "id": "52c262127da24310",
        "type": "change",
        "z": "c3e6360c8bbf5f2e",
        "name": "exclude localhost ip",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0.0.0.0:",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "3acc28ca17db41ef"
            ]
        ]
    },
    {
        "id": "3acc28ca17db41ef",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "show ports",
        "func": "msg.payload = msg.payload.replace(/\\s/g, \"\").replace(\"1880\", \"\")\nif (msg.payload == \"\") {\n    msg.payload = \"No additional instance running\"\n}\nelse {\n    msg.payload = \"Additional instance port: \" + msg.payload\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2480,
        "wires": [
            [
                "94a59277404a9cbe"
            ]
        ]
    },
    {
        "id": "f11d549dcff8cfdd",
        "type": "delay",
        "z": "c3e6360c8bbf5f2e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 2440,
        "wires": [
            [
                "067899b6b3f48126"
            ]
        ]
    },
    {
        "id": "5943e0962dd6c98d",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "SIGKILL",
        "func": "if (msg.payload.signal.includes(\"SIGKILL\")) {\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 2260,
        "wires": [
            [
                "067899b6b3f48126"
            ]
        ]
    },
    {
        "id": "c20b3745a22ba276",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 890,
        "y": 2360,
        "wires": []
    },
    {
        "id": "2dc642d0e2515a89",
        "type": "ui_toast",
        "z": "c3e6360c8bbf5f2e",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 2220,
        "wires": []
    },
    {
        "id": "46a9c1149b05026e",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "start notification",
        "func": "msg.payload = \"starting additional instance...\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2220,
        "wires": [
            [
                "2dc642d0e2515a89"
            ]
        ]
    },
    {
        "id": "5b570ab053c916b7",
        "type": "exec",
        "z": "c3e6360c8bbf5f2e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check file",
        "x": 860,
        "y": 2260,
        "wires": [
            [
                "ddb3380a4fb8d060"
            ],
            [],
            []
        ]
    },
    {
        "id": "ddb3380a4fb8d060",
        "type": "function",
        "z": "c3e6360c8bbf5f2e",
        "name": "found file?",
        "func": "let backupfile = flow.get(\"backupfile\")\n\nif (msg.payload.includes(\"found\")) {\n    flow.set(\"freeport\", msg.freeport)\n    msg.payload = \"node-red ~/pekaway/nrbackups/\" + backupfile + \" -p \" + msg.freeport\n    flow.set(\"addNRrunning\", true)\n    return [null, msg]\n}\nelse if (msg.payload.includes(\"unavailable\")) {\n    msg.payload = \"File \" + flow.get(\"backupfile\") + \"could not be found.\"\n    return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2260,
        "wires": [
            [
                "2dc642d0e2515a89"
            ],
            [
                "364be89465027fa1",
                "f11d549dcff8cfdd"
            ]
        ]
    },
    {
        "id": "37d3e1a189a2c231",
        "type": "comment",
        "z": "c3e6360c8bbf5f2e",
        "name": "load up 2nd Node-RED instance with backup flow file",
        "info": "",
        "x": 470,
        "y": 2220,
        "wires": []
    },
    {
        "id": "c9464c860612327e",
        "type": "delay",
        "z": "c3e6360c8bbf5f2e",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 1140,
        "wires": [
            [
                "f7787b100c83c6bf"
            ]
        ]
    },
    {
        "id": "1b3788d8c3da1f49",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/firstboot",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 610,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5a386dc8e29859e7",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "First full deploy, then click all inject nodes, then get SD-Image",
        "info": "",
        "x": 280,
        "y": 160,
        "wires": []
    },
    {
        "id": "df510302d2e7a7ea",
        "type": "ui_text",
        "z": "d1a4ceb114f5619d",
        "group": "bc06df1c.ad422",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "version number",
        "label": "VAN PI Control",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "79be4865bb2a8ab1",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wifiUpdated.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc2e4934d57dbd8",
        "type": "delay",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "6ec4d1a3adbefe7a"
            ]
        ]
    },
    {
        "id": "6ec4d1a3adbefe7a",
        "type": "link out",
        "z": "d1a4ceb114f5619d",
        "name": "wifilistupdated",
        "links": [
            "b3c32f7e6be8edf6"
        ],
        "x": 725,
        "y": 400,
        "wires": []
    },
    {
        "id": "30472363e0e03acf",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/WifiScanResult.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c678cda25e98b821",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "30472363e0e03acf",
                "f9828d4c4ab0c377",
                "3f04b9b711e112cc",
                "8e19714a6e45630a",
                "e89c87d725624069"
            ]
        ]
    },
    {
        "id": "4b6c9e5d4c168b8d",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "fcdc4da4b0e56acc",
                "a6de77188aa872aa",
                "b40dff63bb0d72a2",
                "a71d3fad3c0f800a",
                "851d036a4b159769"
            ]
        ]
    },
    {
        "id": "fcdc4da4b0e56acc",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "sudo rm -rf pekaway/nrbackups/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 1420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a6de77188aa872aa",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "sudo rm -rf pekaway/pkwUpdate/* && sudo rm -rf /var/log/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "cf1609c7fe63746f"
            ],
            [],
            []
        ]
    },
    {
        "id": "115b9d852f2a7d0c",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/version",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 580,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "1eee9036a4cb711a",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "2c671e4e53fa1865",
                "46530285bed2c8f7",
                "1be9db15ce86f0ba",
                "128ce884566cf7c6",
                "cbf30e0f02058474",
                "ac2bdf1ff896995e",
                "378fc34dbd20af2d",
                "e9f9d143046e1c10",
                "2b1d9a655a0278d5"
            ]
        ]
    },
    {
        "id": "2c671e4e53fa1865",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "version ",
        "func": "msg.payload=\"v1.1.1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 440,
        "wires": [
            [
                "115b9d852f2a7d0c",
                "df510302d2e7a7ea"
            ]
        ]
    },
    {
        "id": "f9828d4c4ab0c377",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/WifiScanResult1.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3f04b9b711e112cc",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/newWifi.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "8e19714a6e45630a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/availableWifi.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "e0925f50ca63e4e7",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelfull",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "69591487c51f0aaf",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelempty",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "05bb843da24a5d3e",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelfull1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "7684784a7268cd61",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelempty1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "a33f737d67432c86",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelfull2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "03b72bbeebb6f8a0",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelempty2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "bf0c7e52251f8bdd",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelfull3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "95cae62f9c28bba2",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelempty3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9e994cf5ae844a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelfull4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "cfdb77ededce45d3",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/levelempty4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "755e1f7ce21b4085",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "e0925f50ca63e4e7",
                "05bb843da24a5d3e",
                "a33f737d67432c86",
                "cf9e994cf5ae844a",
                "bf0c7e52251f8bdd",
                "69591487c51f0aaf",
                "7684784a7268cd61",
                "03b72bbeebb6f8a0",
                "95cae62f9c28bba2",
                "cfdb77ededce45d3",
                "778260c30c5464c9",
                "c4ca517da19171fa",
                "80aac4a543168369",
                "36871bdad37d0b9c"
            ]
        ]
    },
    {
        "id": "778260c30c5464c9",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Temp1\"\nnode.send([msg, null, null, null])\nmsg.payload = \"Temp2\"\nnode.send([null, msg, null, null])\nmsg.payload = \"Temp3\"\nnode.send([null, null, msg, null])\nmsg.payload = \"Temp4\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1300,
        "wires": [
            [
                "79c9be349086ead8"
            ],
            [
                "8671ce2b2cb30d17"
            ],
            [
                "31fef5bea9b612f3"
            ],
            [
                "bb4859c172af3827"
            ]
        ]
    },
    {
        "id": "79c9be349086ead8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/tempsensor1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8671ce2b2cb30d17",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/tempsensor2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "31fef5bea9b612f3",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/tempsensor3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "bb4859c172af3827",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/tempsensor4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "ca25518706fbec74",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 930,
        "y": 1540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cd5b0f80db4a1662",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "str",
        "x": 110,
        "y": 1700,
        "wires": [
            [
                "d6ab3bc174fa1a8b",
                "4d3f0d5fa073f4bc",
                "b4892667491de112",
                "1a4d8823f975088a",
                "22eaad2927f83634",
                "fc7f85ee99cc6e2a"
            ]
        ]
    },
    {
        "id": "cc874a69518948a0",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "Manually turn off switches for \"Dimmers\", \"Dimmer Debug Mode\", \"Wifi Relays\", \"LFBros\" & Zigbee in Frontend - Config! Leave Homebridge active! Turn off all Dimmers & Relays in Frontend!",
        "info": "",
        "x": 680,
        "y": 40,
        "wires": []
    },
    {
        "id": "8c715ce759e89688",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Dimmer 1\"\nnode.send([msg, null, null, null])\nmsg.payload = \"Dimmer 2\"\nnode.send([null, msg, null, null])\nmsg.payload = \"Dimmer 3\"\nnode.send([null, null, msg, null])\nmsg.payload = \"Dimmer 4\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1920,
        "wires": [
            [
                "7f47e1b7c0176f93"
            ],
            [
                "ac5f0cf7ce14b3b4"
            ],
            [
                "e68622f3ec713b28"
            ],
            [
                "61308a9bd4725020"
            ]
        ]
    },
    {
        "id": "1be0b7c0321a6169",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1900,
        "wires": [
            [
                "8c715ce759e89688",
                "60d6a99d96407f6f",
                "a58b17caf812b81a",
                "4533839a307b11fb",
                "3a303daa7b4068af",
                "46be138395ab246a",
                "7f4ada44c141d518",
                "a53683131cccca37",
                "00d32c9136ce3d73"
            ]
        ]
    },
    {
        "id": "60d6a99d96407f6f",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Dimmer 5\"\nnode.send([msg, null, null, null])\nmsg.payload = \"Dimmer 6\"\nnode.send([null, msg, null, null])\nmsg.payload = \"Dimmer 7\"\nnode.send([null, null, msg, null])\nmsg.payload = \"Dimmer 8\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1980,
        "wires": [
            [
                "2017277c9d1bd9f0"
            ],
            [
                "c9da803c8b1182a3"
            ],
            [
                "032004f3c5b882cf"
            ],
            [
                "0a7ea79e597f4436"
            ]
        ]
    },
    {
        "id": "7f47e1b7c0176f93",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer0",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "ac5f0cf7ce14b3b4",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "e68622f3ec713b28",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "61308a9bd4725020",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "2017277c9d1bd9f0",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "c9da803c8b1182a3",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "032004f3c5b882cf",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "0a7ea79e597f4436",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/Ndimmer7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "a58b17caf812b81a",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Relay 1\"\nnode.send([msg, null, null, null])\nmsg.payload = \"Relay 2\"\nnode.send([null, msg, null, null])\nmsg.payload = \"Relay 3\"\nnode.send([null, null, msg, null])\nmsg.payload = \"Relay 4\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2220,
        "wires": [
            [
                "86f4026b3b5bda29"
            ],
            [
                "de7469caacc189f0"
            ],
            [
                "5d5de42047b589b4"
            ],
            [
                "9d426f77cdefd12f"
            ]
        ]
    },
    {
        "id": "46be138395ab246a",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"WifiRelay 1\"\nnode.send([msg, null, null, null])\nmsg.payload = \"WifiRelay 2\"\nnode.send([null, msg, null, null])\nmsg.payload = \"WifiRelay 3\"\nnode.send([null, null, msg, null])\nmsg.payload = \"WifiRelay 4\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2580,
        "wires": [
            [
                "6935fcc279fa31b0"
            ],
            [
                "ec5335208b56fd6a"
            ],
            [
                "18e72192da09017b"
            ],
            [
                "0c8584c3bb8a76a2"
            ]
        ]
    },
    {
        "id": "4533839a307b11fb",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Relay 5\"\nnode.send([msg, null, null, null])\nmsg.payload = \"Relay 6\"\nnode.send([null, msg, null, null])\nmsg.payload = \"Relay 7\"\nnode.send([null, null, msg, null])\nmsg.payload = \"Relay 8\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2300,
        "wires": [
            [
                "4a594a176cee9ae2"
            ],
            [
                "551bf8c18c7e98cb"
            ],
            [
                "fb93b87946f8bdce"
            ],
            [
                "63d37aee4af1382f"
            ]
        ]
    },
    {
        "id": "3a303daa7b4068af",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Relay 9\"\nnode.send([msg, null])\nmsg.payload = \"Relay 10\"\nnode.send([null, msg])\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2360,
        "wires": [
            [
                "e3f7a11a846f5125"
            ],
            [
                "258b5e27db7783cb"
            ]
        ]
    },
    {
        "id": "7f4ada44c141d518",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"WifiRelay 5\"\nnode.send([msg, null, null, null])\nmsg.payload = \"WifiRelay 6\"\nnode.send([null, msg, null, null])\nmsg.payload = \"WifiRelay 7\"\nnode.send([null, null, msg, null])\nmsg.payload = \"WifiRelay 8\"\nnode.send([null, null, null, msg])",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2660,
        "wires": [
            [
                "75fbec7d0ba01b77"
            ],
            [
                "49612863efb4f9fe"
            ],
            [
                "8b3137ae99b21e30"
            ],
            [
                "05b82f087645f9ef"
            ]
        ]
    },
    {
        "id": "de7469caacc189f0",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "5d5de42047b589b4",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "9d426f77cdefd12f",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "4a594a176cee9ae2",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "551bf8c18c7e98cb",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb93b87946f8bdce",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "63d37aee4af1382f",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name8",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "86f4026b3b5bda29",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "258b5e27db7783cb",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name10",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f7a11a846f5125",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relay_name9",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "ec5335208b56fd6a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name2",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "18e72192da09017b",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name3",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "0c8584c3bb8a76a2",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name4",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "6935fcc279fa31b0",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name1",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "49612863efb4f9fe",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name6",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "8b3137ae99b21e30",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name7",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "05b82f087645f9ef",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name8",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "75fbec7d0ba01b77",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay_name5",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ab3bc174fa1a8b",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/sendmqttstats",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 350,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "db577023030a1732",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay1_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1775cd7081ab7f5f",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay2_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "921de5bbec4ed810",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay3_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "36682cb3142a9ac8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay4_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a2da4f1d4b22d657",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay5_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "35fc82e0f16cca12",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay6_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c06984fc5f57775c",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay7_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2ae793bf66778679",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelay8_firmware",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "128ce884566cf7c6",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "tasmota",
        "func": "msg.payload=\"tasmota\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 520,
        "wires": [
            [
                "db577023030a1732",
                "1775cd7081ab7f5f",
                "921de5bbec4ed810",
                "36682cb3142a9ac8",
                "a2da4f1d4b22d657",
                "35fc82e0f16cca12",
                "c06984fc5f57775c",
                "2ae793bf66778679"
            ]
        ]
    },
    {
        "id": "cf1609c7fe63746f",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "sudo mkdir /var/log/nginx/ && sudo touch /var/log/nginx/access.log && sudo touch /var/log/nginx/error.log ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "prepare nginx logs",
        "x": 810,
        "y": 1480,
        "wires": [
            [
                "96166fabc2896f6e"
            ],
            [],
            []
        ]
    },
    {
        "id": "46e08a307a6dec9a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/MACliontron",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "cbf30e0f02058474",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "\"\"",
        "func": "msg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 800,
        "wires": [
            [
                "46e08a307a6dec9a",
                "ebf8f0d95775f8c0"
            ]
        ]
    },
    {
        "id": "bea1b8adfd665b19",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/accesspoint",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "ac2bdf1ff896995e",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "true",
        "func": "msg.payload=\"active\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 840,
        "wires": [
            [
                "bea1b8adfd665b19"
            ]
        ]
    },
    {
        "id": "46530285bed2c8f7",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "yes",
        "func": "msg.payload=\"yes\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "1b3788d8c3da1f49"
            ]
        ]
    },
    {
        "id": "1be9db15ce86f0ba",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "never",
        "func": "msg.payload=\"never\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "79be4865bb2a8ab1",
                "7cc2e4934d57dbd8"
            ]
        ]
    },
    {
        "id": "80e17f8d5562602b",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/MACbtscale",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "c4ed3e1ca39f0ea8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/MACbtbat",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "378fc34dbd20af2d",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "bt devices",
        "func": "msg.payload=\"Scan Bluetooth first\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 920,
        "wires": [
            [
                "80e17f8d5562602b",
                "c4ed3e1ca39f0ea8"
            ]
        ]
    },
    {
        "id": "cfcfc1d9cdfa16dc",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "--> get installed packages and npm dependencies and upload both files to gitlab! then remove the files from image!! <-- (doubleclick for commands)",
        "info": "## packages:\ndpkg --get-selections > packages.txt && sed -i 's/\\s.*$//' packages.txt\n\n### install command\nsudo apt install $(cat ~/pekaway/packages.txt) -y\n\n## pip3 modules:\n(get pip3 list, remove whitespaces, remove headings)\npip3 list > pip3list.txt && sed -i 's/\\s.*$//' pip3list.txt && sed -i '1,2d' pip3list.txt\n\n\n### install command:\npip3 install -r ~/pekaway/pip3list.txt\n\n\n## NR dependencies in folder:\n~/.node-red/package.json",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "c4ca517da19171fa",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/BatteryDataDelivery",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "a53683131cccca37",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "\"\"",
        "func": "msg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2860,
        "wires": [
            [
                "6821c3fd019ea57a",
                "ea166ee032458e44",
                "8b19f036d10390b6",
                "096a34a5e36842f8",
                "f3b95a126c1d8dc2"
            ]
        ]
    },
    {
        "id": "9247f3d2a3df5fcf",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/LFBros",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "00d32c9136ce3d73",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "false",
        "func": "msg.payload=false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3039,
        "wires": [
            [
                "9247f3d2a3df5fcf",
                "88e2a3c85c1d7dca"
            ]
        ]
    },
    {
        "id": "75c69cd8e59757aa",
        "type": "link in",
        "z": "d1a4ceb114f5619d",
        "name": "version",
        "links": [
            "5741e6776c25282c",
            "5897b8c328eb2359"
        ],
        "x": 435,
        "y": 400,
        "wires": [
            [
                "df510302d2e7a7ea"
            ]
        ]
    },
    {
        "id": "e9f9d143046e1c10",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "save relay status",
        "func": "var check2 = flow.get(\"update\");\n\nif (check2 != true) {\n    msg.payload = {\n        \"Wone\":false,\n        \"Wtwo\":false,\n        \"Wthree\":false,\n        \"Wfour\":false,\n        \"Wfive\":false,\n        \"Wsix\":false,\n        \"Wseven\":false,\n        \"Weight\":false\n    }\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 680,
        "wires": [
            [
                "8667e776f8adf507"
            ]
        ]
    },
    {
        "id": "8667e776f8adf507",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelaystatusload",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 970,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c0fc1118f9a23d83",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/heatconnect",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2b1d9a655a0278d5",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "0",
        "func": "msg.payload=0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            [
                "c0fc1118f9a23d83"
            ]
        ]
    },
    {
        "id": "ebf8f0d95775f8c0",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmeripaddr",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 970,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a2bb6610fc18f6c1",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm1empty",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "73e2b02281938ce9",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm2empty",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "8a1e55f51152cd55",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm3empty",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b6dff6b3260641",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm4empty",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2e4535f76eea66f8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm1full",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "0645aa63613d05f8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm2full",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "6b3c53caeeb2f7d3",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm3full",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "ede20642c670bfb9",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/ohm4full",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "e89c87d725624069",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = 0\nnode.send([msg, null])\nmsg.payload = 190\nnode.send([null, msg])\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "a2bb6610fc18f6c1",
                "73e2b02281938ce9",
                "8a1e55f51152cd55",
                "a4b6dff6b3260641"
            ],
            [
                "2e4535f76eea66f8",
                "0645aa63613d05f8",
                "6b3c53caeeb2f7d3",
                "ede20642c670bfb9"
            ]
        ]
    },
    {
        "id": "d715326032d608bc",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "2c671e4e53fa1865",
                "1291fc2be14d2dcc"
            ]
        ]
    },
    {
        "id": "b40dff63bb0d72a2",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "cat /dev/null > ~/.bash_history && history -c && cd /boot && sudo rm -rf System\\ Volume\\ Information/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 610,
        "y": 1600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "88e2a3c85c1d7dca",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/clienttimetoolbar",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "80aac4a543168369",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = {\"timers\":[]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1320,
        "wires": [
            [
                "4188613f409741a3",
                "1547bdd93dd5aed9",
                "b08ed5523254f3b8"
            ]
        ]
    },
    {
        "id": "4188613f409741a3",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/relaytimer",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "1547bdd93dd5aed9",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wrelaytimer",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "b08ed5523254f3b8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmertimer",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 960,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4d3f0d5fa073f4bc",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = {\n    \"relays\": {\n        \"one\":false,\n        \"two\":false,\n        \"three\":false,\n        \"four\":false,\n        \"five\":false,\n        \"six\":false,\n        \"seven\":false,\n        \"eight\":false\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1660,
        "wires": [
            [
                "1c799953a75065c8",
                "8efb9722e15ee413",
                "f4508367af9c2522",
                "887b426516febe4d",
                "ea4483decf8ae05d",
                "1da9ad0990f00a31",
                "4566ccbddcd30be9",
                "7832650d399bd2e9",
                "5218f0ecbb34f59b",
                "b4d79d33182505d9"
            ]
        ]
    },
    {
        "id": "1c799953a75065c8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput1",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "8efb9722e15ee413",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput2",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "f4508367af9c2522",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput3",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "887b426516febe4d",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput4",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ea4483decf8ae05d",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput5",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "1da9ad0990f00a31",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/mcpinput6",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "4566ccbddcd30be9",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "switch (mcpinputs)",
        "func": "msg.payload = \"switch\"\nvar i = 1\nwhile (i <= 6) {\n    msg.filename = \"pekaway/mcpinput\"+i+\"_type\"\n    i = i+1\n    node.send(msg)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1900,
        "wires": [
            [
                "993aa06ade8e9271"
            ]
        ]
    },
    {
        "id": "993aa06ade8e9271",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "filename",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1100,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "754751d4424065b2",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "set zigbee config",
        "func": "msg.payload = \"homeassistant: false\\npermit_join: true\\nmqtt:\\n  base_topic: zigbee2mqtt\\n  server: mqtt://localhost:1883\\nserial:\\n  port: /dev/ttyACM0\\nadvanced:\\n  network_key: GENERATE\\nlog_level: info\\nlog_output:\\n  - console\\nfrontend:\\n  port: 8099\\nexperimental:\\n  new_api: true\\n  homeassistant_legacy_entity_attributes: false\\n  legacy_api: false\\n  legacy_availability_payload: false\\ndevice_options:\\n  legacy: false\\n\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 3160,
        "wires": [
            [
                "a8e46a1e3a61dbea"
            ]
        ]
    },
    {
        "id": "a8e46a1e3a61dbea",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "/opt/zigbee2mqtt/data/configuration.yaml",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 460,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "6f287cdf7f49ac25",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 3140,
        "wires": [
            [
                "754751d4424065b2",
                "d2f6c35cbb4baadc"
            ]
        ]
    },
    {
        "id": "24aff5f6262535e3",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "Also manually delete devices from zigbee frontend before injecting (see port 8099)",
        "info": "",
        "x": 470,
        "y": 3120,
        "wires": []
    },
    {
        "id": "6256e635b2788156",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 3200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d2f6c35cbb4baadc",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "delete zigbee logs",
        "func": "msg.payload = \"cd /opt/zigbee2mqtt/data/log && rm -R -- */\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 3200,
        "wires": [
            [
                "6256e635b2788156"
            ]
        ]
    },
    {
        "id": "57de80749f0a9d39",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "↑ change version number ↑",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "735a027de9335c02",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmytemp1name",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "c50105393e8a5166",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmytemp2name",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "36871bdad37d0b9c",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "func": "msg.payload = \"Dimmytemp1\"\nnode.send([msg, null])\nmsg.payload = \"Dimmytemp2\"\nnode.send([null, msg])",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1400,
        "wires": [
            [
                "735a027de9335c02"
            ],
            [
                "c50105393e8a5166"
            ]
        ]
    },
    {
        "id": "b4892667491de112",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmytemp",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 340,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "881dc71826fd114f",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/update",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 600,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1291fc2be14d2dcc",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "set update true",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "881dc71826fd114f"
            ]
        ]
    },
    {
        "id": "030ca66dad517d71",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "wpa config",
        "func": "msg.payload = \"echo 'country=DE\\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1' | sudo tee /etc/wpa_supplicant/wpa_supplicant.conf\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 357,
        "y": 240,
        "wires": [
            [
                "35606ab4b6b094e8",
                "2fcd09923bcf6c7a"
            ]
        ]
    },
    {
        "id": "35606ab4b6b094e8",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6d5ed2bb99e7698f",
        "type": "inject",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "030ca66dad517d71"
            ]
        ]
    },
    {
        "id": "aa1d4edfa94575a4",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "dnsmasq",
        "func": "msg.payload = \"sudo truncate -s 0 /var/lib/misc/dnsmasq.leases && sudo systemctl restart dnsmasq.service\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 687,
        "y": 240,
        "wires": [
            [
                "f34b38a11477d9b7",
                "b2500bb514f52d93"
            ]
        ]
    },
    {
        "id": "2fcd09923bcf6c7a",
        "type": "delay",
        "z": "d1a4ceb114f5619d",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "aa1d4edfa94575a4"
            ]
        ]
    },
    {
        "id": "f34b38a11477d9b7",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 850,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a403ddbaa2170ef3",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "clean npm & apt",
        "func": "msg.payload = \"sudo npm cache verify && sudo npm cache clean --force && sudo apt-get clean && sudo apt clean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1007,
        "y": 240,
        "wires": [
            [
                "570844da216d9828"
            ]
        ]
    },
    {
        "id": "b2500bb514f52d93",
        "type": "delay",
        "z": "d1a4ceb114f5619d",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "a403ddbaa2170ef3"
            ]
        ]
    },
    {
        "id": "570844da216d9828",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "9278dbb52bcd0c99"
            ],
            [],
            []
        ]
    },
    {
        "id": "6821c3fd019ea57a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/LFBrosON",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "ea166ee032458e44",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/LFBrosOFF",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "8b19f036d10390b6",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/LFBrosPLUS",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "096a34a5e36842f8",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/LFBrosMINUS",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "f3b95a126c1d8dc2",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/installdate",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a3d3a808aaf772",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "↓ In Progress ↓",
        "info": "",
        "x": 1560,
        "y": 380,
        "wires": []
    },
    {
        "id": "ee4e56a146a92df7",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "clean /var/log/ folder",
        "func": "msg.payload = \"sudo rm /var/log/*\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 240,
        "wires": [
            [
                "13a587f7e3d6cb2b"
            ]
        ]
    },
    {
        "id": "9278dbb52bcd0c99",
        "type": "delay",
        "z": "d1a4ceb114f5619d",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "ee4e56a146a92df7"
            ]
        ]
    },
    {
        "id": "13a587f7e3d6cb2b",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1650,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "14967efb2a1d6f5c",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmer_maxpercent",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1130,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "7832650d399bd2e9",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "100",
        "func": "msg.payload = 100\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1940,
        "wires": [
            [
                "14967efb2a1d6f5c"
            ]
        ]
    },
    {
        "id": "789eb5a529ea0b96",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "prepare dimmeripaddr & NSPanel tft",
        "func": "msg.payload = \"echo \\\"\\\" > ~/pekaway/dimmeripaddr & mkdir -p ~/pekaway/userdata/NSPanel & cp ~/pekaway/VanPI_NSPANEL.tft ~/pekaway/userdata/NSPanel/VanPI_NSPANEL.tft\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "ca25518706fbec74"
            ]
        ]
    },
    {
        "id": "a71d3fad3c0f800a",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "sudo rm -rf pekaway/userdata/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 1540,
        "wires": [
            [
                "789eb5a529ea0b96"
            ],
            [],
            []
        ]
    },
    {
        "id": "d3e946218ed556b6",
        "type": "comment",
        "z": "d1a4ceb114f5619d",
        "name": "Make sure VanPI_NSPANEL.tft and berry driver (autoexec.be) are present in ~/pekaway",
        "info": "",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "851d036a4b159769",
        "type": "delay",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 1480,
        "wires": [
            [
                "a71d3fad3c0f800a"
            ]
        ]
    },
    {
        "id": "1a4d8823f975088a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/wifirelay",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 330,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "22eaad2927f83634",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmersettings",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 350,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "fc7f85ee99cc6e2a",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/dimmerdebugmode",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 360,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "5218f0ecbb34f59b",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "true",
        "func": "msg.payload = \"true\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1980,
        "wires": [
            [
                "af3950bdb07473f4"
            ]
        ]
    },
    {
        "id": "af3950bdb07473f4",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/stdrelay",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "b4d79d33182505d9",
        "type": "function",
        "z": "d1a4ceb114f5619d",
        "name": "1.05",
        "func": "msg.payload = 1.05\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2020,
        "wires": [
            [
                "7fa86942dc6c6aa4"
            ]
        ]
    },
    {
        "id": "7fa86942dc6c6aa4",
        "type": "file",
        "z": "d1a4ceb114f5619d",
        "name": "",
        "filename": "pekaway/shuntcalibrate",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1110,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "96166fabc2896f6e",
        "type": "exec",
        "z": "d1a4ceb114f5619d",
        "command": "sudo mkdir -p /var/log/mosquitto && sudo touch /var/log/mosquitto/mosquitto.log && sudo chmod 0666 /var/log/mosquitto/mosquitto.log",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "prepare mosquitto logs",
        "x": 1060,
        "y": 1480,
        "wires": [
            [],
            [],
            []
        ]
    }
]
